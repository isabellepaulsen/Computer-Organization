<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_CeLmsLhrEe2Kif300Z6m1g" name="WorkLoad">
    <eAnnotations xmi:id="_CgVi0LhrEe2Kif300Z6m1g" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_CgVi0bhrEe2Kif300Z6m1g" source="codegen">
        <details xmi:id="_CgVi0rhrEe2Kif300Z6m1g" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_Dk8acLhrEe2Kif300Z6m1g" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;1424622298/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;1809359660/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;820905503/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;2224306677/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;3281869805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;4278626487/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;4123949576/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1317884368/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;2029188156/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;1885349989/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;79606901/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;2664873414/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;1965213309/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;3709953189/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;27414850/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;889275975/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;4084289374/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;1064623610/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;2298633738/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;1295846020/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;176383205/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;1686457629/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;888741420/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;1775762007/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;2356346042/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;459276445/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1826505669/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;1981269113/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;1346116292/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;1765515208/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;4124722036/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3701604498/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;1044364042/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;4276577887/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;3500031587/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;4240254377/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1201325015/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;1088040009/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;76739592/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;2628899863/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;662583105/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1809110799/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;1058057599/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2292645629/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;929334119/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;392587375/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;2072540828/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;2628500970/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;240224972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;820659454/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;3343049115/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3110368559/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;2370839513/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;3931163786/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;1232525323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;27306893/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;3371724965/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1441226277/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2726194203/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1377291719/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1981400958/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;790761677/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;485526877/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;346020847/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;1549849953/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;2579581755/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;4124706129/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;3074030464/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;987848086/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_C7_kELhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_C7_kEbhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_C7_kErhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_C7_kE7hrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_C7_kFLhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_C7_kFbhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_C7_kFrhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_C7_kF7hrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_C7_kGLhrEe2Kif300Z6m1g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_C7vscLhrEe2Kif300Z6m1g" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_C7vscbhrEe2Kif300Z6m1g" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_C7vscrhrEe2Kif300Z6m1g" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_C7wTgrhrEe2Kif300Z6m1g" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_C8DOcLhrEe2Kif300Z6m1g" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_DFvV8rhrEe2Kif300Z6m1g" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_C8ZzwLhrEe2Kif300Z6m1g" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DF9YYrhrEe2Kif300Z6m1g" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_C8bB4LhrEe2Kif300Z6m1g" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DF9_cLhrEe2Kif300Z6m1g" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_DF9_crhrEe2Kif300Z6m1g" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9icMLhrEe2Kif300Z6m1g" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_DGVL0LhrEe2Kif300Z6m1g" general="_DFdpILhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG2wQLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG2wQbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1ILhrEe2Kif300Z6m1g" name="AbstractMap" specification="_C9jDQbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1IbhrEe2Kif300Z6m1g" type="_C9icMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9jDQbhrEe2Kif300Z6m1g" name="AbstractMap" method="_DHS1ILhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C9jDQrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C9jDQ7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C9jDRLhrEe2Kif300Z6m1g" type="_C9icMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9jqULhrEe2Kif300Z6m1g" name="Activation">
              <generalization xmi:id="_DFgsdLhrEe2Kif300Z6m1g" general="_C_ot8LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG2wQrhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g" isReadOnly="true" association="_DH55ILhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG2wRLhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g" isReadOnly="true" association="_DH6gMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG2wRrhrEe2Kif300Z6m1g" name="additionalScheduleTimes" type="_DFeQMLhrEe2Kif300Z6m1g" isReadOnly="true" association="_DH6gM7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3XUbhrEe2Kif300Z6m1g" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DG3XUrhrEe2Kif300Z6m1g" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DGVy4bhrEe2Kif300Z6m1g" client="_C9jqULhrEe2Kif300Z6m1g" supplier="_DGVL07hrEe2Kif300Z6m1g" contract="_DGVL07hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1IrhrEe2Kif300Z6m1g" name="Activation" specification="_C9jqUbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1I7hrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHS1JLhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		setName(name);
		this.edges = new ArrayList&lt;Edge>();
		this.coordinators = new ArrayList&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1JbhrEe2Kif300Z6m1g" name="Activation" specification="_DFfeULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1JrhrEe2Kif300Z6m1g" name="elem" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHS1J7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHS1KLhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(elem, time);
		this.edges = new ArrayList&lt;Edge>();
		this.edges.addAll(elem.getEdges());
		this.coordinators = new ArrayList&lt;String>();
		this.coordinators.addAll(elem.getCoordinators());
		// conflicts = new Set&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.conflicts.addAll(elem.getConflicts());
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1KbhrEe2Kif300Z6m1g" name="clone" specification="_C9kRYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1KrhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();
		var clone = new Activation(this, time);
		return clone;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1K7hrEe2Kif300Z6m1g" name="getEdgesByReleaseTime" specification="_C9kRZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1LLhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1LbhrEe2Kif300Z6m1g" name="getEdgesByLatestReleaseTime" specification="_C9kRZrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1LrhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1L7hrEe2Kif300Z6m1g" name="getEdgesByPeriod" specification="_C9k4cbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1MLhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1MbhrEe2Kif300Z6m1g" name="getEdgesByDeadline" specification="_C9k4c7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1MrhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1M7hrEe2Kif300Z6m1g" name="getEdgesByPriority" specification="_C9k4dbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1NLhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new 
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1NbhrEe2Kif300Z6m1g" name="addEdges" specification="_DGVy47hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1NrhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.edges.addAll(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1N7hrEe2Kif300Z6m1g" name="addEdge" specification="_DFfeXLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1OLhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.edges.add(edge);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHS1ObhrEe2Kif300Z6m1g" name="increaseEdgePhases" specification="_C9lfgbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHS1OrhrEe2Kif300Z6m1g" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed
			for (Edge edge: this.edges) {
				var oldPhase = edge.getPhase();
				edge.setPhase(oldPhase+additionalOffset);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcMLhrEe2Kif300Z6m1g" name="updatePriorityAndRelease" specification="_C9lfg7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcMbhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();
		if (currentTime >= lastUpdateTime) {
			for(Edge edge: edges) {
				edge.setNextReleaseTime(currentTime);
			}
			
			/* get the edges with earliest release time and 
			 * highest priority ==> get head of the queue just built
			 */
			var edgesByReleaseTime = getEdgesByReleaseTime();
			var firstEdge = edgesByReleaseTime.element();
			setPhase(firstEdge.getPhase()); 
			var edgesByPeriod = getEdgesByPeriod();
			firstEdge = edgesByPeriod.element();
			setPeriod(firstEdge.getPeriod()); // shortest period 
			var edgesByDeadline = getEdgesByDeadline();
			firstEdge = edgesByDeadline.element();
			setDeadline(firstEdge.getDeadline()); // earliest deadline
			var edgesByPrioriy = getEdgesByPriority();
			firstEdge = edgesByPrioriy.element();
			setPriority(firstEdge.getPriority());
			
			/* With the partition scheduling parameters set to match  
			 * the highest priority edge with respect to the parameter, 
			 * we can now set the next release time based on the
			 * current time.
			 * */
			setNextReleaseTime(currentTime);
			
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcMrhrEe2Kif300Z6m1g" name="addConflict" specification="_C9mGkLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcM7hrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcNLhrEe2Kif300Z6m1g" name="addConflicts" specification="_DGWZ8bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcNbhrEe2Kif300Z6m1g" name="conflicts" type="_DFeQNrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcNrhrEe2Kif300Z6m1g" name="addCoordinator" specification="_C9mGkrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcN7hrEe2Kif300Z6m1g" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcOLhrEe2Kif300Z6m1g" name="addCoordinators" specification="_DGWZ9LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcObhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcOrhrEe2Kif300Z6m1g" name="addScheduleTimes" specification="_DGWZ97hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcO7hrEe2Kif300Z6m1g" name="scheduleTime" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcPLhrEe2Kif300Z6m1g" name="getNextScheduleTime" specification="_C9mGlLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcPbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHTcPrhrEe2Kif300Z6m1g" type="_C-34-LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		while (iter.hasNext() ) {
			var next = iter.next();
			if (next.getStartTime() > time) {
				result = next;
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcP7hrEe2Kif300Z6m1g" name="getMatchingEndTime" specification="_C9mGlrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcQLhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHTcQbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		// var nextEndTime = time;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {
			// nextEndTime = iter.next().getEndTime();
			var scheduleTime = iter.next();
			if (time == scheduleTime.getStartTime()) {
				result = scheduleTime.getEndTime();
				break;
			}
		}
		
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcQrhrEe2Kif300Z6m1g" name="getNextStartTime" specification="_C9mtobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcQ7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHTcRLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextStartTime = time;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {
			nextStartTime = iter.next().getStartTime();
		}
		if (nextStartTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextStartTime = Integer.MAX_VALUE;
			
		}
		return nextStartTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcRbhrEe2Kif300Z6m1g" name="getNextEndTime" specification="_C9mtpLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcRrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHTcR7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextEndTime = time;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {
			nextEndTime = iter.next().getEndTime();
		}
		if (nextEndTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextEndTime = Integer.MAX_VALUE;
			
		}
		return nextEndTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcSLhrEe2Kif300Z6m1g" name="getNumEdges" specification="_C9mtp7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcSbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcSrhrEe2Kif300Z6m1g" name="compareTo" specification="_DFgFYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcS7hrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHTcTLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcTbhrEe2Kif300Z6m1g" name="conflictExists" specification="_DFgFZrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcTrhrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHTcT7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* create a copy of this.conflicts and obj.conflicts
		 * and then check the intersection of the two 
		 * sets. 
		 * Conflicts exists if |intersection| > 0
		 */
		var conflicts = new HashSet&lt;String>();
		conflicts.addAll(getConflicts());
		var objConflicts = new HashSet&lt;String>();
		objConflicts.addAll(obj.getConflicts());
		conflicts.retainAll(objConflicts); // get the intersection
		if (conflicts.size() > 0) {
			result = true; // |intersection| > 0 => conflict
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcULhrEe2Kif300Z6m1g" name="canCombine" specification="_DFgFabhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcUbhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHTcUrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency.
				 */
				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcU7hrEe2Kif300Z6m1g" name="getDelta" specification="_C9nUsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcVLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;
		for (Edge edge: getEdges()) {
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());
		}
		return maxTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcVbhrEe2Kif300Z6m1g" name="getExecutionDuration" specification="_C9nUsrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcVrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 */
		return getDelta() + (getNumEdges() - 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcV7hrEe2Kif300Z6m1g" name="getCombinedExecutionDuration" specification="_DFgFbLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcWLhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHTcWbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 * So, if combined, we consider edges in both activations
		 */
		var result = 0;
		if (a2 != null) {
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcWrhrEe2Kif300Z6m1g" name="printAll" specification="_C9nUtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcW7hrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.printAll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcXLhrEe2Kif300Z6m1g" name="printAll" specification="_C9nUtrhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>super.print();
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcXbhrEe2Kif300Z6m1g" name="printEdges" specification="_DFgFb7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcXrhrEe2Kif300Z6m1g" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHTcX7hrEe2Kif300Z6m1g" name="edges" type="_C-uH8LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);
		printEdges(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHTcYLhrEe2Kif300Z6m1g" name="printEdges" specification="_DFgscbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHTcYbhrEe2Kif300Z6m1g" name="edges" type="_C-uH8LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();
 		q.addAll(edges);
 		Iterator&lt;Edge> qValue = q.iterator();
         while (qValue.hasNext()) {
         	var next = q.poll();
         	next.print();
         }
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9jqUbhrEe2Kif300Z6m1g" name="Activation" visibility="package" method="_DHS1IrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C9jqU7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C9jqVLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C9jqUrhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9jqVbhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9kRYLhrEe2Kif300Z6m1g" name="clone" method="_DHS1KbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFfeVrhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9kRZLhrEe2Kif300Z6m1g" name="getEdgesByReleaseTime" method="_DHS1K7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJALhrEe2Kif300Z6m1g">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFfeV7hrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9kRZrhrEe2Kif300Z6m1g" name="getEdgesByLatestReleaseTime" method="_DHS1LbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJAbhrEe2Kif300Z6m1g">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFfeWLhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9k4cbhrEe2Kif300Z6m1g" name="getEdgesByPeriod" method="_DHS1L7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJArhrEe2Kif300Z6m1g">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFfeWbhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9k4c7hrEe2Kif300Z6m1g" name="getEdgesByDeadline" method="_DHS1MbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJA7hrEe2Kif300Z6m1g">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFfeWrhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9k4dbhrEe2Kif300Z6m1g" name="getEdgesByPriority" method="_DHS1M7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJBLhrEe2Kif300Z6m1g">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFfeW7hrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9lfgbhrEe2Kif300Z6m1g" name="increaseEdgePhases" method="_DHS1ObhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJBbhrEe2Kif300Z6m1g">
                  <body>Increase the phase of each edge by the input parameter.
	 * 
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9lfgrhrEe2Kif300Z6m1g" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9lfg7hrEe2Kif300Z6m1g" name="updatePriorityAndRelease" method="_DHTcMLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJBrhrEe2Kif300Z6m1g">
                  <body>Updates priority and release time of 
	 * this activation.&lt;br>
	 * 
	 * The priority of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br>
	 *
	 * The release time of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_C9lfhLhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mGkLhrEe2Kif300Z6m1g" name="addConflict" method="_DHTcMrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9mGkbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mGkrhrEe2Kif300Z6m1g" name="addCoordinator" method="_DHTcNrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9mGk7hrEe2Kif300Z6m1g" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mGlLhrEe2Kif300Z6m1g" name="getNextScheduleTime" method="_DHTcPLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJCLhrEe2Kif300Z6m1g">
                  <body>getNextScheduleTime returns the next entry in the additional
	 * schedule time array list whose start time is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9mGlbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFfeXrhrEe2Kif300Z6m1g" type="_C-34-LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mGlrhrEe2Kif300Z6m1g" name="getMatchingEndTime" method="_DHTcP7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJCbhrEe2Kif300Z6m1g">
                  <body>getMatchingEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9mGl7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9mtoLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mtobhrEe2Kif300Z6m1g" name="getNextStartTime" method="_DHTcQrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJCrhrEe2Kif300Z6m1g">
                  <body>getNextStartTime returns the next start time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9mtorhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9mto7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mtpLhrEe2Kif300Z6m1g" name="getNextEndTime" method="_DHTcRbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJC7hrEe2Kif300Z6m1g">
                  <body>getNextEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9mtpbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9mtprhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9mtp7hrEe2Kif300Z6m1g" name="getNumEdges" method="_DHTcSLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9mtqLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9nUsLhrEe2Kif300Z6m1g" name="getDelta" method="_DHTcU7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJDLhrEe2Kif300Z6m1g">
                  <body>Returns the maximum number of transmissions
	 * needed on any link in activation to ensure e2e 
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9nUsbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9nUsrhrEe2Kif300Z6m1g" name="getExecutionDuration" method="_DHTcVbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9nUs7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9nUtLhrEe2Kif300Z6m1g" name="printAll" method="_DHTcWrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9nUtbhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9nUtrhrEe2Kif300Z6m1g" name="printAll" method="_DHTcXLhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DFfeULhrEe2Kif300Z6m1g" name="Activation" visibility="package" method="_DHS1JbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFfeU7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFfeVLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFfeUbhrEe2Kif300Z6m1g" name="elem" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFfeUrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFfeVbhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFfeXLhrEe2Kif300Z6m1g" name="addEdge" method="_DHS1N7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFfeXbhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgFYLhrEe2Kif300Z6m1g" name="compareTo" method="_DHTcSrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgFYbhrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFgFYrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgFZrhrEe2Kif300Z6m1g" name="conflictExists" method="_DHTcTbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgFZ7hrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFgFaLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgFabhrEe2Kif300Z6m1g" name="canCombine" method="_DHTcULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgFarhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFgFa7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgFbLhrEe2Kif300Z6m1g" name="getCombinedExecutionDuration" method="_DHTcV7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgFbbhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFgFbrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgFb7hrEe2Kif300Z6m1g" name="printEdges" visibility="private" method="_DHTcXbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgFcLhrEe2Kif300Z6m1g" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFgFcbhrEe2Kif300Z6m1g" name="edges" type="_C-uH8LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFgscbhrEe2Kif300Z6m1g" name="printEdges" visibility="private" method="_DHTcYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFgscrhrEe2Kif300Z6m1g" name="edges" type="_C-uH8LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGVy47hrEe2Kif300Z6m1g" name="addEdges" method="_DHS1NbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGVy5LhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGWZ8bhrEe2Kif300Z6m1g" name="addConflicts" method="_DHTcNLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGWZ8rhrEe2Kif300Z6m1g" name="conflicts" type="_DFeQNrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGWZ9LhrEe2Kif300Z6m1g" name="addCoordinators" method="_DHTcOLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGWZ9bhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGWZ97hrEe2Kif300Z6m1g" name="addScheduleTimes" method="_DHTcOrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlJB7hrEe2Kif300Z6m1g">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGWZ-LhrEe2Kif300Z6m1g" name="scheduleTime" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9qYALhrEe2Kif300Z6m1g" name="Activations">
              <generalization xmi:id="_DFhTgLhrEe2Kif300Z6m1g" general="_C9icMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3XU7hrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG3XVLhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9qYAbhrEe2Kif300Z6m1g" name="BasicPoset">
              <ownedComment xmi:id="_DHlJDbhrEe2Kif300Z6m1g">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
local connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DFhTh7hrEe2Kif300Z6m1g" general="_C-gFgbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDQLhrEe2Kif300Z6m1g" name="BasicPoset" specification="_DFhTgrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDQbhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUDQrhrEe2Kif300Z6m1g" type="_C9qYAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFhTgrhrEe2Kif300Z6m1g" name="BasicPoset" visibility="package" method="_DHUDQLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFhThLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFhThbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFhTg7hrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFhThrhrEe2Kif300Z6m1g" type="_C9qYAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9q_ELhrEe2Kif300Z6m1g" name="ChannelAnalysis">
              <ownedComment xmi:id="_DHlJDrhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG3XVbhrEe2Kif300Z6m1g" name="program" visibility="private" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DH6gNrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3-YLhrEe2Kif300Z6m1g" name="programTable" visibility="private" type="_C-rEoLhrEe2Kif300Z6m1g" association="_DH7HQbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3-YrhrEe2Kif300Z6m1g" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDQ7hrEe2Kif300Z6m1g" name="ChannelAnalysis" specification="_DFh6kLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDRLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUDRbhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();
 this.programTable = program.getSchedule();
 conflictExists = false;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDRrhrEe2Kif300Z6m1g" name="ChannelAnalysis" specification="_DFh6lbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDR7hrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUDSLhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.program = program;
 this.programTable = program.getSchedule();
 conflictExists = false;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDSbhrEe2Kif300Z6m1g" name="isChannelConflict" specification="_C9rmILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDSrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9rmILhrEe2Kif300Z6m1g" name="isChannelConflict" method="_DHUDSbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9rmIbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFh6kLhrEe2Kif300Z6m1g" name="ChannelAnalysis" visibility="package" method="_DHUDQ7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFh6krhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFh6k7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFh6kbhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFh6lLhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFh6lbhrEe2Kif300Z6m1g" name="ChannelAnalysis" visibility="package" method="_DHUDRrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFh6l7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFh6mLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFh6lrhrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFh6mbhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9rmIrhrEe2Kif300Z6m1g" name="ChannelVisualization">
              <ownedComment xmi:id="_DHlJD7hrEe2Kif300Z6m1g">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.
&lt;p>

CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested
in Warp.

@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFh6n7hrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3-ZLhrEe2Kif300Z6m1g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG3-ZbhrEe2Kif300Z6m1g" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG3-ZrhrEe2Kif300Z6m1g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG3-Z7hrEe2Kif300Z6m1g" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG3-aLhrEe2Kif300Z6m1g" name="warp" visibility="private" type="_C_YPQLhrEe2Kif300Z6m1g" association="_DH7HRLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG3-arhrEe2Kif300Z6m1g" name="ca" visibility="private" type="_C9q_ELhrEe2Kif300Z6m1g" association="_DH7uULhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDS7hrEe2Kif300Z6m1g" name="ChannelVisualization" specification="_DFh6mrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDTLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUDTbhrEe2Kif300Z6m1g" type="_C9rmIrhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
 this.warp = warp;
 this.ca = warp.toChannelAnalysis();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFh6mrhrEe2Kif300Z6m1g" name="ChannelVisualization" visibility="package" method="_DHUDS7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFh6nLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFh6nbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFh6m7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFh6nrhrEe2Kif300Z6m1g" type="_C9rmIrhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9s0QLhrEe2Kif300Z6m1g" name="Channels">
              <ownedComment xmi:id="_DHlwELhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG4lcLhrEe2Kif300Z6m1g" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG4lcrhrEe2Kif300Z6m1g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG4ldLhrEe2Kif300Z6m1g" name="channelsAvailable" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH7uU7hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDU7hrEe2Kif300Z6m1g" name="Channels" specification="_C9tbVrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDVLhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDVbhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDVrhrEe2Kif300Z6m1g" type="_C9s0QLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;
 this.verbose = verbose;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDV7hrEe2Kif300Z6m1g" name="getChannelSet" specification="_C9uCYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDWLhrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDWbhrEe2Kif300Z6m1g" type="_DFeQMrhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));
 return channelSet;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDWrhrEe2Kif300Z6m1g" name="addNewChannelSet" specification="_C9uCY7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);
 channelsAvailable.add(channels);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDW7hrEe2Kif300Z6m1g" name="isEmpty" specification="_C9uCZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDXLhrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDXbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this
                                                          // timeSlot
 return channelSet.isEmpty(); // returns true channel set is empty and false if not
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDXrhrEe2Kif300Z6m1g" name="removeChannel" specification="_C9upcrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDX7hrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDYLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDYbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 ChannelSet channels = channelsAvailable.get(timeSlot);
 result = channels.remove(channel);
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDYrhrEe2Kif300Z6m1g" name="addChannel" specification="_C9updrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDY7hrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDZLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUDZbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set
 result = channels.add(channel); // remove the channel, returning the result
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDZrhrEe2Kif300Z6m1g" name="getNumChannels" specification="_C9uperhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUDZ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9tbVrhrEe2Kif300Z6m1g" name="Channels" visibility="package" method="_DHUDU7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C9tbWbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C9tbWrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C9tbV7hrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9tbWLhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9tbW7hrEe2Kif300Z6m1g" type="_C9s0QLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9uCYLhrEe2Kif300Z6m1g" name="getChannelSet" method="_DHUDV7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9uCYbhrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGXoEbhrEe2Kif300Z6m1g" type="_DFeQMrhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9uCY7hrEe2Kif300Z6m1g" name="addNewChannelSet" method="_DHUDWrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C9uCZLhrEe2Kif300Z6m1g" name="isEmpty" method="_DHUDW7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9upcLhrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9upcbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9upcrhrEe2Kif300Z6m1g" name="removeChannel" method="_DHUDXrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9upc7hrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9updLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9updbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9updrhrEe2Kif300Z6m1g" name="addChannel" method="_DHUDYrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9upd7hrEe2Kif300Z6m1g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9upeLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9upebhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9uperhrEe2Kif300Z6m1g" name="getNumChannels" method="_DHUDZrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9upe7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_C9s0QbhrEe2Kif300Z6m1g" name="ChannelSet" visibility="private">
                <generalization xmi:id="_DGXBAbhrEe2Kif300Z6m1g" general="_DFeQMrhrEe2Kif300Z6m1g"/>
                <ownedAttribute xmi:id="_DG3-bLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG3-bbhrEe2Kif300Z6m1g" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDTrhrEe2Kif300Z6m1g" name="ChannelSet" specification="_C9s0QrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHUDT7hrEe2Kif300Z6m1g" type="_C9s0QbhrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>super();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUDULhrEe2Kif300Z6m1g" name="ChannelSet" specification="_C9tbUbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHUDUbhrEe2Kif300Z6m1g" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DHUDUrhrEe2Kif300Z6m1g" type="_C9s0QbhrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>super();
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1
     this.add(String.valueOf(i));
   }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_C9s0QrhrEe2Kif300Z6m1g" name="ChannelSet" visibility="private" method="_DHUDTrhrEe2Kif300Z6m1g">
                  <eAnnotations xmi:id="_C9s0Q7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_C9s0RLhrEe2Kif300Z6m1g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_C9tbULhrEe2Kif300Z6m1g" type="_C9s0QbhrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_C9tbUbhrEe2Kif300Z6m1g" name="ChannelSet" visibility="private" method="_DHUDULhrEe2Kif300Z6m1g">
                  <eAnnotations xmi:id="_C9tbU7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_C9tbVLhrEe2Kif300Z6m1g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_C9tbUrhrEe2Kif300Z6m1g" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_C9tbVbhrEe2Kif300Z6m1g" type="_C9s0QbhrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9vQgLhrEe2Kif300Z6m1g" name="CodeFragment">
              <ownedAttribute xmi:id="_DG4ld7hrEe2Kif300Z6m1g" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG4leLhrEe2Kif300Z6m1g" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG4lebhrEe2Kif300Z6m1g" name="edges" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH8VYLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5MgrhrEe2Kif300Z6m1g" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG5MhLhrEe2Kif300Z6m1g" name="codeFragment" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH8VY7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5Mh7hrEe2Kif300Z6m1g" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG5MibhrEe2Kif300Z6m1g" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqULhrEe2Kif300Z6m1g" name="CodeFragment" specification="_C9v3kLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqUbhrEe2Kif300Z6m1g" type="_C9vQgLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;
		this.channel = 0;
		this.edges = null;
		this.coordinator = null;
		this.codeFragment = new ArrayList&lt;String>();
		this.codeFragment.add(SLEEP);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqUrhrEe2Kif300Z6m1g" name="CodeFragment" specification="_DGXoErhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqU7hrEe2Kif300Z6m1g" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqVLhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqVbhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqVrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqV7hrEe2Kif300Z6m1g" type="_C9vQgLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;
		this.channel = channel;
		this.edges = edges;
		this.coordinator = coordinators.get(0);
		this.codeFragment = new ArrayList&lt;String>();
		if (multipleCoordinators(coordinators)) {
			reportIfDifferentCoordinators(coordinators);
		}	
		generateCodeFragment();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqWLhrEe2Kif300Z6m1g" name="getCoordinator" specification="_C9v3lLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqWbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqWrhrEe2Kif300Z6m1g" name="instructions" specification="_C9weobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqW7hrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return codeFragment;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqXLhrEe2Kif300Z6m1g" name="size" specification="_C9weo7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqXbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqXrhrEe2Kif300Z6m1g" name="generateCodeFragment" specification="_C9wepbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new 
				PriorityComparator&lt;Edge>(),this.edges);
		Iterator&lt;Edge> q = edgeQueue.iterator();
		var size = edgeQueue.size();
		/* the code length will be equal to 
		 * delta + #edges -1
		 */
		var codeLength = delta + size -1;
		var basicInstructions = new ArrayList&lt;String>();
		/* create basic instructions for each edge 
		 * and initial receiver set for each instruction
		 * */
		while(q.hasNext()) {
			var edge = edgeQueue.poll();
			var src = edge.getSrc();
			var snk = edge.getSnk();
			var flow = edge.getFlow();
			var instr = getBaseInstruction(flow,src,snk);
			basicInstructions.add(instr);
		}
		/* start building code fragments */
		
		codeFragment.add(basicInstructions.get(0));
		
		/* when size &lt; delta, we need to repeat the
		 * middle stage delta - size times
		 */
		var numRepeatStages = Math.max(0, delta - size);
		if (size &lt; delta) {
			numRepeatStages = delta - size;
		}
		
		/* build the initial code fragment */
		Integer localDelta = Math.min(size, delta);
		var instr = new String();
		var dropInstr = new String();
		var priorInstr = new String();
		for (int i = 1; i &lt; localDelta ; i++) { 
			instr = codeFragment.get(i-1) +
					&quot; else &quot; + basicInstructions.get(i);
			codeFragment.add(instr);
		}
		/* now repeat middle stage if size &lt; delta 
		 * otherwise, this for loop will be skipped
		 */
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { 
			instr = codeFragment.get(i-1);
			codeFragment.add(instr);
		}
		/* The first Instruction has been repeated
		 * delta times. Now it gets removed from
		 * the pipeline. E.g., with delta = 3 and
		 * size = 3
		 *  a &lt;-- dropInstr
		 *  ab
		 *  abc &lt;-- priorInstr
		 *  bc &lt;-- instr
		 */

		/* Now loop through dropping old instructions
		 * and adding new ones for size - localDelta times.
		 * This loop will be skipped if size = localDelta.
		 */
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);
			codeFragment.add(instr);
		}
		/* Now loop through dropping old instructions, draining
		 * the pipleline.
		 */
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			codeFragment.add(instr);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqX7hrEe2Kif300Z6m1g" name="getBaseInstruction" specification="_C9xFsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqYLhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqYbhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqYrhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqY7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();
		if (coordinator.equals(src)) {
			/* push instruction */
			instr += ifHas(flow,src,snk) + push(flow,src,snk);
		} else {
			/* pull instruction */
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);
		}
		return instr;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqZLhrEe2Kif300Z6m1g" name="push" specification="_C9xFtbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqZbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqZrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqZ7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqaLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqabhrEe2Kif300Z6m1g" name="pull" specification="_C9xFurhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqarhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqa7hrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqbLhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqbbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqbrhrEe2Kif300Z6m1g" name="ifHas" specification="_C9xswLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqb7hrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqcLhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqcbhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqcrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqc7hrEe2Kif300Z6m1g" name="ifNotHas" specification="_C9xsxbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqdLhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqdbhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqdrhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqd7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqeLhrEe2Kif300Z6m1g" name="wait" specification="_C9xsyrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqebhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqerhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqe7hrEe2Kif300Z6m1g" name="sleep" specification="_C9xszbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqfLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqfbhrEe2Kif300Z6m1g" name="reportIfDifferentCoordinators" specification="_DGYPJrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqfrhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;
		var coordinatorNames = this.coordinator;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					coordinatorNames += &quot;, &quot; + coordinators.get(i);
					numUniqueCoordinators++;
				}
			}
			if (numUniqueCoordinators > 1) {
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, 
						numUniqueCoordinators, this.coordinator, coordinatorNames);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqf7hrEe2Kif300Z6m1g" name="multipleCoordinators" specification="_DGYPKbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqgLhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqgbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					result = true;
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9v3kLhrEe2Kif300Z6m1g" name="CodeFragment" visibility="package" method="_DHUqULhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C9v3kbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C9v3krhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHlwEbhrEe2Kif300Z6m1g">
                  <body>Constructor generates a SLEEP instruction for the
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9v3k7hrEe2Kif300Z6m1g" type="_C9vQgLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9v3lLhrEe2Kif300Z6m1g" name="getCoordinator" method="_DHUqWLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlwE7hrEe2Kif300Z6m1g">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9weoLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9weobhrEe2Kif300Z6m1g" name="instructions" method="_DHUqWrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlwFLhrEe2Kif300Z6m1g">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGYPJbhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C9weo7hrEe2Kif300Z6m1g" name="size" method="_DHUqXLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHlwFbhrEe2Kif300Z6m1g">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_C9wepLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9wepbhrEe2Kif300Z6m1g" name="generateCodeFragment" visibility="private" method="_DHUqXrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C9xFsLhrEe2Kif300Z6m1g" name="getBaseInstruction" visibility="private" method="_DHUqX7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xFsbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFsrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFs7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFtLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xFtbhrEe2Kif300Z6m1g" name="push" visibility="private" method="_DHUqZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xFtrhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFt7hrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFuLhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFubhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xFurhrEe2Kif300Z6m1g" name="pull" visibility="private" method="_DHUqabhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xFu7hrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFvLhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFvbhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xFvrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xswLhrEe2Kif300Z6m1g" name="ifHas" visibility="private" method="_DHUqbrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xswbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xswrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xsw7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xsxLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xsxbhrEe2Kif300Z6m1g" name="ifNotHas" visibility="private" method="_DHUqc7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xsxrhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xsx7hrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xsyLhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xsybhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xsyrhrEe2Kif300Z6m1g" name="wait" method="_DHUqeLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xsy7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9xszLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C9xszbhrEe2Kif300Z6m1g" name="sleep" isStatic="true" method="_DHUqe7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C9xszrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGXoErhrEe2Kif300Z6m1g" name="CodeFragment" visibility="package" method="_DHUqUrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGYPILhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGYPIbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHlwErhrEe2Kif300Z6m1g">
                  <body>Constructor generates DSL instructions to transmit
	 * the data over edges using the coordinator and channel
	 * to determine the type of instruction and delta to 
	 * determine the number of times each instructions must
	 * be attempted.
	 * 
	 * @param delta
	 * @param edges
	 * @param coordinators
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGXoE7hrEe2Kif300Z6m1g" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGXoFLhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGXoFbhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGXoFrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGYPIrhrEe2Kif300Z6m1g" type="_C9vQgLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGYPJrhrEe2Kif300Z6m1g" name="reportIfDifferentCoordinators" visibility="private" method="_DHUqfbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGYPJ7hrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGYPKbhrEe2Kif300Z6m1g" name="multipleCoordinators" visibility="private" method="_DHUqf7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGYPKrhrEe2Kif300Z6m1g" name="coordinators" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGYPK7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C9y64LhrEe2Kif300Z6m1g" name="CombinedActivation">
              <generalization xmi:id="_DFjvxrhrEe2Kif300Z6m1g" general="_C9jqULhrEe2Kif300Z6m1g"/>
              <interfaceRealization xmi:id="_DGY2MbhrEe2Kif300Z6m1g" client="_C9y64LhrEe2Kif300Z6m1g" supplier="_DGVL07hrEe2Kif300Z6m1g" contract="_DGVL07hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqgrhrEe2Kif300Z6m1g" name="CombinedActivation" specification="_C9y64bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqg7hrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqhLhrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(name);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqhbhrEe2Kif300Z6m1g" name="CombinedActivation" specification="_DFjIsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqhrhrEe2Kif300Z6m1g" name="elem" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqh7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHUqiLhrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqibhrEe2Kif300Z6m1g" name="CombinedActivation" specification="_DFjItrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqirhrEe2Kif300Z6m1g" name="priorEntry" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqi7hrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqjLhrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry 
		 * and next as subObjects. The new name is 
		 * &quot;PriorName + NextName&quot;. 
		 */
		super(priorEntry,next.getLastUpdateTime());
		String combinedName = 
				priorEntry.getName() + &quot;+&quot; + next.getName();
		/* initially, this will be a clone of priorEntry */;
		/* now update its name and add relevant attributes from next */
		this.setName(combinedName);
		this.addSubObject(priorEntry);
		this.addSubObject(next);
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());
		this.setEndTime(endTime);
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());
		this.setStartTime(startTime);
		this.addEdges(next.getEdges());
		this.addCoordinators(next.getCoordinators());
		this.addConflicts(next.getConflicts());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHUqjbhrEe2Kif300Z6m1g" name="canCombine" specification="_DFjvwLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHUqjrhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHUqj7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency 
				 */

				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C9y64bhrEe2Kif300Z6m1g" name="CombinedActivation" visibility="package" method="_DHUqgrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C9y647hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C9y65LhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C9y64rhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C9zh8LhrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFjIsLhrEe2Kif300Z6m1g" name="CombinedActivation" visibility="package" method="_DHUqhbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFjIs7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFjItLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFjIsbhrEe2Kif300Z6m1g" name="elem" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjIsrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFjItbhrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFjItrhrEe2Kif300Z6m1g" name="CombinedActivation" visibility="package" method="_DHUqibhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFjIubhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFjIurhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFjIt7hrEe2Kif300Z6m1g" name="priorEntry" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjIuLhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjIu7hrEe2Kif300Z6m1g" type="_C9y64LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFjvwLhrEe2Kif300Z6m1g" name="canCombine" method="_DHUqjbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFjvwbhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjvwrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C90JALhrEe2Kif300Z6m1g" name="CommunicationGraph">
              <ownedComment xmi:id="_DHlwFrhrEe2Kif300Z6m1g">
                <body>@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFkW1rhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5zkLhrEe2Kif300Z6m1g" name="wfm" visibility="package" type="_C95okLhrEe2Kif300Z6m1g" association="_DH8VZrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5zkrhrEe2Kif300Z6m1g" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG5zlLhrEe2Kif300Z6m1g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG5zlrhrEe2Kif300Z6m1g" name="workLoad" visibility="package" type="_C_du0LhrEe2Kif300Z6m1g" association="_DH8VabhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRYLhrEe2Kif300Z6m1g" name="CommunicationGraph" specification="_DFjvx7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRYbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRYrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRY7hrEe2Kif300Z6m1g" type="_C90JALhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRZLhrEe2Kif300Z6m1g" name="CommunicationGraph" specification="_DFjvzbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRZbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRZrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRZ7hrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRaLhrEe2Kif300Z6m1g" type="_C90JALhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		this.verbose = verbose; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRabhrEe2Kif300Z6m1g" name="createHeader" specification="_C90JAbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRarhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));
		return header;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRa7hrEe2Kif300Z6m1g" name="createFooter" specification="_C90wE7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRbLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
		footer.add(&quot;}\n&quot;);
		return footer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRbbhrEe2Kif300Z6m1g" name="visualization" specification="_C90wF7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRbrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
     String line = String.format(
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,
     	String.valueOf(workLoad.getMinPacketReceptionRate()),
     	String.valueOf(workLoad.getE2e()));
     content.add(line);
     var flowNames = workLoad.getFlowNames();
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {
         var flowName = flowNames[flowIndex];
         var nodesInFlow = workLoad.getNodesInFlow(flowName);
         var nNodesInFlow = (nodesInFlow.length);
         /* array of communications costs per link */
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); 
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);
         var minCost = nNodesInFlow - 1 ;
         /*
          * nEdges in the flow is the minimum communication cost, 
          * i.e., min nTx to go E2E with no errors
          */
         line = String.format(
         		&quot;// Flow %s has a minimum communication cost of %d &quot;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, 
         		flowName, minCost, totalCost);
         content.add(line);
         line = String.format(
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, 
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), 
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); 
         String nodeName;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  
             nodeName = nodesInFlow[i];
             var nTx = linkCostArray[i];
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); 
             /* This version of the file has nTx in the edges of the flow */
         }
         nodeName = nodesInFlow[nNodesInFlow-1];
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow
         content.add(line);
     }
     return content;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRb7hrEe2Kif300Z6m1g" name="createWarpFileContent" specification="_C91XI7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRcLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;Warp File Contents:&quot;);
     	System.out.println(wfFileContents);
     	System.out.println(&quot;************************************\n&quot;);
     }
     return wfFileContents;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C90JAbhrEe2Kif300Z6m1g" name="createHeader" method="_DHVRabhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFkW07hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C90wE7hrEe2Kif300Z6m1g" name="createFooter" method="_DHVRa7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFkW1LhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C90wF7hrEe2Kif300Z6m1g" name="visualization" method="_DHVRbbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFkW1bhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C91XI7hrEe2Kif300Z6m1g" name="createWarpFileContent" method="_DHVRb7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C91XJLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFjvx7hrEe2Kif300Z6m1g" name="CommunicationGraph" method="_DHVRYLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFjvyrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFjvy7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFjvyLhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjvybhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjvzLhrEe2Kif300Z6m1g" type="_C90JALhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFjvzbhrEe2Kif300Z6m1g" name="CommunicationGraph" method="_DHVRZLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFkW0LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFkW0bhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFjvzrhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjvz7hrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFjv0LhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFkW0rhrEe2Kif300Z6m1g" type="_C90JALhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C91-MLhrEe2Kif300Z6m1g" name="ConnectivityPoset">
              <ownedComment xmi:id="_DHlwF7hrEe2Kif300Z6m1g">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
global connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DFkW3LhrEe2Kif300Z6m1g" general="_C-gFgbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRcbhrEe2Kif300Z6m1g" name="ConnectivityPoset" specification="_DFkW17hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRcrhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRc7hrEe2Kif300Z6m1g" type="_C91-MLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(workload);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRdLhrEe2Kif300Z6m1g" name="findCoordinator" specification="_DGZdQLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRdbhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRdrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;
		var maxConnections = 0;
		var size = nodesInFlow.size();
		for (Integer i = 0; i &lt; size; i++) {
			/* get the #connections for this node from the
			 * connectivity Map and see if it is the max so far
			 * if so, store its index in the flow
			 */
			var node = nodesInFlow.get(i);
			var numConnections = nodeConnectivityMap.get(node.getName());
			if (numConnections > maxConnections) {
				maxConnections = numConnections;
				coordinatorIndex = i;
			}
		}	
		/* return the index with the largest connectivity */
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFkW17hrEe2Kif300Z6m1g" name="ConnectivityPoset" visibility="package" method="_DHVRcbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFkW2bhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFkW2rhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFkW2LhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFkW27hrEe2Kif300Z6m1g" type="_C91-MLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGZdQLhrEe2Kif300Z6m1g" name="findCoordinator" visibility="protected" method="_DHVRdLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGZdQbhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGZdQrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C91-MbhrEe2Kif300Z6m1g" name="DeadlineComparator">
              <interfaceRealization xmi:id="_DGaEULhrEe2Kif300Z6m1g" client="_C91-MbhrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRd7hrEe2Kif300Z6m1g" name="compare" specification="_DGaEVLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVReLhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRebhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRerhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGaEVLhrEe2Kif300Z6m1g" name="compare" method="_DHVRd7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGaEVbhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGaEVrhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGaEV7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C92lQLhrEe2Kif300Z6m1g" name="Description">
              <ownedComment xmi:id="_DHlwGLhrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_DGarYLhrEe2Kif300Z6m1g" general="_DFeQMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5zmLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG5zmbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRe7hrEe2Kif300Z6m1g" name="Description" specification="_C92lQbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRfLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRfbhrEe2Kif300Z6m1g" name="Description" specification="_C92lRbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRfrhrEe2Kif300Z6m1g" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRf7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);
		for (String line : lines) {
			this.add(line+&quot;\n&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRgLhrEe2Kif300Z6m1g" name="toString" specification="_C92lSrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRgbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();
		for (String row: this) { 
			sb.append(row);
		}
		return sb.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C92lQbhrEe2Kif300Z6m1g" name="Description" method="_DHVRe7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C92lQrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C92lQ7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C92lRLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C92lRbhrEe2Kif300Z6m1g" name="Description" method="_DHVRfbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C92lR7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C92lSLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C92lRrhrEe2Kif300Z6m1g" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C92lSbhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C92lSrhrEe2Kif300Z6m1g" name="toString" method="_DHVRgLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C93MULhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C93MVLhrEe2Kif300Z6m1g" name="Edge">
              <generalization xmi:id="_DFlk9rhrEe2Kif300Z6m1g" general="_C_ot8LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG5zmrhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG6aoLhrEe2Kif300Z6m1g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6aobhrEe2Kif300Z6m1g" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6aorhrEe2Kif300Z6m1g" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6ao7hrEe2Kif300Z6m1g" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6apLhrEe2Kif300Z6m1g" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6apbhrEe2Kif300Z6m1g" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6aprhrEe2Kif300Z6m1g" name="state" type="_C93zYLhrEe2Kif300Z6m1g" association="_DHmXILhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG6ap7hrEe2Kif300Z6m1g" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DGarYrhrEe2Kif300Z6m1g" client="_C93MVLhrEe2Kif300Z6m1g" supplier="_DGVL07hrEe2Kif300Z6m1g" contract="_DGVL07hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRgrhrEe2Kif300Z6m1g" name="Edge" specification="_C93zZbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRg7hrEe2Kif300Z6m1g" type="_C93MVLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		this.flow = UNKNOWN;
		this.src = UNKNOWN;
		this.snk = UNKNOWN;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;
		this.numTx = 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRhLhrEe2Kif300Z6m1g" name="Edge" specification="_C93zabhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRhbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRhrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRh7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRiLhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRibhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRirhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRi7hrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRjLhrEe2Kif300Z6m1g" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHVRjbhrEe2Kif300Z6m1g" type="_C93MVLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);
		this.flow = flow;
		this.src =src;
		this.snk = snk;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;	
		this.numTx = numTx;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRjrhrEe2Kif300Z6m1g" name="compareTo" specification="_DFlk8LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRj7hrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHVRkLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRkbhrEe2Kif300Z6m1g" name="toString" specification="_C94acLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRkrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, 
 			this.flow, this.src, this.snk);
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRk7hrEe2Kif300Z6m1g" name="print" specification="_C94adbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHVRlLhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHVRlbhrEe2Kif300Z6m1g" name="print" specification="_C94aerhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>super.print();
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C93zZbhrEe2Kif300Z6m1g" name="Edge" visibility="package" method="_DHVRgrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C93zZrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C93zZ7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C93zaLhrEe2Kif300Z6m1g" type="_C93MVLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C93zabhrEe2Kif300Z6m1g" name="Edge" visibility="package" method="_DHVRhLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C93zcrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C93zc7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C93zarhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93za7hrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zbLhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zbbhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zbrhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zb7hrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zcLhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zcbhrEe2Kif300Z6m1g" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C93zdLhrEe2Kif300Z6m1g" type="_C93MVLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C94acLhrEe2Kif300Z6m1g" name="toString" method="_DHVRkbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C94acbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C94adbhrEe2Kif300Z6m1g" name="print" method="_DHVRk7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C94adrhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C94aerhrEe2Kif300Z6m1g" name="print" method="_DHVRlbhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DFlk8LhrEe2Kif300Z6m1g" name="compareTo" method="_DHVRjrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFlk8bhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFlk8rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_C93zYLhrEe2Kif300Z6m1g" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_C93zYrhrEe2Kif300Z6m1g" name="RELEASED"/>
                <ownedLiteral xmi:id="_C93zY7hrEe2Kif300Z6m1g" name="EXECUTING"/>
                <ownedLiteral xmi:id="_C93zZLhrEe2Kif300Z6m1g" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C95okLhrEe2Kif300Z6m1g" name="FileManager">
              <ownedComment xmi:id="_DHmXIrhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG6aqLhrEe2Kif300Z6m1g" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG6aqbhrEe2Kif300Z6m1g" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4cLhrEe2Kif300Z6m1g" name="FileManager" specification="_C95okbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4cbhrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the
                                                 // base directory
 // constructor for this class
 verbose = false; // initialize verbose to false
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4crhrEe2Kif300Z6m1g" name="FileManager" specification="_C95olbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4c7hrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4dLhrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the
                                                 // base directory
 // constructor for this class
 this.verbose = verbose; // initialize verbose as specified

  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4dbhrEe2Kif300Z6m1g" name="getDocumentsDirectory" specification="_C96PobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4drhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS
 String documentsDirectory;
 if (OSValidator.isWindows()) {
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
 } else if (OSValidator.isMac()) {
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;
 } else { // for all other Unix systems
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not
                                                         // MACOS)
 }
 return documentsDirectory;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4d7hrEe2Kif300Z6m1g" name="getCurrentDirectory" specification="_C96Po7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4eLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4ebhrEe2Kif300Z6m1g" name="createFile" specification="_C96PpbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4erhrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4e7hrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4fLhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4fbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
  * we don't actually create the file...it will be created when written to this routine really
  * just creates the file name ;-)
  */
 Integer suffixIndex = file.lastIndexOf('.');
 String fileString = file;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix
 }
 /*
  * fileString has no suffix at this point (removed if it existed) Now add file name extension
  * and suffix
  */
 fileString = fileString + nameExtension + suffix;

 if (verbose) {
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
 }
 return fileString;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4frhrEe2Kif300Z6m1g" name="createFile" specification="_C96PqrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4f7hrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4gLhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4gbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');
 String fileString = file;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix
 }
 // fileString has no suffix at this point (removed if it existed)
 // Now add file name extension and suffix
 fileString = fileString + suffix;
 // we don't actually create the file...it will be created when written to
 // this routine really just creates the file name ;-)
 if (verbose) {
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
 }
 return fileString;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4grhrEe2Kif300Z6m1g" name="createDirectory" specification="_C962sbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4g7hrEe2Kif300Z6m1g" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4hLhrEe2Kif300Z6m1g" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4hbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided
   newDirectory = subDirectory; // if subDirectory is a full path, use it.
 } else { // subDirectory has relative path, so just append
   newDirectory = directory + File.separator + subDirectory;
 }
 try {
   Path path = Paths.get(newDirectory);
   Files.createDirectories(path);
   if (verbose) {
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);
   }
 } catch (IOException e) {
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());
   newDirectory = directory; // in case of error, just use the initial directory
 }
 return newDirectory;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4hrhrEe2Kif300Z6m1g" name="writeFile" specification="_C97dwbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4h7hrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4iLhrEe2Kif300Z6m1g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);
 Path fileName = Path.of(file);
 try {
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)
 } catch (IOException e) {
   // handle error
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());
 } // the file will be closed automatically upon exit of this try block
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4ibhrEe2Kif300Z6m1g" name="readFile" specification="_C97dxLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4irhrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4i7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;
 Path fileName = Path.of(file);
 String contents = null;
 try {
   contents = Files.readString(fileName);
 } catch (IOException e) {
   // handle error
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());
 } // the file will be closed automatically upon exit of this try block
 return contents;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C95okbhrEe2Kif300Z6m1g" name="FileManager" method="_DHV4cLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C95okrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C95ok7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHmXI7hrEe2Kif300Z6m1g">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_C95olLhrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C95olbhrEe2Kif300Z6m1g" name="FileManager" method="_DHV4crhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C95ol7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C95omLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C95olrhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C96PoLhrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C96PobhrEe2Kif300Z6m1g" name="getDocumentsDirectory" method="_DHV4dbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C96PorhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C96Po7hrEe2Kif300Z6m1g" name="getCurrentDirectory" method="_DHV4d7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C96PpLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C96PpbhrEe2Kif300Z6m1g" name="createFile" method="_DHV4ebhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXJLhrEe2Kif300Z6m1g">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be
   * added to the base input file name so that all of the output files can be associated with the
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are
   * not identified in the NameExtension All parameters used to create the file, should be listed
   * near the top of the file in the Parameter Section, followed by the file contents.
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_C96PprhrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C96Pp7hrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C96PqLhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C96PqbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C96PqrhrEe2Kif300Z6m1g" name="createFile" method="_DHV4frhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C96Pq7hrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C96PrLhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C962sLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C962sbhrEe2Kif300Z6m1g" name="createDirectory" method="_DHV4grhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C962srhrEe2Kif300Z6m1g" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C962s7hrEe2Kif300Z6m1g" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C97dwLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C97dwbhrEe2Kif300Z6m1g" name="writeFile" method="_DHV4hrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C97dwrhrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C97dw7hrEe2Kif300Z6m1g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C97dxLhrEe2Kif300Z6m1g" name="readFile" method="_DHV4ibhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C97dxbhrEe2Kif300Z6m1g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C97dxrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C98E0LhrEe2Kif300Z6m1g" name="Flow">
              <ownedComment xmi:id="_DHmXJbhrEe2Kif300Z6m1g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFoBNrhrEe2Kif300Z6m1g" general="_C_ot8LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG7BsLhrEe2Kif300Z6m1g" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7BsbhrEe2Kif300Z6m1g" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BsrhrEe2Kif300Z6m1g" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7Bs7hrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BtLhrEe2Kif300Z6m1g" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7BtbhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BtrhrEe2Kif300Z6m1g" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7Bt7hrEe2Kif300Z6m1g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BuLhrEe2Kif300Z6m1g" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7BubhrEe2Kif300Z6m1g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BurhrEe2Kif300Z6m1g" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7Bu7hrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BvLhrEe2Kif300Z6m1g" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG7BvbhrEe2Kif300Z6m1g" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7Bv7hrEe2Kif300Z6m1g" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7BwbhrEe2Kif300Z6m1g" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG7Bw7hrEe2Kif300Z6m1g" name="nodes" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH88cbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG7owrhrEe2Kif300Z6m1g" name="linkTxAndTotalCost" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH88dLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG7oxbhrEe2Kif300Z6m1g" name="edges" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DH88d7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG7oyLhrEe2Kif300Z6m1g" name="nodePredecessor" visibility="package" type="_C-bNAbhrEe2Kif300Z6m1g" association="_DH9jgbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG8P0LhrEe2Kif300Z6m1g" name="edgePredecessor" visibility="package" type="_C93MVLhrEe2Kif300Z6m1g" association="_DH9jhLhrEe2Kif300Z6m1g"/>
              <interfaceRealization xmi:id="_DGbScLhrEe2Kif300Z6m1g" client="_C98E0LhrEe2Kif300Z6m1g" supplier="_DGVL07hrEe2Kif300Z6m1g" contract="_DGVL07hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4jLhrEe2Kif300Z6m1g" name="Flow" specification="_C98r4LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4jbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4jrhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4j7hrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHV4kLhrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4kbhrEe2Kif300Z6m1g" name="Flow" specification="_C98r57hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4krhrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4k7hrEe2Kif300Z6m1g" name="getInitialPriority" specification="_C98r67hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4lLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4lbhrEe2Kif300Z6m1g" name="getIndex" specification="_C98r7bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4lrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4l7hrEe2Kif300Z6m1g" name="getNumTxPerLink" specification="_C98r77hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4mLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4mbhrEe2Kif300Z6m1g" name="getNodes" specification="_C98r8bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4mrhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4m7hrEe2Kif300Z6m1g" name="getEdges" specification="_C99S8bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4nLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4nbhrEe2Kif300Z6m1g" name="addEdge" specification="_DFnaILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4nrhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4n7hrEe2Kif300Z6m1g" name="addNode" specification="_DFnaIrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4oLhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4obhrEe2Kif300Z6m1g" name="getLinkTxAndTotalCost" specification="_C99S87hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4orhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHV4o7hrEe2Kif300Z6m1g" name="setInitialPriority" specification="_C996AbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHV4pLhrEe2Kif300Z6m1g" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfgLhrEe2Kif300Z6m1g" name="setIndex" specification="_C996A7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfgbhrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfgrhrEe2Kif300Z6m1g" name="setNumTxPerLink" specification="_C996BbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfg7hrEe2Kif300Z6m1g" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfhLhrEe2Kif300Z6m1g" name="setNodes" specification="_DGb5g7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfhbhrEe2Kif300Z6m1g" name="nodes" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfhrhrEe2Kif300Z6m1g" name="setLinkTxAndTotalCost" specification="_DGb5hrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfh7hrEe2Kif300Z6m1g" name="linkTxAndTotalCost" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfiLhrEe2Kif300Z6m1g" name="compareTo" specification="_DFoBMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfibhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHWfirhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfi7hrEe2Kif300Z6m1g" name="toString" specification="_C996B7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfjLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C98r4LhrEe2Kif300Z6m1g" name="Flow" visibility="package" method="_DHV4jLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C98r5LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C98r5bhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHmXJrhrEe2Kif300Z6m1g">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_C98r4bhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C98r4rhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C98r47hrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C98r5rhrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C98r57hrEe2Kif300Z6m1g" name="Flow" visibility="package" method="_DHV4kbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C98r6LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C98r6bhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHmXJ7hrEe2Kif300Z6m1g">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_C98r6rhrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C98r67hrEe2Kif300Z6m1g" name="getInitialPriority" method="_DHV4k7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXKLhrEe2Kif300Z6m1g">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_C98r7LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C98r7bhrEe2Kif300Z6m1g" name="getIndex" method="_DHV4lbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXKbhrEe2Kif300Z6m1g">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_C98r7rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C98r77hrEe2Kif300Z6m1g" name="getNumTxPerLink" method="_DHV4l7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXKrhrEe2Kif300Z6m1g">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_C98r8LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C98r8bhrEe2Kif300Z6m1g" name="getNodes" method="_DHV4mbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXK7hrEe2Kif300Z6m1g">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGb5gLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C99S8bhrEe2Kif300Z6m1g" name="getEdges" method="_DHV4m7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXLLhrEe2Kif300Z6m1g">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGb5gbhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C99S87hrEe2Kif300Z6m1g" name="getLinkTxAndTotalCost" method="_DHV4obhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXL7hrEe2Kif300Z6m1g">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGb5grhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C996AbhrEe2Kif300Z6m1g" name="setInitialPriority" method="_DHV4o7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXMLhrEe2Kif300Z6m1g">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C996ArhrEe2Kif300Z6m1g" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C996A7hrEe2Kif300Z6m1g" name="setIndex" method="_DHWfgLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXMbhrEe2Kif300Z6m1g">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C996BLhrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C996BbhrEe2Kif300Z6m1g" name="setNumTxPerLink" method="_DHWfgrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXMrhrEe2Kif300Z6m1g">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C996BrhrEe2Kif300Z6m1g" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C996B7hrEe2Kif300Z6m1g" name="toString" method="_DHWfi7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C996CLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFnaILhrEe2Kif300Z6m1g" name="addEdge" method="_DHV4nbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXLbhrEe2Kif300Z6m1g">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFnaIbhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFnaIrhrEe2Kif300Z6m1g" name="addNode" method="_DHV4n7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXLrhrEe2Kif300Z6m1g">
                  <body>Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFnaI7hrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFoBMLhrEe2Kif300Z6m1g" name="compareTo" method="_DHWfiLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFoBMbhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFoBMrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGb5g7hrEe2Kif300Z6m1g" name="setNodes" method="_DHWfhLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXM7hrEe2Kif300Z6m1g">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGb5hLhrEe2Kif300Z6m1g" name="nodes" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGb5hrhrEe2Kif300Z6m1g" name="setLinkTxAndTotalCost" method="_DHWfhrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHmXNLhrEe2Kif300Z6m1g">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGb5h7hrEe2Kif300Z6m1g" name="linkTxAndTotalCost" type="_DFeQMLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-Q08LhrEe2Kif300Z6m1g" name="FlowMap">
              <ownedComment xmi:id="_DHm-MLhrEe2Kif300Z6m1g">
                <body>FlowMap creates a mapping from flow name to 
flow object (&lt;name, Flow>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFooQLhrEe2Kif300Z6m1g" general="_C9icMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG8P0rhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG8P07hrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-RcALhrEe2Kif300Z6m1g" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_DHm-MbhrEe2Kif300Z6m1g">
                <body>FlowNodeToActivationMap creates a mapping from flow node  
to an activation (&lt;Node, Activation>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFpPULhrEe2Kif300Z6m1g" general="_C9icMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG8P1LhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG8P1bhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-RcAbhrEe2Kif300Z6m1g" name="GraphViz">
              <ownedComment xmi:id="_DHm-MrhrEe2Kif300Z6m1g">
                <body>@author sgoddard2
Copyright © 2020 Steve Goddard. All rights reserved.
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFp2aLhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG8P1rhrEe2Kif300Z6m1g" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG8P17hrEe2Kif300Z6m1g" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG8P2LhrEe2Kif300Z6m1g" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG8P2bhrEe2Kif300Z6m1g" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG8P2rhrEe2Kif300Z6m1g" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG8P3LhrEe2Kif300Z6m1g" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG9d8LhrEe2Kif300Z6m1g" name="wfm" visibility="package" type="_C95okLhrEe2Kif300Z6m1g" association="_DH9jh7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG9d8rhrEe2Kif300Z6m1g" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG9d9LhrEe2Kif300Z6m1g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG9d9rhrEe2Kif300Z6m1g" name="gv" visibility="package" type="_C-RcAbhrEe2Kif300Z6m1g" association="_DH-KkbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfjbhrEe2Kif300Z6m1g" name="GraphViz" specification="_DFpPUrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfjrhrEe2Kif300Z6m1g" name="wfm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHWfj7hrEe2Kif300Z6m1g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHWfkLhrEe2Kif300Z6m1g" type="_C-RcAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     verbose = false;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfkbhrEe2Kif300Z6m1g" name="GraphViz" specification="_DFp2YLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfkrhrEe2Kif300Z6m1g" name="wfm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHWfk7hrEe2Kif300Z6m1g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHWflLhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHWflbhrEe2Kif300Z6m1g" type="_C-RcAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     this.verbose = verbose;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWflrhrEe2Kif300Z6m1g" name="visualization" specification="_C-SDELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfl7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfmLhrEe2Kif300Z6m1g" name="initializeGraphVizContent" specification="_C-SDFLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfmbhrEe2Kif300Z6m1g" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);
     /* remove 'strict' if multiple edges in the same direction are to be shown */
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.
     /* 
      * create a title caption for the rendered graph in the .gv file
      * label string is in html format, so need an end delimeter after adding flows
      */
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfmrhrEe2Kif300Z6m1g" name="finalizeGraphVizContent" specification="_C-SqILhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* 
      * wrap up the gv file content by finalizing title caption
      * then add it to the file contents and terminate the graph viz structure
      */
     gvTitleCaption += &quot;>\n&quot;;
     /* 
      * end the gv file by adding the caption for rendering and the last line 
      * to the contents string
      */
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfm7hrEe2Kif300Z6m1g" name="getGraphVizContent" specification="_C-SqIbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfnLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfnbhrEe2Kif300Z6m1g" name="createGraphVizContent" specification="_C-SqI7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfnrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
 	 * GraphVizListener reads the graphFile string and calls the functions
 	 * in this class, as it walks the input graphFile structure to build
 	 * the GraphViz contents.
 	 */
     GraphVizListener.buildGraphViz(gv); 
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;GraphViz File Contents:&quot;);
     	System.out.println(getGraphVizContent());
     	System.out.println(&quot;************************************\n&quot;);
     }
     return getGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfn7hrEe2Kif300Z6m1g" name="addFlowToGraphViz" specification="_C-SqJbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfoLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */
     gvFileContents = gvFileContents + &quot;   &quot;;  
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfobhrEe2Kif300Z6m1g" name="addSrcNodeToGraphViz" specification="_C-SqJ7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWforhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHWfo7hrEe2Kif300Z6m1g" name="addSnkNodeToGraphViz" specification="_C-SqKbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHWfpLhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGkLhrEe2Kif300Z6m1g" name="finalizeCurrentFlowInGraphViz" specification="_C-SqK7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */
     gvFileContents = gvFileContents + &quot;; \n&quot; ;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGkbhrEe2Kif300Z6m1g" name="addNodeName" specification="_C-SqLLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGkrhrEe2Kif300Z6m1g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXGk7hrEe2Kif300Z6m1g" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */
     gvFileContents += fileContents;  
     /* add the node name and edge to this line of the rendered graph caption */
     gvTitleCaption += titleCaption;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-SDELhrEe2Kif300Z6m1g" name="visualization" method="_DHWflrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFp2Z7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SDFLhrEe2Kif300Z6m1g" name="initializeGraphVizContent" method="_DHWfmLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SDFbhrEe2Kif300Z6m1g" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqILhrEe2Kif300Z6m1g" name="finalizeGraphVizContent" method="_DHWfmrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-SqIbhrEe2Kif300Z6m1g" name="getGraphVizContent" method="_DHWfm7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHm-M7hrEe2Kif300Z6m1g">
                  <body>public function to return the string gvFileContents.
     * designed to be called after finalizeGraphVizContent() is called by the listener
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_C-SqIrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqI7hrEe2Kif300Z6m1g" name="createGraphVizContent" method="_DHWfnbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SqJLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqJbhrEe2Kif300Z6m1g" name="addFlowToGraphViz" method="_DHWfn7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SqJrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqJ7hrEe2Kif300Z6m1g" name="addSrcNodeToGraphViz" method="_DHWfobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SqKLhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqKbhrEe2Kif300Z6m1g" name="addSnkNodeToGraphViz" method="_DHWfo7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SqKrhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-SqK7hrEe2Kif300Z6m1g" name="finalizeCurrentFlowInGraphViz" method="_DHXGkLhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-SqLLhrEe2Kif300Z6m1g" name="addNodeName" visibility="private" method="_DHXGkbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-SqLbhrEe2Kif300Z6m1g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-SqLrhrEe2Kif300Z6m1g" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFpPUrhrEe2Kif300Z6m1g" name="GraphViz" visibility="package" method="_DHWfjbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFpPVbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFpPVrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFpPU7hrEe2Kif300Z6m1g" name="wfm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFpPVLhrEe2Kif300Z6m1g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFpPV7hrEe2Kif300Z6m1g" type="_C-RcAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFp2YLhrEe2Kif300Z6m1g" name="GraphViz" visibility="package" method="_DHWfkbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFp2ZLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFp2ZbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFp2YbhrEe2Kif300Z6m1g" name="wfm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFp2YrhrEe2Kif300Z6m1g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFp2Y7hrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFp2ZrhrEe2Kif300Z6m1g" type="_C-RcAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-TRMLhrEe2Kif300Z6m1g" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_DHm-NLhrEe2Kif300Z6m1g">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.
GraphVizListener reads the graphFile string and calls the functions
in this class, as it walks the input graphFile structure to build
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_DGdHoLhrEe2Kif300Z6m1g" general="_DFqdebhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG9d-LhrEe2Kif300Z6m1g" name="gv" visibility="package" type="_C-RcAbhrEe2Kif300Z6m1g" association="_DH-KlLhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGlLhrEe2Kif300Z6m1g" name="GraphVizListener" specification="_DFrEhbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGlbhrEe2Kif300Z6m1g" name="gv" type="_C-RcAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXGlrhrEe2Kif300Z6m1g" type="_C-TRMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGl7hrEe2Kif300Z6m1g" name="buildGraphViz" specification="_DFrEirhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGmLhrEe2Kif300Z6m1g" name="gv" type="_C-RcAbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new GraphVizListener(gv); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGmbhrEe2Kif300Z6m1g" name="enterWarpName" specification="_DFrrkbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGmrhrEe2Kif300Z6m1g" name="ctx" type="_DFrEjLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name
     gv.initializeGraphVizContent(graphName); // start creating the gv file content
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGm7hrEe2Kif300Z6m1g" name="exitWarp" specification="_DFrrmLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGnLhrEe2Kif300Z6m1g" name="ctx" type="_DFrrlrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGnbhrEe2Kif300Z6m1g" name="enterFlowName" specification="_DFsSobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGnrhrEe2Kif300Z6m1g" name="ctx" type="_DFrrnbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();
     gv.addFlowToGraphViz(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGn7hrEe2Kif300Z6m1g" name="exitSrcNode" specification="_DFsSqLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGoLhrEe2Kif300Z6m1g" name="ctx" type="_DFsSprhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     gv.addSrcNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGobhrEe2Kif300Z6m1g" name="exitSnkNode" specification="_DFs5sbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGorhrEe2Kif300Z6m1g" name="ctx" type="_DFsSrbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     gv.addSnkNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGo7hrEe2Kif300Z6m1g" name="exitFlow" specification="_DFs5uLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGpLhrEe2Kif300Z6m1g" name="ctx" type="_DFs5trhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFrEhbhrEe2Kif300Z6m1g" name="GraphVizListener" visibility="private" method="_DHXGlLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFrEh7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFrEiLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFrEhrhrEe2Kif300Z6m1g" name="gv" type="_C-RcAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFrEibhrEe2Kif300Z6m1g" type="_C-TRMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFrEirhrEe2Kif300Z6m1g" name="buildGraphViz" isStatic="true" method="_DHXGl7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFrEi7hrEe2Kif300Z6m1g" name="gv" type="_C-RcAbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFrrkbhrEe2Kif300Z6m1g" name="enterWarpName" method="_DHXGmbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFrrkrhrEe2Kif300Z6m1g" name="ctx" type="_DFrEjLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFrrmLhrEe2Kif300Z6m1g" name="exitWarp" method="_DHXGm7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFrrmbhrEe2Kif300Z6m1g" name="ctx" type="_DFrrlrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFsSobhrEe2Kif300Z6m1g" name="enterFlowName" method="_DHXGnbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFsSorhrEe2Kif300Z6m1g" name="ctx" type="_DFrrnbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFsSqLhrEe2Kif300Z6m1g" name="exitSrcNode" method="_DHXGn7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFsSqbhrEe2Kif300Z6m1g" name="ctx" type="_DFsSprhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFs5sbhrEe2Kif300Z6m1g" name="exitSnkNode" method="_DHXGobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFs5srhrEe2Kif300Z6m1g" name="ctx" type="_DFsSrbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFs5uLhrEe2Kif300Z6m1g" name="exitFlow" method="_DHXGo7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFs5ubhrEe2Kif300Z6m1g" name="ctx" type="_DFs5trhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-UfULhrEe2Kif300Z6m1g" name="GuiVisualization">
              <ownedComment xmi:id="_DHm-NbhrEe2Kif300Z6m1g">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column
headings.

@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG-FALhrEe2Kif300Z6m1g" name="frame" visibility="package" type="_DFtgwrhrEe2Kif300Z6m1g" association="_DH-Kl7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG-FArhrEe2Kif300Z6m1g" name="jtable" visibility="package" type="_DFtgxrhrEe2Kif300Z6m1g" association="_DH-KmrhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGpbhrEe2Kif300Z6m1g" name="GuiVisualization" specification="_C-UfUbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGprhrEe2Kif300Z6m1g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXGp7hrEe2Kif300Z6m1g" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHXGqLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXGqbhrEe2Kif300Z6m1g" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHXGqrhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXGq7hrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>// Frame initialization
 frame = new JFrame();

 // Frame Title
 frame.setTitle(title);

 // Initializing the JTable with input parameters
 jtable = new JTable(table, columnNames);
 jtable.setBounds(30, 40, 200, 300); // default size
 // resizeColumnWidth(jtable); // uncomment to auto size column widths

 // attached the table to a JScrollPane and then add both to the frame
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar
 frame.add(sp);
 // Frame Size
 frame.setSize(500, 200);
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 // Frame Visible = false
 frame.setVisible(false);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGrLhrEe2Kif300Z6m1g" name="setVisible" specification="_C-UfW7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>frame.setVisible(true);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGrbhrEe2Kif300Z6m1g" name="resizeColumnWidth" specification="_DGdHobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGrrhrEe2Kif300Z6m1g" name="table" type="_DFtgxrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();
 for (int column = 0; column &lt; table.getColumnCount(); column++) {
   int width = 70; // Min width
   for (int row = 0; row &lt; table.getRowCount(); row++) {
     TableCellRenderer renderer = table.getCellRenderer(row, column);
     Component comp = table.prepareRenderer(renderer, row, column);
     width = Math.max(comp.getPreferredSize().width + 5, width);
   }
   if (width > 300)
     width = 300;
   columnModel.getColumn(column).setPreferredWidth(width);
 }
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-UfUbhrEe2Kif300Z6m1g" name="GuiVisualization" method="_DHXGpbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-UfVbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-UfVrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHm-NrhrEe2Kif300Z6m1g">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window
   * is initially not visible, and is made visible by a call to setVisible().
   * 
   * @param title Window title
   * @param columnNames Column heading names
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_C-UfUrhrEe2Kif300Z6m1g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-UfU7hrEe2Kif300Z6m1g" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-UfWLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-UfVLhrEe2Kif300Z6m1g" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-UfWbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-UfV7hrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-UfW7hrEe2Kif300Z6m1g" name="setVisible" method="_DHXGrLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHm-N7hrEe2Kif300Z6m1g">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DGdHobhrEe2Kif300Z6m1g" name="resizeColumnWidth" visibility="private" method="_DHXGrbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGdusLhrEe2Kif300Z6m1g" name="table" type="_DFtgxrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-VGYLhrEe2Kif300Z6m1g" name="InputGraphFile">
              <ownedComment xmi:id="_DHm-OLhrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG-FBLhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG-FBbhrEe2Kif300Z6m1g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG-FBrhrEe2Kif300Z6m1g" name="wfm" visibility="private" type="_C95okLhrEe2Kif300Z6m1g" association="_DH_YsbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG-FCLhrEe2Kif300Z6m1g" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG-FCbhrEe2Kif300Z6m1g" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG-FC7hrEe2Kif300Z6m1g" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG-FDLhrEe2Kif300Z6m1g" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGr7hrEe2Kif300Z6m1g" name="InputGraphFile" specification="_DFuu4bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGsLhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXGsbhrEe2Kif300Z6m1g" type="_C-VGYLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXGsrhrEe2Kif300Z6m1g" name="InputGraphFile" specification="_DFuu5rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXGs7hrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXGtLhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXGtbhrEe2Kif300Z6m1g" type="_C-VGYLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		this.verbose = verbose; // initialize verbose as specified

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtoLhrEe2Kif300Z6m1g" name="setGraphFileName" specification="_C-VGYbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtobhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtorhrEe2Kif300Z6m1g" name="verifyGraphFileName" specification="_C-VtcLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXto7hrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */
		try {
			getInputGraphFileName(inputFile);
		} catch (Exception e) {
			// e.printStackTrace();
			System.err.println(&quot;Failed get an input file.&quot;);
			System.exit(-1);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtpLhrEe2Kif300Z6m1g" name="readGraphFile" specification="_C-VtcrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtpbhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtprhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits
		String inputFileName = getGraphFileName();
		graphFileContents = readGraphFileContents(inputFileName);
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtp7hrEe2Kif300Z6m1g" name="getInputGraphFileName" specification="_C-VtdbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtqLhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtqbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;
		String fileName = UNKNOWN;
		workingDirectory = wfm.getBaseDirectory();
		if (inputFile == null) { // if fileName is nil, then prompt for input file
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
			System.out.print(&quot;Enter input file: &quot;);
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
			try {
				fileName = bufferRead.readLine();
			} catch (IOException e) {
				// e.printStackTrace();
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());
			}
		} else {
			fileName = inputFile;
		}
		setGraphFileName(fileName);
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName
		if (tempFile.exists()) {  // see if the file exists
			if (verbose) {
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());
			}
		} else { // try the working directory
			setGraphFileName(workingDirectory + File.separator + fileName);
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName
			if (tempFile.exists()) {  // see if the file exists
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
			} else {
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);
				throw new RuntimeException();
			}
		}
		return fileName;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtqrhrEe2Kif300Z6m1g" name="readGraphFileContents" specification="_C-VteLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtq7hrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtrLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);
		if (verbose) {
			System.out.println(&quot;************************************&quot;);
			System.out.println(&quot;Graph File Read:&quot;);
			System.out.println(graphFileContents);
			System.out.println(&quot;************************************\n&quot;);
		}
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtrbhrEe2Kif300Z6m1g" name="printVerboseMessage" specification="_C-Vte7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtrrhrEe2Kif300Z6m1g" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtr7hrEe2Kif300Z6m1g" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtsLhrEe2Kif300Z6m1g" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-VGYbhrEe2Kif300Z6m1g" name="setGraphFileName" visibility="private" method="_DHXtoLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-VGYrhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-VtcLhrEe2Kif300Z6m1g" name="verifyGraphFileName" visibility="private" method="_DHXtorhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-VtcbhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-VtcrhrEe2Kif300Z6m1g" name="readGraphFile" method="_DHXtpLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-Vtc7hrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-VtdLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-VtdbhrEe2Kif300Z6m1g" name="getInputGraphFileName" visibility="private" method="_DHXtp7hrEe2Kif300Z6m1g" raisedException="_DGdusbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-VtdrhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-Vtd7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-VteLhrEe2Kif300Z6m1g" name="readGraphFileContents" visibility="private" method="_DHXtqrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-VtebhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-VterhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-Vte7hrEe2Kif300Z6m1g" name="printVerboseMessage" visibility="private" method="_DHXtrbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-VtfLhrEe2Kif300Z6m1g" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-VtfbhrEe2Kif300Z6m1g" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-WUgLhrEe2Kif300Z6m1g" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFuu4bhrEe2Kif300Z6m1g" name="InputGraphFile" method="_DHXGr7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFuu47hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFuu5LhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFuu4rhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFuu5bhrEe2Kif300Z6m1g" type="_C-VGYLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFuu5rhrEe2Kif300Z6m1g" name="InputGraphFile" method="_DHXGsrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFuu6bhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFuu6rhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFuu57hrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFuu6LhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFuu67hrEe2Kif300Z6m1g" type="_C-VGYLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-W7kLhrEe2Kif300Z6m1g" name="InstructionTimeSlot">
              <generalization xmi:id="_DFvV8LhrEe2Kif300Z6m1g" general="_C-xyULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG-sEbhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG-sErhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtsbhrEe2Kif300Z6m1g" name="InstructionTimeSlot" specification="_C-W7kbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtsrhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXts7hrEe2Kif300Z6m1g" name="InstructionTimeSlot" specification="_C-W7lbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXttLhrEe2Kif300Z6m1g" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXttbhrEe2Kif300Z6m1g" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXttrhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtt7hrEe2Kif300Z6m1g" name="InstructionTimeSlot" specification="_C-XioLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtuLhrEe2Kif300Z6m1g" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHXtubhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXturhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-W7kbhrEe2Kif300Z6m1g" name="InstructionTimeSlot" method="_DHXtsbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-W7krhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-W7k7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-W7lLhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-W7lbhrEe2Kif300Z6m1g" name="InstructionTimeSlot" visibility="package" method="_DHXts7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-W7mLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-W7mbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-W7lrhrEe2Kif300Z6m1g" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-W7l7hrEe2Kif300Z6m1g" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-W7mrhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-XioLhrEe2Kif300Z6m1g" name="InstructionTimeSlot" visibility="package" method="_DHXtt7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-XiorhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-Xio7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-XiobhrEe2Kif300Z6m1g" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-XipbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-XipLhrEe2Kif300Z6m1g" type="_C-W7kLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-YJsLhrEe2Kif300Z6m1g" name="LatencyAnalysis">
              <ownedComment xmi:id="_DHm-ObhrEe2Kif300Z6m1g">
                <body>@author sgoddard2
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DG-sE7hrEe2Kif300Z6m1g" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG-sFLhrEe2Kif300Z6m1g" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG-sFrhrEe2Kif300Z6m1g" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG-sGLhrEe2Kif300Z6m1g" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG-sGbhrEe2Kif300Z6m1g" name="latencyReport" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DH_YtLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG-sG7hrEe2Kif300Z6m1g" name="program" visibility="private" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DH__wbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG-sHbhrEe2Kif300Z6m1g" name="workload" visibility="private" type="_C_du0LhrEe2Kif300Z6m1g" association="_DH__xLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_TIbhrEe2Kif300Z6m1g" name="programTable" visibility="private" type="_C-rEoLhrEe2Kif300Z6m1g" association="_DH__x7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_TI7hrEe2Kif300Z6m1g" name="nodeIndex" visibility="private" type="_DFdpILhrEe2Kif300Z6m1g" association="_DIAm0LhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtu7hrEe2Kif300Z6m1g" name="LatencyAnalysis" specification="_DFvV9LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtvLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXtvbhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();
 this.program = warp.toProgram();
 this.workload = warp.toWorkload();
 this.programTable = program.getSchedule();
 this.nodeIndex = program.getNodeMapIndex();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtvrhrEe2Kif300Z6m1g" name="LatencyAnalysis" specification="_DFv9ALhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtv7hrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXtwLhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();
 this.program = program;
 this.workload = program.toWorkLoad();
 this.programTable = program.getSchedule();
 this.nodeIndex = program.getNodeMapIndex();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtwbhrEe2Kif300Z6m1g" name="latencyReport" specification="_C-YJsbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtwrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>/*
  * Build a latency report. Flows are output in priority order (based on the priority used to
  * build the program. The latency for each instance of the flow is reported as follows
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;
  * 
  * For flow instances that have latency > deadline, then the latency message is appended with
  * the string &quot; => DEADLINE MISS&quot;
  * 
  * A line of 30 '*' characters separates each group of flow instance reports.
  * 
  * When there are not enough transmissions attempted between the release and the next release of
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;
  * 
  */

 var flows = workload.getFlowNamesInPriorityOrder();
 for (String flowName : flows) {
   var time = 0;

   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow
   var flowSnkIndex = nodes.length - 1;
   /* get snk of last link in the flow, which is also the Flow snk node */
   String snk = nodes[flowSnkIndex];
   /* get the src of last link in the flow */
   String src = nodes[flowSnkIndex - 1];
   /* get (column) indexes into programTable of these nodes */
   var snkIndex = nodeIndex.get(snk);
   var srcIndex = nodeIndex.get(src);
   /* get the array containing the number of transmissions required for each link in the flow */
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);
   /* get the number of transmission required for the last link in the flow */
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far
   var instance = 0;
   while (time &lt; workload.getHyperPeriod()) {
     /* get next release time and absolute deadline of the flow */
     var releaseTime = workload.nextReleaseTime(flowName, time);
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);
     // var latency = 0;
     time = releaseTime;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far
     while (time &lt; nextReleaseTime) {
       /* get instruction strings at these to locations */
       String instr1 = programTable.get(time, srcIndex);
       String instr2 = programTable.get(time, snkIndex);
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);
       if (numTxProcessed == numTxRequired) {
         /*
          * all required Tx attempts have been made compute and record latency
          */
         var latency = time - releaseTime + 1;
         // report latency
         String latencyMsg =
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);
         if (latency > deadline) {
           /* deadline missed, so color the text red */
           latencyMsg += DEADLINE_MISS;
         }
         latencyMsg += &quot;\n&quot;;
         latencyReport.add(latencyMsg);
         time = nextReleaseTime;
       } else {
         time++;
       }

     }
     if (numTxProcessed &lt; numTxRequired) {
       /*
        * This flow missed its deadline with required number of Tx!! This message should not be
        * printed with the schedulers built
        */
       String latencyMsg =
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,
               flowName, instance);
       latencyReport.add(latencyMsg);
     }
     instance++;
   }
   String flowSeparator = FLOW_SEPARATOR;
   latencyReport.add(flowSeparator);
 }
 return latencyReport;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtw7hrEe2Kif300Z6m1g" name="numMatchingTx" specification="_C-YJsrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtxLhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtxbhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtxrhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtx7hrEe2Kif300Z6m1g" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHXtyLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;

 if (flow == null || src == null || snk == null || instr == null) {
   /* make sure all parameters are valid */
   return numTx;
 }
 /*
  * get a Warp instruction parser object and then get the instruction parameters from the
  * instruction string.
  */
 var dsl = new WarpDSL();
 var instructionParametersArray = dsl.getInstructionParameters(instr);

 for (InstructionParameters entry : instructionParametersArray) {
   String flowName = entry.getFlow();
   if (flowName.equals(flow)) {
     /*
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,
      * and snk names in instruction match input parameters, then we have a Tx attempt.
      */
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {
       /* flow, src, and snk match, so increment Tx attempts */
       numTx++;
     }
   }
 }
 return numTx;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-YJsbhrEe2Kif300Z6m1g" name="latencyReport" method="_DHXtwbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFv9BbhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-YJsrhrEe2Kif300Z6m1g" name="numMatchingTx" method="_DHXtw7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-YJs7hrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-YJtLhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-YJtbhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-YJtrhrEe2Kif300Z6m1g" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-YJt7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFvV9LhrEe2Kif300Z6m1g" name="LatencyAnalysis" visibility="package" method="_DHXtu7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFvV9rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFvV97hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFvV9bhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFvV-LhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFv9ALhrEe2Kif300Z6m1g" name="LatencyAnalysis" visibility="package" method="_DHXtvrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFv9ArhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFv9A7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFv9AbhrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFv9BLhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-ZX0LhrEe2Kif300Z6m1g" name="LatencyVisualization">
              <ownedComment xmi:id="_DHm-OrhrEe2Kif300Z6m1g">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.
&lt;p>

CS2820 Spring 2022 Project: Implement this class to create the file visualization that is
requested in Warp.

@author sgoddard
@version 1.3
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFv9C7hrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_TJrhrEe2Kif300Z6m1g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG_TJ7hrEe2Kif300Z6m1g" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG_TKLhrEe2Kif300Z6m1g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG_TKbhrEe2Kif300Z6m1g" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG_TKrhrEe2Kif300Z6m1g" name="warp" visibility="private" type="_C_YPQLhrEe2Kif300Z6m1g" association="_DIAm07hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_6MLhrEe2Kif300Z6m1g" name="la" visibility="private" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DIAm1rhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHXtybhrEe2Kif300Z6m1g" name="LatencyVisualization" specification="_DFv9BrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHXtyrhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHXty7hrEe2Kif300Z6m1g" type="_C-ZX0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
 this.warp = warp;
 this.la = warp.toLatencyAnalysis();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFv9BrhrEe2Kif300Z6m1g" name="LatencyVisualization" visibility="package" method="_DHXtybhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFv9CLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFv9CbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFv9B7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFv9CrhrEe2Kif300Z6m1g" type="_C-ZX0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-Z-4LhrEe2Kif300Z6m1g" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_DGeVwLhrEe2Kif300Z6m1g" client="_C-Z-4LhrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUsLhrEe2Kif300Z6m1g" name="compare" specification="_DGeVwrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUsbhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHYUsrhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHYUs7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);
		return result; // 0 => tie on release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGeVwrhrEe2Kif300Z6m1g" name="compare" method="_DHYUsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGeVw7hrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGeVxLhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGeVxbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-al8LhrEe2Kif300Z6m1g" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_DGe80rhrEe2Kif300Z6m1g" client="_C-al8LhrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUtLhrEe2Kif300Z6m1g" name="compare" specification="_DGe81LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUtbhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHYUtrhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHYUt7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGe81LhrEe2Kif300Z6m1g" name="compare" method="_DHYUtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGe81bhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGe81rhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGe817hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-bNAbhrEe2Kif300Z6m1g" name="Node">
              <generalization xmi:id="_DFxLJLhrEe2Kif300Z6m1g" general="_C_ot8LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_6MrhrEe2Kif300Z6m1g" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DG_6M7hrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG_6NLhrEe2Kif300Z6m1g" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG_6NbhrEe2Kif300Z6m1g" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DG_6NrhrEe2Kif300Z6m1g" name="edges" type="_DFeQMLhrEe2Kif300Z6m1g" isReadOnly="true" association="_DIAm2bhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DG_6OLhrEe2Kif300Z6m1g" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DG_6ObhrEe2Kif300Z6m1g" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DGfj47hrEe2Kif300Z6m1g" client="_C-bNAbhrEe2Kif300Z6m1g" supplier="_DGVL07hrEe2Kif300Z6m1g" contract="_DGVL07hrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUuLhrEe2Kif300Z6m1g" name="Node" specification="_C-b0ELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUubhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHYUurhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHYUu7hrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHYUvLhrEe2Kif300Z6m1g" type="_C-bNAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
 	setName(name);
 	setPriority(priority);
 	this.index = index;
 	this.channel = DEFAULT_CHANNEL;
 	this.edges = new ArrayList&lt;Edge>();
 	this.conflicts = new HashSet&lt;String>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUvbhrEe2Kif300Z6m1g" name="compareTo" specification="_DFwkELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUvrhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHYUv7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUwLhrEe2Kif300Z6m1g" name="toString" specification="_C-b0F7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUwbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHYUwrhrEe2Kif300Z6m1g" name="addEdge" specification="_DFxLIrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHYUw7hrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>edges.add(edge);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7wLhrEe2Kif300Z6m1g" name="addConflict" specification="_C-cbI7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7wbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7wrhrEe2Kif300Z6m1g" name="numEdges" specification="_C-cbJbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7w7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7xLhrEe2Kif300Z6m1g" name="print" specification="_C-cbJ7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7xbhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7xrhrEe2Kif300Z6m1g" name="print" specification="_C-dCMbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>super.print();
		System.out.print(&quot;Edge info for this partiion\n&quot;);
		for (Edge edge: edges) {
			edge.print();
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-b0ELhrEe2Kif300Z6m1g" name="Node" visibility="package" method="_DHYUuLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-b0FLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-b0FbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-b0EbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-b0ErhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-b0E7hrEe2Kif300Z6m1g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-b0FrhrEe2Kif300Z6m1g" type="_C-bNAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-b0F7hrEe2Kif300Z6m1g" name="toString" method="_DHYUwLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-b0GLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-cbI7hrEe2Kif300Z6m1g" name="addConflict" method="_DHY7wLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-cbJLhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-cbJbhrEe2Kif300Z6m1g" name="numEdges" method="_DHY7wrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-cbJrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-cbJ7hrEe2Kif300Z6m1g" name="print" method="_DHY7xLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-cbKLhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-dCMbhrEe2Kif300Z6m1g" name="print" method="_DHY7xrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DFwkELhrEe2Kif300Z6m1g" name="compareTo" method="_DHYUvbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFwkEbhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFwkErhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFxLIrhrEe2Kif300Z6m1g" name="addEdge" method="_DHYUwrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFxLI7hrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-dpQLhrEe2Kif300Z6m1g" name="NodeMap">
              <ownedComment xmi:id="_DHm-O7hrEe2Kif300Z6m1g">
                <body>NodeMap creates a mapping from graph node name to 
node object (&lt;name, Node>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFxLJbhrEe2Kif300Z6m1g" general="_C9icMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHAhQLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHAhQbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-eQULhrEe2Kif300Z6m1g" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_DHm-PLhrEe2Kif300Z6m1g">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DFxyNrhrEe2Kif300Z6m1g" general="_C-zAcrhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7x7hrEe2Kif300Z6m1g" name="NonPreemptiveSchedule" specification="_DFxyMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7yLhrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHY7ybhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHY7yrhrEe2Kif300Z6m1g" type="_C-eQULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DFxyMLhrEe2Kif300Z6m1g" name="NonPreemptiveSchedule" visibility="package" method="_DHY7x7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFxyM7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFxyNLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFxyMbhrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFxyMrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFxyNbhrEe2Kif300Z6m1g" type="_C-eQULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-eQUbhrEe2Kif300Z6m1g" name="NotImplentedVisualization">
              <generalization xmi:id="_DFxyOLhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHAhQrhrEe2Kif300Z6m1g" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHAhQ7hrEe2Kif300Z6m1g" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHAhRLhrEe2Kif300Z6m1g" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHAhRbhrEe2Kif300Z6m1g" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHAhRrhrEe2Kif300Z6m1g" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHAhR7hrEe2Kif300Z6m1g" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7y7hrEe2Kif300Z6m1g" name="NotImplentedVisualization" specification="_C-e3YLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7zLhrEe2Kif300Z6m1g" type="_C-eQUbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY7zbhrEe2Kif300Z6m1g" name="NotImplentedVisualization" specification="_C-e3ZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY7zrhrEe2Kif300Z6m1g" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHY7z7hrEe2Kif300Z6m1g" type="_C-eQUbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY70LhrEe2Kif300Z6m1g" name="visualization" specification="_C-e3abhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY70bhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-e3YLhrEe2Kif300Z6m1g" name="NotImplentedVisualization" visibility="package" method="_DHY7y7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-e3YbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-e3YrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-e3Y7hrEe2Kif300Z6m1g" type="_C-eQUbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-e3ZLhrEe2Kif300Z6m1g" name="NotImplentedVisualization" visibility="package" method="_DHY7zbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-e3ZrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-e3Z7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-e3ZbhrEe2Kif300Z6m1g" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-e3aLhrEe2Kif300Z6m1g" type="_C-eQUbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-e3abhrEe2Kif300Z6m1g" name="visualization" method="_DHY70LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFxyN7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-fec7hrEe2Kif300Z6m1g" name="PeriodComparator">
              <interfaceRealization xmi:id="_DGgyALhrEe2Kif300Z6m1g" client="_C-fec7hrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY70rhrEe2Kif300Z6m1g" name="compare" specification="_DGgyArhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY707hrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHY71LhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHY71bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGgyArhrEe2Kif300Z6m1g" name="compare" method="_DHY70rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGgyA7hrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGgyBLhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGhZELhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-gFgbhrEe2Kif300Z6m1g" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_DHm-PbhrEe2Kif300Z6m1g">
                <body>Poset is a partially ordered set of activations
that are partitions of the workload to be scheduled.
This version assumes each activation is a node
and each node has a list of edges associated with it.
Each node/activation in an edge is identified as either 
a transmitter or sender for that edge.

@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHAhSLhrEe2Kif300Z6m1g" name="activations" visibility="private" type="_C9qYALhrEe2Kif300Z6m1g" association="_DIBN4bhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHAhSrhrEe2Kif300Z6m1g" name="workload" visibility="private" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIBN5LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHBIUbhrEe2Kif300Z6m1g" name="flows" visibility="protected" type="_C98E0LhrEe2Kif300Z6m1g" association="_DIBN57hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DHBIU7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHBIVLhrEe2Kif300Z6m1g" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHBIUrhrEe2Kif300Z6m1g" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHBIVrhrEe2Kif300Z6m1g" name="nodes" visibility="private" type="_C-bNAbhrEe2Kif300Z6m1g" association="_DIB08bhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DHBIWLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DHBIWbhrEe2Kif300Z6m1g" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHBIV7hrEe2Kif300Z6m1g" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHBIW7hrEe2Kif300Z6m1g" name="nodeMap" visibility="private" type="_C-dpQLhrEe2Kif300Z6m1g" association="_DIB09LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHBIXbhrEe2Kif300Z6m1g" name="priorityQueue" visibility="private" type="_C-uvA7hrEe2Kif300Z6m1g" association="_DIB097hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHBvYrhrEe2Kif300Z6m1g" name="nodeConnectivityMap" visibility="protected" type="_DFdpILhrEe2Kif300Z6m1g" association="_DICcAbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHBvZbhrEe2Kif300Z6m1g" name="activationMap" visibility="package" type="_C-RcALhrEe2Kif300Z6m1g" association="_DICcBLhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY71rhrEe2Kif300Z6m1g" name="Poset" specification="_DFyZQrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY717hrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHY72LhrEe2Kif300Z6m1g" type="_C-gFgbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;
		this.activations = new Activations();
		this.activationMap = new FlowNodeToActivationMap();
		/* init map to return a null activation if null key intered */
		this.activationMap.put(null, null);
		flows = workload.getFlows().values();
		nodeMap = workload.getNodes();
		nodes = nodeMap.values();
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>());
		/* get global node connectivity */
		nodeConnectivityMap = getNodeConnectivity();
		buildPosetOfActivations();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY72bhrEe2Kif300Z6m1g" name="getNodeConnectivity" specification="_C-gskLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY72rhrEe2Kif300Z6m1g" type="_DFdpILhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();
		
		for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			var size = nodesInFlow.size();
			for (Integer i =0 ; i &lt; size; i++) {
				var nodeName = nodesInFlow.get(i).getName();
				var connectivity = map.get(nodeName);
				var connections = 2; // default # of connections
				if (i == 0 || i == size-1) {
					/* src or snk => connections = 1 */
					connections = 1;
				}
				if (connectivity != null) {
					connectivity += connections;
					map.put(nodeName,connectivity);
				} else {
					map.put(nodeName,connections); // initial connection
				}
			}
		}
		return map;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY727hrEe2Kif300Z6m1g" name="getNodeNames" specification="_C-gskrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY73LhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();
		var nodeNames = new ArrayList&lt;String>(keys.size());
		nodeNames.addAll(keys);
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY73bhrEe2Kif300Z6m1g" name="getNodesNamesOrderedAlphabetically" specification="_C-hTobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHY73rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHY737hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY74LhrEe2Kif300Z6m1g" name="buildPosetOfActivations" specification="_C-hTpbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */

		/*
		 * (1) Create edges, setting priority and release time
		 * 		add edges to node respective node lists as edge is created
		 * (2) Create conflict set for each node (adjacent nodes)
		 * (3) Create activations by selecting coordinators within 
		 * 		each flow and adding that coordinator's edges and
		 * 		release times to an activation with the coordinator's name
		 * 		(each activation will have one coordinator and the
		 * 			number of activations &lt;= number nodes)
		 * (4) Order the activations
		 */

		createEdgeLists(); // (1)
		createConflictLists(); // (2)
		createInitialActivations(); // (3)
		orderActivations(); // (4)
		/* At this point, each flow has been partitioned 
		 */
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY74bhrEe2Kif300Z6m1g" name="createEdgeLists" specification="_C-hTprhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */
		var maxFlowLength = workload.maxFlowLength();
		for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());
			var flowPhase = flow.getPhase();
			var flowPriority = flow.getPriority();
			var period = flow.getPeriod();
			var deadline = flow.getDeadline();
			Edge edge = null;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				/* Create edges, setting priority and release time */
				/* This version adds edges to the main node in NodeMap.
				 * This allows creation of large partitions, with at most one per node.
				 * An alternative, we can have a lot of small partitions that can be
				 * combined later, which may create more parallelism.
				 * So, both the global NodeMap nodes and the nodes in the
				 * flows are updated with the same edge information. 
				 * This let's us play with partition creation options later.
				 */
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); 
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());
				var flowSrc = flowNodes.get(i);  // node in the flow
				var flowSnk = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();

				/*
				 * Edge priority within a flow is based on position
				 * in flow. Each Flow has its own priority. This 
				 * creates a 2-dimensional priority. Thus, we
				 * can keep a total ordering of edges if we fold the
				 * table into a single row where we assume each new flow
				 * starts maxFlowSize away from the previous flow nodes:
				 * edgePriority = flowPriority*maxFlowLength + edgePosition
				 */
				// var flowPriority = flow.getPriority();
				var priority = (flowPriority * maxFlowLength) + i;
				//var period = flow.getPeriod();
				// var deadline = flow.getDeadline();
				/* edge phase = flow phase + edge position in flow */
				var phase = flowPhase + i; 
				var numTx = numTxArray[i];
				edge = new Edge(flow.getName(),src,snk,priority, 
						period, deadline, phase, numTx);
				/* Add edge to the nodes in the NodeMap */
				srcNode.addEdge(edge);
				snkNode.addEdge(edge);
				/* Add edge to the nodes in the flow */
				flowSrc.addEdge(edge);
				flowSnk.addEdge(edge);
				/* Add the edege to the flow */
				flow.addEdge(edge);

			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY74rhrEe2Kif300Z6m1g" name="createConflictLists" specification="_C-hTp7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* create conflict lists at global and
		 * local levels (i.e., NodeMap and Flow)
		 */
		createGlobalConflictLists();
		createLocalConflictLists();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY747hrEe2Kif300Z6m1g" name="createGlobalConflictLists" specification="_C-hTqLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>for (Node node: nodes) {
			for (Edge edge: node.getEdges()) {
				/* get src and snk nodes and names */
				var src = edge.getSrc();
				var snk = edge.getSnk();
				var srcNode = nodeMap.get(src);
				var snkNode = nodeMap.get(snk);
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHY75LhrEe2Kif300Z6m1g" name="createLocalConflictLists" specification="_C-hTqbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				var srcNode = flowNodes.get(i); 
				var snkNode = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}


	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi0LhrEe2Kif300Z6m1g" name="findCoordinator" specification="_DGhZFrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi0bhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi0rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var coordinatorIndex = 0;
		var maxEdges = 0;
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			var numEdges = node.numEdges();
			if (numEdges > maxEdges) {
				maxEdges = numEdges;
				coordinatorIndex = i;
			}
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi07hrEe2Kif300Z6m1g" name="buildTxArray" specification="_DGiAIbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi1LhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi1bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHZi1rhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var txArray = new Integer[size];
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			txArray[i] = getMaxTx(node);
		}
		return txArray;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi17hrEe2Kif300Z6m1g" name="createInitialActivations" specification="_C-h6sLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			Integer coordinatorIndex = 0;
			/* Find the node with max edges connected.
			 * This will be the first coordinator selected
			 * for this flow.
			 */
			coordinatorIndex = findCoordinator(nodesInFlow);
			var txArray = buildTxArray(nodesInFlow);
			/* if coordinatorIndex is odd, then other coordinators
			 * are also odd numbers, even otherwise. 
			 * */
			Integer startIndex = 0; // for even coordinatorIndex
			if ((coordinatorIndex % 2) == 1) {
				/* coordinatorIndex is odd, so start at 1 */
				startIndex = 1;
			}
			if (startIndex >= nodesInFlow.size()) {
				/* create a partition the single partition */
			}
			var activationPhaseOffset = 0;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {
				var node = nodesInFlow.get(i);
				/* create a partition consisting of node i */
				String name = flow.getName() + &quot;:&quot; + node.getName();
				Activation partition = getActivation(name, node);
				/* Update phase for each edge in new partition based on 
				 * the current offset, which increases after each
				 * partition created.
				 * */
				partition.increaseEdgePhases(activationPhaseOffset);
				activations.put(name,partition);
				/* increase offset for next partition based on the 
				 * max numTx in this partition/node 
				 * But need to account for phase already assumes
				 * 1 Tx already
				 * */
				activationPhaseOffset += txArray[i]-1;  // adjust by one
			} 
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi2LhrEe2Kif300Z6m1g" name="getMaxTx" specification="_DFzAULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi2bhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi2rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;
		for (Edge edge: node.getEdges()) {
			result = Math.max(result, edge.getNumTx());
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi27hrEe2Kif300Z6m1g" name="getActivation" specification="_DFzAU7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi3LhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi3bhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi3rhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);
		if (newPartition == null) {
			// no partition by that name exists, so create one
			newPartition = new Activation(name);
			activationMap.put(node,newPartition);
		}
		/* add the node as the coordinator */
		newPartition.addCoordinator(node.getName());
		/* set the conflicts */
		newPartition.setConflicts(node.getConflicts());
		/* add the edges associated with this coordinator */
		newPartition.addEdges(node.getEdges());
		/* set the predecessor as the node's predecessor */
		var nodePred = node.getPredecessor();
		var pred = activationMap.get(nodePred);
		if (nodePred != null &amp;&amp; pred == null) {
			/* try next node up the flow */
			nodePred = nodePred.getPredecessor();
			pred = activationMap.get(nodePred);
		}
		newPartition.setPredecessor(pred);
		return newPartition;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi37hrEe2Kif300Z6m1g" name="getHyperPeriod" specification="_C-h6sbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi4LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi4bhrEe2Kif300Z6m1g" name="getMaxPhase" specification="_C-h6s7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi4rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi47hrEe2Kif300Z6m1g" name="orderActivations" specification="_C-h6tbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue
		/* Update the release time and priority of each partition activation */
		for (Activation activation: activations.values()) {
			activation.updatePriorityAndRelease(currentTime);
		}
		/* create a queue sorted first by release times and then priorities */
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>(),activations.values());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi5LhrEe2Kif300Z6m1g" name="getNextActivation" specification="_C-h6trhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi5bhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi5rhrEe2Kif300Z6m1g" name="addActivation" specification="_DFzAWLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi57hrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>priorityQueue.add(activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi6LhrEe2Kif300Z6m1g" name="findBaseStation" specification="_C-h6t7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi6bhrEe2Kif300Z6m1g" type="_C-bNAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;
		Iterator&lt;Flow> iterator = flows.iterator();
		Flow flow = iterator.next();
		var nodes = flow.getNodes();
		var srcBaseStation = nodes.get(0);
		var srcBaseStationName = srcBaseStation.getName();
		var snkBaseStation = nodes.get(nodes.size()-1);
		var snkBaseStationName = snkBaseStation.getName(); 
		var found = false;
 
     while (!found &amp;&amp; iterator.hasNext()) {
     	flow = iterator.next();
 		nodes = flow.getNodes();
     	var src = nodes.get(0);
			var srcName = src.getName();
			var snk = nodes.get(nodes.size()-1);
			var snkName = snk.getName();
			if (!srcBaseStationName.equals(srcName) &amp;&amp; 
					snkBaseStationName.equals(snkName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; 
					!snkBaseStationName.equals(snkName)) {
				baseStation = srcBaseStation;
				found = true;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;
					snkBaseStationName.equals(srcName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; 
					!snkBaseStationName.equals(srcName)) {
				baseStation = srcBaseStation;
				found = true;
			}
     }
     if (!found) {
     	/* initial snk and src tie for base station. That is
     	 * each is always a flow src with the other a snk or
     	 * vice versa. 
     	 * So pick initial snk as the base station */
     	baseStation = snkBaseStation;
     }
		return baseStation;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-gskLhrEe2Kif300Z6m1g" name="getNodeConnectivity" visibility="private" method="_DHY72bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGhZFLhrEe2Kif300Z6m1g" type="_DFdpILhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-gskrhrEe2Kif300Z6m1g" name="getNodeNames" method="_DHY727hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGhZFbhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-hTobhrEe2Kif300Z6m1g" name="getNodesNamesOrderedAlphabetically" method="_DHY73bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-hTorhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-hTo7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-hTpbhrEe2Kif300Z6m1g" name="buildPosetOfActivations" method="_DHY74LhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-hTprhrEe2Kif300Z6m1g" name="createEdgeLists" visibility="private" method="_DHY74bhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-hTp7hrEe2Kif300Z6m1g" name="createConflictLists" visibility="private" method="_DHY74rhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-hTqLhrEe2Kif300Z6m1g" name="createGlobalConflictLists" visibility="private" method="_DHY747hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-hTqbhrEe2Kif300Z6m1g" name="createLocalConflictLists" visibility="private" method="_DHY75LhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-h6sLhrEe2Kif300Z6m1g" name="createInitialActivations" visibility="private" method="_DHZi17hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-h6sbhrEe2Kif300Z6m1g" name="getHyperPeriod" method="_DHZi37hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-h6srhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-h6s7hrEe2Kif300Z6m1g" name="getMaxPhase" method="_DHZi4bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-h6tLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-h6tbhrEe2Kif300Z6m1g" name="orderActivations" method="_DHZi47hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-h6trhrEe2Kif300Z6m1g" name="getNextActivation" method="_DHZi5LhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHnlQrhrEe2Kif300Z6m1g">
                  <body>getNextActivation returns the highest priority
	 * partition that has been released at or before input
	 * parameter time.
	 * 
	 * @param time
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFzAV7hrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-h6t7hrEe2Kif300Z6m1g" name="findBaseStation" visibility="protected" method="_DHZi6LhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHnlRLhrEe2Kif300Z6m1g">
                  <body>findBaseStation is used by algorithms that generate the
	 * partially ordered set of activations using a base station. 
	 * This method searches the set of flows to find the node that
	 * is always one of the src or snk nodes. In the case of a tie
	 * where there are two candidates the initial snk node is
	 * returned. If there are multiple base stations, only the fist
	 * one found is returned.
	 * 
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFzAWrhrEe2Kif300Z6m1g" type="_C-bNAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFyZQrhrEe2Kif300Z6m1g" name="Poset" visibility="package" method="_DHY71rhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFyZRLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFyZRbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHnlQLhrEe2Kif300Z6m1g">
                  <body>Partition types:
	 *  
	 *  by node--each node is a partition using only one channel
	 *  by channel
	 *  	by node then identify when a coordinator and when not
	 *  	by flow and coordinator in that flow
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFyZQ7hrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFyZRrhrEe2Kif300Z6m1g" type="_C-gFgbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFzAULhrEe2Kif300Z6m1g" name="getMaxTx" visibility="private" method="_DHZi2LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFzAUbhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFzAUrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DFzAU7hrEe2Kif300Z6m1g" name="getActivation" visibility="private" method="_DHZi27hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFzAVLhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFzAVbhrEe2Kif300Z6m1g" name="node" type="_C-bNAbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFzAVrhrEe2Kif300Z6m1g" type="_C9jqULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFzAWLhrEe2Kif300Z6m1g" name="addActivation" method="_DHZi5rhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHnlQ7hrEe2Kif300Z6m1g">
                  <body>addElemement adds the partitionElement to the priority queue
	 * 
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DFzAWbhrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGhZFrhrEe2Kif300Z6m1g" name="findCoordinator" visibility="protected" method="_DHZi0LhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHnlQbhrEe2Kif300Z6m1g">
                  <body>*
	 * @param nodesInFlow
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGhZF7hrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGhZGLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGiAIbhrEe2Kif300Z6m1g" name="buildTxArray" visibility="private" method="_DHZi07hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGiAIrhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGiAI7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGiAJLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-jI0LhrEe2Kif300Z6m1g" name="PreemptiveSchedule">
              <ownedComment xmi:id="_DHnlRbhrEe2Kif300Z6m1g">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, 
priority schedule for the Poset using numChannels. 

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_DF01irhrEe2Kif300Z6m1g" general="_C-zAcrhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi6rhrEe2Kif300Z6m1g" name="PreemptiveSchedule" specification="_DFznYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi67hrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi7LhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi7bhrEe2Kif300Z6m1g" type="_C-jI0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi7rhrEe2Kif300Z6m1g" name="continueSearch" specification="_DFznZrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi77hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi8LhrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi8bhrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi8rhrEe2Kif300Z6m1g" name="toProgram" specification="_C-jv4LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi87hrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	
		
//TODO write code to support preemption
		
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi9LhrEe2Kif300Z6m1g" name="findPreeptiveChannelAndTime" specification="_DF0OcbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi9bhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi9rhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi97hrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;
		var time = startTime;
		var result = findMaxTimeAvailable(time, schedulableObject);
		var channelConsidered = result.channel;
		var timeAvailable = result.time;
		
		
		if (channelConsidered == numChannels) {
			/* no available time slots near this time, even for preemption */
			return findChannelAndTime(time+1,schedulableObject);
		} else {
			/* can use timeAvailable.time here on timeAvailable.channel
			 * then must find additional time on same channel until 
			 * done
			 */
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);
			var duration = schedulableObject.getExecutionDuration();
			var timeRemaining = duration-timeAvailable;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);
			var numStartTimes = additionalScheduleTimes.size();
			var lastStartTime = endScheduleTime; 
			if (numStartTimes > 0 ) {
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();
			}
			if (lastStartTime &lt; endScheduleTime) {
				// schedulableObject.addAdditionalStartTime(nextStartTime);
				channel = channelConsidered;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);
			} else {
				time = lastStartTime;
			}
		}
		return new ScheduleLocation(channel, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi-LhrEe2Kif300Z6m1g" name="findAdditionalTime" specification="_DF0OdLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi-bhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi-rhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi-7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZi_LhrEe2Kif300Z6m1g" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZi_bhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var time = startTime;
		var results = new ArrayList&lt;ScheduleTime>();
		
		// if (timeRemaining &lt;= )
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {
			time ++; 
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			results.add(new ScheduleTime(time,time));
			return results;
		} 
		
		if (isAvailable(a1, channel, time, timeRemaining)) {
			results.add(new ScheduleTime(time,time+timeRemaining-1));
		} else {
			var timeAvailable = availableTime(a1,  channel, time);
			if (timeAvailable > 0) {
				/* found at least one time slot available */
//				a1.addAdditionalStartTime(time);
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));
			} else {
				/* look ahead in time by one unit */
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));
			}
			
		}
		
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZi_rhrEe2Kif300Z6m1g" name="findMaxTimeAvailable" specification="_DF0OerhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZi_7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjALhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZjAbhrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;
		var bestChannel = numChannels;
		
		for (int channel = 0; channel &lt; numChannels ; channel++) {
			var timeAvailable = availableTime(schedulableObject,channel,time);
			if (timeAvailable > maxTime) {
				maxTime = timeAvailable;
				bestChannel = channel;
			}
		}
// TEMP
		if (maxTime > 0) {
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);
		}
// TEMP
		return new ScheduleLocation(bestChannel,maxTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZjArhrEe2Kif300Z6m1g" name="availableTime" specification="_DF0OfbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZjA7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZjBLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjBbhrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjBrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;
		
		while (isAvailable(a1,channel,start+result,1)) {
			result++;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHZjB7hrEe2Kif300Z6m1g" name="addToSchedule" specification="_DF0OgrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHZjCLhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHZjCbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjCrhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjC7hrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHZjDLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;
		var combineTime = endScheduleTime;
		
		var nextScheduleTime = next.getNextScheduleTime(startTime);
		var nextStartTime = nextScheduleTime.getStartTime();
		var nextEndTime = nextScheduleTime.getEndTime();
		
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {
			/* can't schedule this activation */
			return false;
		}
		
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {
			/* add the next slice of execution to the schedule */
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);
		}
		if (!success) {
			return false;
		}
		
		/* Successful adding next to later points in the schedule.
		 * So, now we see if this is the last
		 * 
		 */
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {
			/* this is the last slice of execution, so wrap things up */
			next.setEndTime(endTime);
			var responseTime = endTime - next.getReleaseTime();
			if (responseTime > next.getDeadline()) {
				return false; // unable to schedule this entry
			}
			/* Add the endTime to the elements endTimes Q
			 * so that we can track predecessor endTimes
			 * and make sure successors don't start before 
			 * predecessors
			 */
			next.addToEndTimes(endTime); 
			/* remove predecessor end time that matches this start time */
			var pred = next.getPredecessor();
			if (pred != null) {
				pred.pollEndTimes(); 
			}
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		/* Check to see we need to combine this activation with
		 * an existing activation in any of the slots. If so,
		 * save that time so we can update the actual start time
		 */
		Activation currentEntry = null;
		for (int i = startTime; i &lt;= endTime; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				combineTime = i;
				// currentEntry = entry;
				break;
			}
		}
		entry.setStartTime(startTime); // set start time for this entry
		entry.setEndTime(endTime); // set end time for this entry
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		
		return success;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ4LhrEe2Kif300Z6m1g" name="addToSchedule" specification="_DF01hLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ4bhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ4rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		
		/* found a time and channel  that are valid */
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()
		var success = false; 
		
// PREEMPT
		var timeAvailable = availableTime(next, channel, startTime);
		var duration = next.getExecutionDuration();
		
		if (timeAvailable == 0 ) {
			/* then currentEntry at this location in the schedule
			 * is not null and we can combine, but best to check
			 */
			var currentEntry = schedule.get(channel,startTime);
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {
				/* no conflict with this entry, and can
				 * combine so check for combined entry time
				 *  to see if we can combine activations
				 */
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);
				var combinedEntry = new CombinedActivation(currentEntry,next);
				var searchTime = currentEntry.getEndTime()+1;
				var searchLength = combinedDuration - duration;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {
					timeAvailable = combinedDuration;
					duration = combinedDuration;
				}
			}
		}
			if (duration &lt;= timeAvailable) {
				/* can execute without preemption */
				var endTime = startTime+duration-1;
				success = addToSchedule(next,channel,startTime,endTime);
			} else {
				/* Recursively add 'slices' to the schedule.
				 * success == true => all slices added successfully
				 * otherwise, none of the slices were added
				 */
				var endTime = startTime + timeAvailable-1;
				success = addToSchedule(next,channel,startTime,endTime);
			}
		return success;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-jv4LhrEe2Kif300Z6m1g" name="toProgram" method="_DHZi8rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0OcLhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFznYLhrEe2Kif300Z6m1g" name="PreemptiveSchedule" visibility="package" method="_DHZi6rhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DFznY7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DFznZLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DFznYbhrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DFznYrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFznZbhrEe2Kif300Z6m1g" type="_C-jI0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DFznZrhrEe2Kif300Z6m1g" name="continueSearch" visibility="protected" method="_DHZi7rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DFznZ7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DFznaLhrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGinMrhrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF0OcbhrEe2Kif300Z6m1g" name="findPreeptiveChannelAndTime" visibility="private" method="_DHZi9LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0OcrhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0Oc7hrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGinM7hrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF0OdLhrEe2Kif300Z6m1g" name="findAdditionalTime" visibility="private" method="_DHZi-LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0OdbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0OdrhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0Od7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF0OeLhrEe2Kif300Z6m1g" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGinNLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF0OerhrEe2Kif300Z6m1g" name="findMaxTimeAvailable" visibility="private" method="_DHZi_rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0Oe7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0OfLhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGinNbhrEe2Kif300Z6m1g" type="_DGinMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF0OfbhrEe2Kif300Z6m1g" name="availableTime" visibility="private" method="_DHZjArhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0OfrhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF0Of7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0OgLhrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF0OgbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF0OgrhrEe2Kif300Z6m1g" name="addToSchedule" visibility="private" method="_DHZjB7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF0Og7hrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF01gLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF01gbhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF01grhrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF01g7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF01hLhrEe2Kif300Z6m1g" name="addToSchedule" visibility="protected" method="_DHaJ4LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF01hbhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF01hrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-k-ALhrEe2Kif300Z6m1g" name="PriorityComparator">
              <interfaceRealization xmi:id="_DGinNrhrEe2Kif300Z6m1g" client="_C-k-ALhrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ47hrEe2Kif300Z6m1g" name="compare" specification="_DGjOQLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ5LhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ5bhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ5rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.releaseTimeComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGjOQLhrEe2Kif300Z6m1g" name="compare" method="_DHaJ47hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGjOQbhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGjOQrhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGjOQ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-k-ArhrEe2Kif300Z6m1g" name="Program">
              <ownedComment xmi:id="_DHnlRrhrEe2Kif300Z6m1g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHCWcLhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHCWcbhrEe2Kif300Z6m1g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWcrhrEe2Kif300Z6m1g" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHCWc7hrEe2Kif300Z6m1g" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWdLhrEe2Kif300Z6m1g" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHCWdbhrEe2Kif300Z6m1g" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWdrhrEe2Kif300Z6m1g" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHCWd7hrEe2Kif300Z6m1g" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWeLhrEe2Kif300Z6m1g" name="workLoad" visibility="package" type="_C_du0LhrEe2Kif300Z6m1g" association="_DICcB7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHCWerhrEe2Kif300Z6m1g" name="scheduleBuilt" visibility="package" type="_C-rEoLhrEe2Kif300Z6m1g" association="_DIDDEbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHCWfLhrEe2Kif300Z6m1g" name="SchedulerSelected" visibility="package" type="_DGjOR7hrEe2Kif300Z6m1g" association="_DIDDFLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHCWfrhrEe2Kif300Z6m1g" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWgLhrEe2Kif300Z6m1g" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHCWgrhrEe2Kif300Z6m1g" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9gbhrEe2Kif300Z6m1g" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9g7hrEe2Kif300Z6m1g" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9hbhrEe2Kif300Z6m1g" name="channelsAvailable" visibility="package" type="_C9s0QLhrEe2Kif300Z6m1g" association="_DIDDF7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHC9h7hrEe2Kif300Z6m1g" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9ibhrEe2Kif300Z6m1g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9i7hrEe2Kif300Z6m1g" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHC9jbhrEe2Kif300Z6m1g" name="deadlineMisses" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DIDqILhrEe2Kif300Z6m1g"/>
              <interfaceRealization xmi:id="_DF1clLhrEe2Kif300Z6m1g" client="_C-k-ArhrEe2Kif300Z6m1g" supplier="_C-5uILhrEe2Kif300Z6m1g" contract="_C-5uILhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ57hrEe2Kif300Z6m1g" name="Program" specification="_DGj1ULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ6LhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ6bhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ6rhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ67hrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ7LhrEe2Kif300Z6m1g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ7bhrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ7rhrEe2Kif300Z6m1g" name="Program" specification="_DGj1WbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ77hrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ8LhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ8bhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ8rhrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ87hrEe2Kif300Z6m1g" name="setDefaultParameters" specification="_DF2DoLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ9LhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaJ9bhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ9rhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ97hrEe2Kif300Z6m1g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ-LhrEe2Kif300Z6m1g" name="toWorkLoad" specification="_C-mMILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ-bhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ-rhrEe2Kif300Z6m1g" name="buildProgram" specification="_DGj1YLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ-7hrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ_LhrEe2Kif300Z6m1g" name="buildOriginalProgram" specification="_C-mMIbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaJ_bhrEe2Kif300Z6m1g" name="waitInstruction" specification="_C-mMIrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaJ_rhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaJ_7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKALhrEe2Kif300Z6m1g" name="elseWaitInstruction" specification="_C-mMJbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKAbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKArhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKA7hrEe2Kif300Z6m1g" name="elsePullClause" specification="_C-mMKLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKBLhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKBbhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKBrhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKB7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKCLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKCbhrEe2Kif300Z6m1g" name="hasPushInstruction" specification="_C-mzMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKCrhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKC7hrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKDLhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKDbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKDrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKD7hrEe2Kif300Z6m1g" name="pushInstruction" specification="_C-mzNrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKELhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKEbhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKErhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKE7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKFLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKFbhrEe2Kif300Z6m1g" name="getFirstChannelInInstruction" specification="_C-mzPLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKFrhrEe2Kif300Z6m1g" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKF7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKGLhrEe2Kif300Z6m1g" name="findNextAvailableInstructionTimeSlot" specification="_DF2DprhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKGbhrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaKGrhrEe2Kif300Z6m1g" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKG7hrEe2Kif300Z6m1g" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKHLhrEe2Kif300Z6m1g" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKHbhrEe2Kif300Z6m1g" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKHrhrEe2Kif300Z6m1g" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHaKH7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKILhrEe2Kif300Z6m1g" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHaKIbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKIrhrEe2Kif300Z6m1g" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKI7hrEe2Kif300Z6m1g" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKJLhrEe2Kif300Z6m1g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKJbhrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKJrhrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKJ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaKKLhrEe2Kif300Z6m1g" name="slotIsAvailable" specification="_DF2qsbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaKKbhrEe2Kif300Z6m1g" name="currentInstructionTimeSlot" type="_C-W7kLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaKKrhrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKK7hrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaKLLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw8LhrEe2Kif300Z6m1g" name="findNextAvailableChannel" specification="_DF2qtrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaw8bhrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHaw8rhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaw87hrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaw9LhrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaw9bhrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHaw9rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw97hrEe2Kif300Z6m1g" name="selectPriority" specification="_C-naQLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw-LhrEe2Kif300Z6m1g" name="selectRM" specification="_C-naQbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw-bhrEe2Kif300Z6m1g" name="selectDM" specification="_C-naQrhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw-rhrEe2Kif300Z6m1g" name="selectRtHART" specification="_C-naQ7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw-7hrEe2Kif300Z6m1g" name="setScheduleSelected" specification="_DGj1YrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaw_LhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw_bhrEe2Kif300Z6m1g" name="setSchedule" specification="_DF2qvbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaw_rhrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaw_7hrEe2Kif300Z6m1g" name="getSchedule" specification="_C-naRLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxALhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxAbhrEe2Kif300Z6m1g" name="getSchedulerName" specification="_C-naRbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxArhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxA7hrEe2Kif300Z6m1g" name="getSchChoice" specification="_C-naSrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxBLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxBbhrEe2Kif300Z6m1g" name="getNumChannels" specification="_C-oBULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxBrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxB7hrEe2Kif300Z6m1g" name="getNumTransmissions" specification="_C-oBVbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxCLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxCbhrEe2Kif300Z6m1g" name="getRealTimeHartFlag" specification="_C-oBWrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxCrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxC7hrEe2Kif300Z6m1g" name="setRealTimeHartFlag" specification="_C-oBXLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxDLhrEe2Kif300Z6m1g" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxDbhrEe2Kif300Z6m1g" name="getMinPacketReceptionRate" specification="_C-ooYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxDrhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxD7hrEe2Kif300Z6m1g" name="getE2e" specification="_C-ooZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxELhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxEbhrEe2Kif300Z6m1g" name="getName" specification="_C-ooaLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxErhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxE7hrEe2Kif300Z6m1g" name="getOptimizationFlag" specification="_C-oobbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxFLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxFbhrEe2Kif300Z6m1g" name="deadlineMisses" specification="_C-pPcrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxFrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxF7hrEe2Kif300Z6m1g" name="getNumFaults" specification="_C-pPc7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxGLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHaxGbhrEe2Kif300Z6m1g" name="getNodeMapIndex" specification="_C-pPeLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHaxGrhrEe2Kif300Z6m1g" type="_DFdpILhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-mMILhrEe2Kif300Z6m1g" name="toWorkLoad" method="_DHaJ-LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2DpbhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mMIbhrEe2Kif300Z6m1g" name="buildOriginalProgram" method="_DHaJ_LhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-mMIrhrEe2Kif300Z6m1g" name="waitInstruction" visibility="private" method="_DHaJ_bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mMI7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMJLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mMJbhrEe2Kif300Z6m1g" name="elseWaitInstruction" visibility="private" method="_DHaKALhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mMJrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMJ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mMKLhrEe2Kif300Z6m1g" name="elsePullClause" visibility="private" method="_DHaKA7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mMKbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMKrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMK7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMLLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mMLbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mzMLhrEe2Kif300Z6m1g" name="hasPushInstruction" visibility="private" method="_DHaKCbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mzMbhrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzMrhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzM7hrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzNLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzNbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mzNrhrEe2Kif300Z6m1g" name="pushInstruction" visibility="private" method="_DHaKD7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mzN7hrEe2Kif300Z6m1g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzOLhrEe2Kif300Z6m1g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzObhrEe2Kif300Z6m1g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzOrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzO7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-mzPLhrEe2Kif300Z6m1g" name="getFirstChannelInInstruction" visibility="private" method="_DHaKFbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-mzPbhrEe2Kif300Z6m1g" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-mzPrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-naQLhrEe2Kif300Z6m1g" name="selectPriority" method="_DHaw97hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-naQbhrEe2Kif300Z6m1g" name="selectRM" method="_DHaw-LhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-naQrhrEe2Kif300Z6m1g" name="selectDM" method="_DHaw-bhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-naQ7hrEe2Kif300Z6m1g" name="selectRtHART" method="_DHaw-rhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-naRLhrEe2Kif300Z6m1g" name="getSchedule" method="_DHaw_7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2qv7hrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-naRbhrEe2Kif300Z6m1g" name="getSchedulerName" method="_DHaxAbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-naRrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-naSrhrEe2Kif300Z6m1g" name="getSchChoice" method="_DHaxA7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-naS7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-oBULhrEe2Kif300Z6m1g" name="getNumChannels" method="_DHaxBbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-oBUbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-oBVbhrEe2Kif300Z6m1g" name="getNumTransmissions" method="_DHaxB7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-oBVrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-oBWrhrEe2Kif300Z6m1g" name="getRealTimeHartFlag" visibility="private" method="_DHaxCbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-oBW7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-oBXLhrEe2Kif300Z6m1g" name="setRealTimeHartFlag" visibility="private" method="_DHaxC7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-oBXbhrEe2Kif300Z6m1g" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-ooYLhrEe2Kif300Z6m1g" name="getMinPacketReceptionRate" method="_DHaxDbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGkcY7hrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-ooZLhrEe2Kif300Z6m1g" name="getE2e" method="_DHaxD7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGkcZLhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-ooaLhrEe2Kif300Z6m1g" name="getName" method="_DHaxEbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-ooabhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-oobbhrEe2Kif300Z6m1g" name="getOptimizationFlag" method="_DHaxE7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-oobrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-pPcrhrEe2Kif300Z6m1g" name="deadlineMisses" method="_DHaxFbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2qwLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-pPc7hrEe2Kif300Z6m1g" name="getNumFaults" method="_DHaxF7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-pPdLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-pPeLhrEe2Kif300Z6m1g" name="getNodeMapIndex" method="_DHaxGbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGkcZbhrEe2Kif300Z6m1g" type="_DFdpILhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2DoLhrEe2Kif300Z6m1g" name="setDefaultParameters" visibility="private" method="_DHaJ87hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2DobhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF2DorhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2Do7hrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DpLhrEe2Kif300Z6m1g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2DprhrEe2Kif300Z6m1g" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_DHaKGLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2Dp7hrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF2DqLhrEe2Kif300Z6m1g" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DqbhrEe2Kif300Z6m1g" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DqrhrEe2Kif300Z6m1g" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2Dq7hrEe2Kif300Z6m1g" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DrLhrEe2Kif300Z6m1g" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DF2DtLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DrbhrEe2Kif300Z6m1g" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DF2qsLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DrrhrEe2Kif300Z6m1g" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2Dr7hrEe2Kif300Z6m1g" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DsLhrEe2Kif300Z6m1g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DsbhrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2DsrhrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2Ds7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2qsbhrEe2Kif300Z6m1g" name="slotIsAvailable" visibility="private" method="_DHaKKLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2qsrhrEe2Kif300Z6m1g" name="currentInstructionTimeSlot" type="_C-W7kLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF2qs7hrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qtLhrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qtbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2qtrhrEe2Kif300Z6m1g" name="findNextAvailableChannel" visibility="private" method="_DHaw8LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2qt7hrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF2quLhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qubhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qurhrEe2Kif300Z6m1g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qu7hrEe2Kif300Z6m1g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF2qvLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF2qvbhrEe2Kif300Z6m1g" name="setSchedule" visibility="private" method="_DHaw_bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF2qvrhrEe2Kif300Z6m1g" name="schedule" type="_C-rEoLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGj1ULhrEe2Kif300Z6m1g" name="Program" visibility="package" method="_DHaJ57hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGj1VrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGj1V7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGj1UbhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGj1UrhrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGj1U7hrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGj1VLhrEe2Kif300Z6m1g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGj1VbhrEe2Kif300Z6m1g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGj1WLhrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGj1WbhrEe2Kif300Z6m1g" name="Program" visibility="package" method="_DHaJ7rhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGj1XbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGj1XrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGj1WrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGj1W7hrEe2Kif300Z6m1g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGj1XLhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGj1X7hrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGj1YLhrEe2Kif300Z6m1g" name="buildProgram" method="_DHaJ-rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGj1YbhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGj1YrhrEe2Kif300Z6m1g" name="setScheduleSelected" visibility="private" method="_DHaw-7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGkcYLhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-rEoLhrEe2Kif300Z6m1g" name="ProgramSchedule">
              <generalization xmi:id="_DF340LhrEe2Kif300Z6m1g" general="_C-7jULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDkkLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHDkkbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYALhrEe2Kif300Z6m1g" name="ProgramSchedule" specification="_C-rrsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYAbhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYArhrEe2Kif300Z6m1g" name="ProgramSchedule" specification="_C-rrtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYA7hrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHbYBLhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHbYBbhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(row,column);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-rrsLhrEe2Kif300Z6m1g" name="ProgramSchedule" method="_DHbYALhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-rrsbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-rrsrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-rrs7hrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-rrtLhrEe2Kif300Z6m1g" name="ProgramSchedule" visibility="package" method="_DHbYArhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-rrt7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-rruLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-rrtbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-rrtrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-rrubhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-sSwLhrEe2Kif300Z6m1g" name="ProgramVisualization">
              <ownedComment xmi:id="_DHnlR7hrEe2Kif300Z6m1g">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DF4f6LhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDkkrhrEe2Kif300Z6m1g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHDkk7hrEe2Kif300Z6m1g" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHDklLhrEe2Kif300Z6m1g" name="sourceCode" visibility="private" type="_C-rEoLhrEe2Kif300Z6m1g" association="_DIDqI7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDklrhrEe2Kif300Z6m1g" name="program" visibility="private" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIDqJrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDkmLhrEe2Kif300Z6m1g" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYBrhrEe2Kif300Z6m1g" name="ProgramVisualization" specification="_DF4f4LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYB7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYCLhrEe2Kif300Z6m1g" type="_C-sSwLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYCbhrEe2Kif300Z6m1g" name="displayVisualization" specification="_C-sSwbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYCrhrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYC7hrEe2Kif300Z6m1g" name="createHeader" specification="_C-sSxbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYDLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYDbhrEe2Kif300Z6m1g" name="createFooter" specification="_C-s50LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYDrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYD7hrEe2Kif300Z6m1g" name="createColumnHeader" specification="_C-s51LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYELhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHbYEbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYErhrEe2Kif300Z6m1g" name="createVisualizationData" specification="_C-s527hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYE7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHbYFLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYFbhrEe2Kif300Z6m1g" name="createTitle" specification="_C-s54rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYFrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-sSwbhrEe2Kif300Z6m1g" name="displayVisualization" method="_DHbYCbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF4f5bhrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-sSxbhrEe2Kif300Z6m1g" name="createHeader" visibility="protected" method="_DHbYC7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF4f5rhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-s50LhrEe2Kif300Z6m1g" name="createFooter" visibility="protected" method="_DHbYDbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF4f57hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-s51LhrEe2Kif300Z6m1g" name="createColumnHeader" visibility="protected" method="_DHbYD7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-s51bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-s51rhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-s527hrEe2Kif300Z6m1g" name="createVisualizationData" visibility="protected" method="_DHbYErhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-s53LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C-s53bhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-s54rhrEe2Kif300Z6m1g" name="createTitle" visibility="private" method="_DHbYFbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-s547hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF4f4LhrEe2Kif300Z6m1g" name="ProgramVisualization" visibility="package" method="_DHbYBrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF4f4rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF4f47hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF4f4bhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF4f5LhrEe2Kif300Z6m1g" type="_C-sSwLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-tg4LhrEe2Kif300Z6m1g" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_DGlDcLhrEe2Kif300Z6m1g" client="_C-tg4LhrEe2Kif300Z6m1g" supplier="_DFkW3bhrEe2Kif300Z6m1g" contract="_DFkW3bhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYF7hrEe2Kif300Z6m1g" name="compare" specification="_DGlqgLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYGLhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYGbhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYGrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.priorityComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGlqgLhrEe2Kif300Z6m1g" name="compare" method="_DHbYF7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGlqgbhrEe2Kif300Z6m1g" name="obj1" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGlqgrhrEe2Kif300Z6m1g" name="obj2" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGlqg7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-uH8LhrEe2Kif300Z6m1g" name="ReleaseTimeQueue">
              <generalization xmi:id="_C-uvBbhrEe2Kif300Z6m1g" general="_C-uvA7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDkmrhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHDkm7hrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYG7hrEe2Kif300Z6m1g" name="ReleaseTimeQueue" specification="_C-uH8rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYHLhrEe2Kif300Z6m1g" type="_C-uH8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYHbhrEe2Kif300Z6m1g" name="ReleaseTimeQueue" specification="_DF5G8LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYHrhrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYH7hrEe2Kif300Z6m1g" type="_C-uH8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-uH8rhrEe2Kif300Z6m1g" name="ReleaseTimeQueue" visibility="package" method="_DHbYG7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-uvALhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-uvAbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-uvArhrEe2Kif300Z6m1g" type="_C-uH8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF5G8LhrEe2Kif300Z6m1g" name="ReleaseTimeQueue" visibility="package" method="_DHbYHbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF5G8rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF5G87hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF5G8bhrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF5G9LhrEe2Kif300Z6m1g" type="_C-uH8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-uvB7hrEe2Kif300Z6m1g" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_rsIgULhsEe2Kif300Z6m1g">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the
WARP system.
&lt;p>

Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability
value of 0.0.) &lt;br>
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +
M*PrevSrcNodeState &lt;br>
This value represents the probability that the message as been received by the node SinkNode.
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with
SinkNode as a listener.
&lt;p>

The last probability state value for any node is the reliability of the message reaching that
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode
probability.
&lt;p>

CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.
&lt;p>

To do this, you will need to retrieve the program source, parse the instructions for each node,
in each time slot, to extract the src and snk nodes in the instruction and then apply the message
success probability equation defined above.
&lt;p>

I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and
snk nodes from the instruction string in a program schedule time slot.

@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYILhrEe2Kif300Z6m1g" name="ReliabilityAnalysis" specification="_DF5G9rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYIbhrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYIrhrEe2Kif300Z6m1g" type="_C-uvB7hrEe2Kif300Z6m1g" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYI7hrEe2Kif300Z6m1g" name="verifyReliabilities" specification="_C-vWELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYJLhrEe2Kif300Z6m1g" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub
 return true;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-vWELhrEe2Kif300Z6m1g" name="verifyReliabilities" method="_DHbYI7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-vWEbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF5G9rhrEe2Kif300Z6m1g" name="ReliabilityAnalysis" method="_DHbYILhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF5G-LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF5G-bhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF5G97hrEe2Kif300Z6m1g" name="program" type="_C-k-ArhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF5G-rhrEe2Kif300Z6m1g" type="_C-uvB7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rsHSMLhsEe2Kif300Z6m1g" name="getReliabilities">
                <ownedParameter xmi:id="_rsHSMbhsEe2Kif300Z6m1g" type="_C-v9JLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_C-vWErhrEe2Kif300Z6m1g" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_DHnlSbhrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_C-vWE7hrEe2Kif300Z6m1g" name="minPacketReceptionRate" type="_DGkcYbhrEe2Kif300Z6m1g" isReadOnly="true"/>
              <ownedAttribute xmi:id="_C-vWFLhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-vWFbhrEe2Kif300Z6m1g" name="ReliabilityRow">
              <generalization xmi:id="_DF5G-7hrEe2Kif300Z6m1g" general="_C-xyULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDknLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHDknbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYJbhrEe2Kif300Z6m1g" name="ReliabilityRow" specification="_C-v9ILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYJrhrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYJ7hrEe2Kif300Z6m1g" name="ReliabilityRow" specification="_DGlqh7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYKLhrEe2Kif300Z6m1g" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHbYKbhrEe2Kif300Z6m1g" name="element" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHbYKrhrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHbYK7hrEe2Kif300Z6m1g" name="ReliabilityRow" specification="_DGmRkLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHbYLLhrEe2Kif300Z6m1g" name="rowArray" type="_DGkcYbhrEe2Kif300Z6m1g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHbYLbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHbYLrhrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-v9ILhrEe2Kif300Z6m1g" name="ReliabilityRow" method="_DHbYJbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-v9IbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-v9IrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-v9I7hrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGlqh7hrEe2Kif300Z6m1g" name="ReliabilityRow" visibility="package" method="_DHbYJ7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGlqirhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGlqi7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGlqiLhrEe2Kif300Z6m1g" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGlqibhrEe2Kif300Z6m1g" name="element" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGlqjLhrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGmRkLhrEe2Kif300Z6m1g" name="ReliabilityRow" visibility="package" method="_DHbYK7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGmRkrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGmRk7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGmRkbhrEe2Kif300Z6m1g" name="rowArray" type="_DGkcYbhrEe2Kif300Z6m1g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGmRlbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGmRlLhrEe2Kif300Z6m1g" type="_C-vWFbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-v9JLhrEe2Kif300Z6m1g" name="ReliabilityTable">
              <generalization xmi:id="_DF5uALhrEe2Kif300Z6m1g" general="_C-7jULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHDknrhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHDkn7hrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_ELhrEe2Kif300Z6m1g" name="ReliabilityTable" specification="_C-v9JbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_EbhrEe2Kif300Z6m1g" type="_C-v9JLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_ErhrEe2Kif300Z6m1g" name="ReliabilityTable" specification="_C-wkMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_E7hrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_FLhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_FbhrEe2Kif300Z6m1g" type="_C-v9JLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		for(int i=0; i &lt; row; i++) {
			ReliabilityRow emptyRow = new ReliabilityRow();
			for(int j=0; j &lt; column; j++) {
				emptyRow.add(0.0);
			}
			this.add(emptyRow);
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-v9JbhrEe2Kif300Z6m1g" name="ReliabilityTable" method="_DHb_ELhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-v9JrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-v9J7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-v9KLhrEe2Kif300Z6m1g" type="_C-v9JLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-wkMLhrEe2Kif300Z6m1g" name="ReliabilityTable" visibility="package" method="_DHb_ErhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-wkM7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-wkNLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-wkMbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-wkMrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-wkNbhrEe2Kif300Z6m1g" type="_C-v9JLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-wkNrhrEe2Kif300Z6m1g" name="ReliabilityVisualization">
              <ownedComment xmi:id="_DHoMULhrEe2Kif300Z6m1g">
                <body>ReliabilityVisualization creates the visualizations for
the reliability analysis of the WARP program. &lt;p>

CS2820 Spring 2023 Project: Implement this class to create
the file visualization that is requested in Warp.

@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_DF5uB7hrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELoLhrEe2Kif300Z6m1g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHELobhrEe2Kif300Z6m1g" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHELorhrEe2Kif300Z6m1g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHELo7hrEe2Kif300Z6m1g" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHELpLhrEe2Kif300Z6m1g" name="warp" visibility="private" type="_C_YPQLhrEe2Kif300Z6m1g" association="_DIDqKbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELprhrEe2Kif300Z6m1g" name="ra" visibility="private" type="_C-uvB7hrEe2Kif300Z6m1g" association="_DIERMbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_FrhrEe2Kif300Z6m1g" name="ReliabilityVisualization" specification="_DF5uArhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_F7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_GLhrEe2Kif300Z6m1g" type="_C-wkNrhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
		this.warp = warp;
		this.ra = warp.toReliabilityAnalysis();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DF5uArhrEe2Kif300Z6m1g" name="ReliabilityVisualization" visibility="package" method="_DHb_FrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF5uBLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF5uBbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF5uA7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF5uBrhrEe2Kif300Z6m1g" type="_C-wkNrhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-xLQLhrEe2Kif300Z6m1g" name="ReportVisualization">
              <generalization xmi:id="_DF6VGrhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELqLhrEe2Kif300Z6m1g" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHELqbhrEe2Kif300Z6m1g" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHELqrhrEe2Kif300Z6m1g" name="content" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DIERNLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELrLhrEe2Kif300Z6m1g" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_GbhrEe2Kif300Z6m1g" name="ReportVisualization" specification="_DF6VELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_GrhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_G7hrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_HLhrEe2Kif300Z6m1g" name="content" type="_C92lQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_HbhrEe2Kif300Z6m1g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_HrhrEe2Kif300Z6m1g" type="_C-xLQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);
		this.content = content;
		this.title = title;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_H7hrEe2Kif300Z6m1g" name="visualization" specification="_C-xLQbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_ILhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return createReport();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_IbhrEe2Kif300Z6m1g" name="createReport" specification="_C-xLRbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_IrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description report;
		if (content.size() > 0) {
			report = new Description(new String (title + &quot; Report&quot;));
			report.addAll(content);
		} else {
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));
		}
		return report;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-xLQbhrEe2Kif300Z6m1g" name="visualization" method="_DHb_H7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF6VGLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-xLRbhrEe2Kif300Z6m1g" name="createReport" visibility="private" method="_DHb_IbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF6VGbhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF6VELhrEe2Kif300Z6m1g" name="ReportVisualization" visibility="package" method="_DHb_GbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF6VFbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF6VFrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF6VEbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF6VErhrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF6VE7hrEe2Kif300Z6m1g" name="content" type="_C92lQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF6VFLhrEe2Kif300Z6m1g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF6VF7hrEe2Kif300Z6m1g" type="_C-xLQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-xyULhrEe2Kif300Z6m1g" name="Row">
              <generalization xmi:id="_DGm4oLhrEe2Kif300Z6m1g" general="_DFeQMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELrrhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHELr7hrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_I7hrEe2Kif300Z6m1g" name="Row" specification="_C-xyUrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_JLhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_JbhrEe2Kif300Z6m1g" name="Row" specification="_DGmRlrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_JrhrEe2Kif300Z6m1g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_J7hrEe2Kif300Z6m1g" name="element" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_KLhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; numElements; i++) {  
			this.add(element); // create the the row initialized with element
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_KbhrEe2Kif300Z6m1g" name="Row" specification="_DGmRnLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_KrhrEe2Kif300Z6m1g" name="rowArray" type="_DGaEUrhrEe2Kif300Z6m1g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHb_K7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_LLhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; rowArray.length; i++) {  
			this.add(rowArray[i]); // create the the row initialized with rowArray
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_LbhrEe2Kif300Z6m1g" name="Row" specification="_C-yZYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_LrhrEe2Kif300Z6m1g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_L7hrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(numElements);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-xyUrhrEe2Kif300Z6m1g" name="Row" method="_DHb_I7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-xyU7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-xyVLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-xyVbhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-yZYLhrEe2Kif300Z6m1g" name="Row" visibility="package" method="_DHb_LbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-yZYrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-yZY7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-yZYbhrEe2Kif300Z6m1g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-yZZLhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGmRlrhrEe2Kif300Z6m1g" name="Row" visibility="package" method="_DHb_JbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGmRmbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGmRmrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGmRl7hrEe2Kif300Z6m1g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGmRmLhrEe2Kif300Z6m1g" name="element" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGmRm7hrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGmRnLhrEe2Kif300Z6m1g" name="Row" visibility="package" method="_DHb_KbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGmRnrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGmRn7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGmRnbhrEe2Kif300Z6m1g" name="rowArray" type="_DGaEUrhrEe2Kif300Z6m1g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DGmRobhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGmRoLhrEe2Kif300Z6m1g" type="_C-xyULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-yZZbhrEe2Kif300Z6m1g" name="SchedulableObjectQueue">
              <generalization xmi:id="_C-zAcLhrEe2Kif300Z6m1g" general="_C-uvA7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHELsLhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHELsbhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_MLhrEe2Kif300Z6m1g" name="SchedulableObjectQueue" specification="_DGm4orhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_MbhrEe2Kif300Z6m1g" name="comparitor" type="_DFkW3bhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_MrhrEe2Kif300Z6m1g" type="_C-yZZbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_M7hrEe2Kif300Z6m1g" name="SchedulableObjectQueue" specification="_DGnfsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_NLhrEe2Kif300Z6m1g" name="comparitor" type="_DFkW3bhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_NbhrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_NrhrEe2Kif300Z6m1g" type="_C-yZZbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(comparitor);
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGm4orhrEe2Kif300Z6m1g" name="SchedulableObjectQueue" visibility="package" method="_DHb_MLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGm4pLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGm4pbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGm4o7hrEe2Kif300Z6m1g" name="comparitor" type="_DFkW3bhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGm4prhrEe2Kif300Z6m1g" type="_C-yZZbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGnfsLhrEe2Kif300Z6m1g" name="SchedulableObjectQueue" visibility="package" method="_DHb_M7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGnfs7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGnftLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGnfsbhrEe2Kif300Z6m1g" name="comparitor" type="_DFkW3bhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGnfsrhrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGnftbhrEe2Kif300Z6m1g" type="_C-yZZbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-zAcrhrEe2Kif300Z6m1g" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_DHoMUbhrEe2Kif300Z6m1g">
                <body>Schedule builds a non-preemptive, priority schedule 
for the Partially Ordered Set (Poset) using numChannels. 
It ensures, precedence constraints are preserved, and 
reports deadline misses.

@author sgoddard2
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHEysLhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHEysbhrEe2Kif300Z6m1g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHEysrhrEe2Kif300Z6m1g" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHEytLhrEe2Kif300Z6m1g" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHEytrhrEe2Kif300Z6m1g" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHEyt7hrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHEyubhrEe2Kif300Z6m1g" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHEyu7hrEe2Kif300Z6m1g" name="schedule" visibility="protected" type="_C-3R4LhrEe2Kif300Z6m1g" association="_DIERN7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHEyvbhrEe2Kif300Z6m1g" name="poset" visibility="protected" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIE4QbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_N7hrEe2Kif300Z6m1g" name="Schedule" specification="_DF68ILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHb_OLhrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHb_ObhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHb_OrhrEe2Kif300Z6m1g" type="_C-zAcrhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;
		this.numChannels = numChannels;
		var maxPhase = poset.getMaxPhase();
		endScheduleTime = poset.getHyperPeriod();
		if (maxPhase > 0) {
			/* need to schedule longer to cover start-up period */
			endScheduleTime = maxPhase + 2*endScheduleTime ;
		}
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);
		schedulable = true;
		buildSchedule();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmILhrEe2Kif300Z6m1g" name="getSchedule" specification="_C-01pLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmIbhrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return schedule;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmIrhrEe2Kif300Z6m1g" name="buildSchedule" specification="_C-01pbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>var next = poset.getNextActivation();
		while (next != null) {
			/* Add next to the schedule if max of its release time 
			 * and end time is less than the endScheduleTime.
			 * Otherwise, its releaseTime is >= endScheduleTime
			 * or endTime >= currentTime, which means can't
			 * schedule at this time.
			 */
			if (!addToSchedule(next)) {
				schedulable = false;
				reportNotSchedulable(next);
				/* Record unschedulable element */
				fakeSchedulingToTestRest(next);
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}
			} else {
				/* update the next release time and add it back into
				 * the priority queue
				 */
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}

			}
			next = poset.getNextActivation();
		}
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmI7hrEe2Kif300Z6m1g" name="toProgram" specification="_C-1csLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmJLhrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();
		var numNodes = nodeNames.length;
		var program = new ProgramSchedule(endScheduleTime,numNodes);
		CodeFragment codeFragment = null;
		var duration = 0; // default duration for SLEEP;
		String name = null;
		var startTime = 0;
		var endTime = 0;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();
		
		if (!schedulable) {
			/* not Schedulable, so we will not create code */
			return program; // return empty program
		}
		
		/* build the nodeIndexMap by putting nodes in alphabetic
		 * order and then hashing its name to its rank
		 */
		for (int i = 0; i &lt; numNodes; i++) {
			nodeIndexMap.put(nodeNames[i], i);
		}
		
		for (int channel = 0; channel &lt; numChannels; channel++) {
			for (int time = 0; time &lt; endScheduleTime; time++) {
				var entry = schedule.get(channel,time);
				if (entry == null) {
					/* no entry here, so instruction will be SLEEP instruction */
					codeFragment = new CodeFragment();
					startTime = time;
					endTime = time;
					name = &quot;Empty&quot;;
				} else {
					/* create the codeFragment for this activation entry */
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),
							entry.getCoordinators(),channel);
					startTime = entry.getStartTime();
					endTime = entry.getEndTime();
					name = entry.getName();
					duration =  endTime - startTime + 1;
					if (duration > codeFragment.size()) {
						/* for combination fragments, we can sometimes generate
						 * more efficient code than originally thought. So,
						 * update schedule by replacing the entry with null
						 * and update the activation with the the new end time.
						 */
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {
							schedule.set(channel,endTime-k,null);
						}
						endTime = codeFragment.size() + startTime - 1;
						entry.setEndTime(endTime);
						
					}
				}
				duration =  endTime - startTime + 1;
				/* duration can be &lt; fragment size  when two activations 
				 * were combined but they had different delta values. 
				 * The larger was used, but we should make sure duration isn't
				 * > size, else we may overwrite something. Just report for now.
				 */
				if (duration > codeFragment.size()) {
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, 
							name,duration, codeFragment.size());
				} else if (time != startTime ){
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, 
							name, time, startTime);

				} else {
					var instructions = codeFragment.instructions();
					var coordinator = codeFragment.getCoordinator();

					if (coordinator != null) {
						/* coordinator is null the entry is sleep,
						 * which happens when the schedule entry was null.
						 * We skip this entry and then replace nulls in the
						 * program with sleep instructions at the end
						 */
						for (int i = 0; i &lt; duration; i++) {
							var instr = instructions.get(i);
							/* enter the instruciton in the program */
							var row = time+i;
							var column = nodeIndexMap.get(coordinator);		
							program.set(row,column,instr);

							/* get the listeners from the instruction 
							 * and insert the wait() instructions into
							 * the program for each listener
							 * */
							var dsl = new WarpDSL();
							var instructionParametersArray = dsl.getInstructionParameters(instr); 
							for (InstructionParameters fragment: instructionParametersArray) {
								String listener = fragment.getListener();
								if(!listener.equals(UNKNOWN)) {
									/* need to add a wait instruction for node listener
									 * wait(#channel)
									 * at time,listener location of program table
									 */
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));
								}
							}
						}
					}
					time += duration-1;
				}

			}
		}
		replaceNullWithSleep(program);
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmJbhrEe2Kif300Z6m1g" name="replaceNullWithSleep" specification="_DF68KLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmJrhrEe2Kif300Z6m1g" name="program" type="_C-rEoLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var rows = program.getNumRows();
		var columns = program.getNumColumns();

		for (int i = 0; i &lt; rows; i++) {
			for (int j = 0; j &lt; columns; j++) {
				var entry = program.get(i,j);
				if (entry == null) {
					program.set(i, j, CodeFragment.sleep());
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmJ7hrEe2Kif300Z6m1g" name="fakeSchedulingToTestRest" specification="_DF68KrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmKLhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();
		var startTime = fakeTime;
		var channel = numChannels; // use last channel
		if (pred != null) {
			/* remove pred end time */
			pred.pollEndTimes(); 
		} 
		next.setStartTime(next.getReleaseTime());
		var duration = next.getExecutionDuration();
		fakeTime = startTime + duration - 1;
		if (fakeTime >= endScheduleTime) {
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);
			print();
		}
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endScheduleTime); 
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		for (int i = startTime; i &lt;= fakeTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		fakeTime++;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmKbhrEe2Kif300Z6m1g" name="getChannelAndSetStartTime" specification="_DF68LLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmKrhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmK7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();
		var channel = numChannels; // default is no channel available
		var endTime = endScheduleTime; // duration of the schedule
		schedulableObject.setStartTime(endTime);
		schedulableObject.setEndTime(endTime);
		/* Create a flag indicating it might be possible to combine
		 * to partitions. This flag will be used to create a channel
		 * affinity, in case scheduler wants to combine to partitions.
		 */
		var pred = schedulableObject.getPredecessor();
		if (pred != null) {
			/* peek at the head of the endTimes for pred */
			var predEndTime = pred.peekEndTimes();
			if (predEndTime == null) {
				return numChannels; // return indicates no channel/time
			} else if (predEndTime >= time) {
				/* can't schedule here; need to look later */
				time = predEndTime+1;
			} 
		}
		var scheduleLocation = findChannelAndTime(time,schedulableObject );
		channel = scheduleLocation.getChannel();
		time = scheduleLocation.getTime();

		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {
			/* Found a channel with no conflicts.
			 * Set the object's start time to the that
			 * time.
			 */
			schedulableObject.setStartTime(time);

		}
		return channel;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmLLhrEe2Kif300Z6m1g" name="findChannelAndTime" specification="_DF68L7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmLbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmLrhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmL7hrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available 
		var duration = schedulableObject.getExecutionDuration();
		
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {
			time ++; //+= duration+1;
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			return new ScheduleLocation(channel, time);	
		} 
		
		/* can schedule at current value of time, so find the best channel.
		 * Bias toward and empty channel at near lowest end of spectrum */
		for (int i = numChannels-1; i >= 0 ; i--) {
			/* Start at numChannels and work down to 0
			 * checking for conflicts and finding an
			 * empty slot at the same time. This will
			 * result in the lowest possible channel
			 * being used if their are no conflicts
			 * with any channel entries.
			 * 
			 * This version combines entries as soon as.
			 * possible, without looking for other, low-channel
			 * combinations.
			 */
			// var entry = schedule.get(i,time);
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {
				var priorEntry = schedule.get(i, time-1);
				if (priorEntry != null) {
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; 
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {
						channel = i;
						time = priorEntry.getStartTime();
						break;
					}
				}
			}
			if (isAvailable(schedulableObject, i, time, duration)) {
				channel = i;
			}

		}
		/* no time and channel found in interval [time, time+duration]
		 * so, advance time and check again
		 */
		if (channel == numChannels) {
			return continueSearch(time,schedulableObject);
		} else {
			return new ScheduleLocation(channel, time);	
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmMLhrEe2Kif300Z6m1g" name="continueSearch" specification="_DF7jM7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmMbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmMrhrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmM7hrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmNLhrEe2Kif300Z6m1g" name="noOtherChannelConflicts" specification="_DF7jN7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmNbhrEe2Kif300Z6m1g" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmNrhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmN7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmOLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {
			var entry = schedule.get(channel,time);

			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {
				if (entry.conflictExists(schedulableObject)) {
					result = false;
					return result;
				}
			} 
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmObhrEe2Kif300Z6m1g" name="conflictsExist" specification="_DF7jPLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmOrhrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmO7hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmPLhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmPbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;

		if (time+duration >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = true;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,i);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.conflictExists(obj)) {
							result = true;
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmPrhrEe2Kif300Z6m1g" name="freeOfCoordinatorConflicts" specification="_DF7jQbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmP7hrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmQLhrEe2Kif300Z6m1g" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmQbhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmQrhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmQ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time+(duration-1) >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = false;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,time);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {
							result = false; // same coordinator is scheduled
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmRLhrEe2Kif300Z6m1g" name="isAvailable" specification="_DF7jR7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmRbhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmRrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmR7hrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmSLhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmSbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;
		
		if (conflictsExist(a1,start,duration)) {
			return false;
		}
		for (Integer j = start; j &lt; start+duration; j++ ) {
			var currentEntry = schedule.get(channel,j);
			if (currentEntry != null) {
				if (currentEntry.canCombine(a1)) {
					/* no conflict with this entry, and can
					 * combine so check for combined entry time
					 *  to see if we can combine activations
					 */
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);
					var combinedEntry = new CombinedActivation(currentEntry,a1);
					var searchTime = currentEntry.getEndTime()+1;
					var searchLength = combinedDuration - (duration-(j-start));
					return isAvailable(combinedEntry, channel, searchTime, searchLength);
				} else {
					available = false;
					break;
				}
			}
		}
		if (available) {
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmSrhrEe2Kif300Z6m1g" name="isAvailable" specification="_DF7jTbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmS7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmTLhrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmTbhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmTrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;
		
		for (Integer channel = 0; channel &lt; numChannels; channel++) {
			if (isAvailable(a1,channel,start,duration)) {
			available = true;
			break;
			}
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmT7hrEe2Kif300Z6m1g" name="timeRemaining" specification="_C-1csbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmULhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmUbhrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmUrhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmU7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;

		var row = schedule.get(channel);
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {
			if (row.get(i) != null) {
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmVLhrEe2Kif300Z6m1g" name="canCombineEntriesInPlace" specification="_DF8KQrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmVbhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmVrhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmV7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (a1 == null || a2 == null) {
			return false;
		}
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); 
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); 
		
		if (a2.canCombine(a1)) {
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);
			 var newEndTime = minStartTime + combinedDuration - 1;
			 if (newEndTime &lt;= maxEndTime) {
				result = true;
			 }
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmWLhrEe2Kif300Z6m1g" name="combinedEntriesInPlace" specification="_DF8KRrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmWbhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmWrhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmW7hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHcmXLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (canCombineEntriesInPlace(a1,a2)) {
			var entry = new CombinedActivation(a1, a2);
			var startTime = entry.getStartTime();
			var endTime = entry.getEndTime();
			for (int i = startTime; i &lt;= endTime; i++) {
				/* Add this object to the schedule for the
				 * from startTime to endTime.
				 */
				schedule.set(channel, i, entry);
			}
			result = true;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmXbhrEe2Kif300Z6m1g" name="addToSchedule" specification="_DF8KS7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmXrhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHcmX7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		/* found a time and channel  that are valid */
		Activation currentEntry = null;	
		var combineTime = endScheduleTime;
		var startTime = next.getStartTime(); // set by getChannel()
		var duration = next.getExecutionDuration();	
		var endTime = startTime + duration - 1;
		/* Check the schedule to see if we need to 
		 * combine next with a higher priority entry 
		 * in the schedule during its execution
		 */
		for (int i = startTime; i &lt; startTime + duration; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				/* need to check if combined time is available or
				 * if we have to combine yet another entry 
				 */
				 var endCurrentEntry = currentEntry.getEndTime();
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);
				 var newEndTime = startTime + combinedDuration - 1;
				 /* need to check to make sure there are no conflicts on other 
				  * channels for this new interval
				  */
				 var available = isAvailable(next, channel, startTime, combinedDuration);
				 if (available) {	 
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;
					 if (additionalTimeNeeded > 0) {
						 /* see if we can combine the two existing adjacent entries
						  * in place. If so, then try to recursively schedule next
						  */
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);
						 if (additionalCombine != null) {
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {
								 return false;
							 }
							 addToSchedule(next);
							 return true;
						 }
					 }
					 combineTime = i;
					 duration = next.getCombinedExecutionDuration(currentEntry);
					 endTime = startTime + duration - 1;
					 break;
				 }
			}
		}
		next.setEndTime(endTime);
		var responseTime = endTime - next.getReleaseTime();
		if (responseTime > next.getDeadline()) {
			return false; // unable to schedule this entry
		}
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endTime); 
		/* remove predecessor end time that matches this start time */
		var pred = next.getPredecessor();
		if (pred != null) {
			pred.pollEndTimes(); 
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
			duration = entry.getExecutionDuration();
			endTime = startTime + duration - 1;
			entry.setEndTime(endTime);
			next.setEndTime(endTime);
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHcmYLhrEe2Kif300Z6m1g" name="reportNotSchedulable" specification="_DF8KTrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHcmYbhrEe2Kif300Z6m1g" name="object" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNMLhrEe2Kif300Z6m1g" name="printVerbose" specification="_C-2DwLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);
		var endSchedule = schedule.get(0).size();
		for (int i = 0; i &lt; numChannels; i++) {
			System.out.printf(&quot;\nChannel: %d&quot;,i);
			var name = UNKNOWN;
			for (int j = 0; j &lt; endSchedule; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName)) {
						name = entryName;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);
					}
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNMbhrEe2Kif300Z6m1g" name="print" specification="_C-2DwbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);
		for (int i = 0; i &lt; schedule.size(); i++) {
			System.out.printf(&quot;\nChannel: %d: &quot;,i);
			var name = UNKNOWN;
			var startTime = -1;
			for (int j = 0; j &lt; endScheduleTime; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {
						/* only print out unique entries (not duplicates in the interval */
						name = entryName;
						startTime = entry.getStartTime();
						System.out.printf(&quot;%s[%d,%d] &quot;, 
								name, entry.getStartTime(),entry.getEndTime());
					} 
				}
			}
		}
		/* report the number of Activations not schedulable, if any */
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);
		var numNotSchedulable = 0; 	
		var name = UNKNOWN;
		var lastStartTime = -1;
		for (int i = 0; i &lt; endScheduleTime; i++) {
			var entry = notSchedulable.get(i);
			if (entry != null) {
				var entryName = entry.getName();
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {
					name = entryName;
					lastStartTime = entry.getStartTime();
					numNotSchedulable++;
				}
			}
		}
		if (numNotSchedulable > 0 ) {
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);
		}
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-01pLhrEe2Kif300Z6m1g" name="getSchedule" method="_DHcmILhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMVLhrEe2Kif300Z6m1g">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF68JrhrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-01pbhrEe2Kif300Z6m1g" name="buildSchedule" visibility="private" method="_DHcmIrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-1csLhrEe2Kif300Z6m1g" name="toProgram" method="_DHcmI7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF68J7hrEe2Kif300Z6m1g" type="_C-rEoLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-1csbhrEe2Kif300Z6m1g" name="timeRemaining" visibility="protected" method="_DHcmT7hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMWrhrEe2Kif300Z6m1g">
                  <body>timeRemaining returns duration minus the number of vacant slots found. 
	 * 
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_C-1csrhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-1cs7hrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-1ctLhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-1ctbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-2DwLhrEe2Kif300Z6m1g" name="printVerbose" method="_DHdNMLhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C-2DwbhrEe2Kif300Z6m1g" name="print" method="_DHdNMbhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DF68ILhrEe2Kif300Z6m1g" name="Schedule" visibility="package" method="_DHb_N7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF68I7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF68JLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF68IbhrEe2Kif300Z6m1g" name="poset" type="_C-gFgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF68IrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF68JbhrEe2Kif300Z6m1g" type="_C-zAcrhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF68KLhrEe2Kif300Z6m1g" name="replaceNullWithSleep" visibility="private" method="_DHcmJbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMVbhrEe2Kif300Z6m1g">
                  <body>Replace all null entries in program with sleep instructions
	 * 
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF68KbhrEe2Kif300Z6m1g" name="program" type="_C-rEoLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF68KrhrEe2Kif300Z6m1g" name="fakeSchedulingToTestRest" visibility="private" method="_DHcmJ7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF68K7hrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF68LLhrEe2Kif300Z6m1g" name="getChannelAndSetStartTime" visibility="protected" method="_DHcmKbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMVrhrEe2Kif300Z6m1g">
                  <body>getChannel checks for conflicts and if none, returns a free
	 * channel. &lt;br>
	 * If return value == numChannels, then no channel can be assigned
	 * due to either conflicts or no availability.
	 * @param schedulableObject
	 * 
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF68LbhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF68LrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF68L7hrEe2Kif300Z6m1g" name="findChannelAndTime" visibility="protected" method="_DHcmLLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF7jMLhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jMbhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jMrhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jM7hrEe2Kif300Z6m1g" name="continueSearch" visibility="protected" method="_DHcmMLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMV7hrEe2Kif300Z6m1g">
                  <body>continueSearch continues the search for a channel time.&lt;br>
	 * The default implementation continues at time+1 by calling
	 * findChannelAndTime(time+1,schedulableObject). This method
	 * can be overridden to provide preemptive searches or any
	 * other method of continuing the search.
	 * 
	 * @param time
	 * @param activation
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF7jNLhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jNbhrEe2Kif300Z6m1g" name="activation" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jNrhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jN7hrEe2Kif300Z6m1g" name="noOtherChannelConflicts" visibility="protected" method="_DHcmNLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF7jOLhrEe2Kif300Z6m1g" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jObhrEe2Kif300Z6m1g" name="schedulableObject" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jOrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jO7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jPLhrEe2Kif300Z6m1g" name="conflictsExist" visibility="protected" method="_DHcmObhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF7jPbhrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jPrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jP7hrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jQLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jQbhrEe2Kif300Z6m1g" name="freeOfCoordinatorConflicts" visibility="protected" method="_DHcmPrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF7jQrhrEe2Kif300Z6m1g" name="obj" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jQ7hrEe2Kif300Z6m1g" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jRLhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jRbhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jRrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jR7hrEe2Kif300Z6m1g" name="isAvailable" visibility="protected" method="_DHcmRLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMWLhrEe2Kif300Z6m1g">
                  <body>isAvailable returns true if the schedule for the channel is available in the 
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF7jSLhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jSbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jSrhrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jS7hrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF7jTLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF7jTbhrEe2Kif300Z6m1g" name="isAvailable" visibility="protected" method="_DHcmSrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHoMWbhrEe2Kif300Z6m1g">
                  <body>isAvailable returns true if the schedule is available in the 
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF7jTrhrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF7jT7hrEe2Kif300Z6m1g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF8KQLhrEe2Kif300Z6m1g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF8KQbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF8KQrhrEe2Kif300Z6m1g" name="canCombineEntriesInPlace" visibility="private" method="_DHcmVLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF8KQ7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8KRLhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8KRbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF8KRrhrEe2Kif300Z6m1g" name="combinedEntriesInPlace" visibility="private" method="_DHcmWLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF8KR7hrEe2Kif300Z6m1g" name="a1" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8KSLhrEe2Kif300Z6m1g" name="a2" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8KSbhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF8KSrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF8KS7hrEe2Kif300Z6m1g" name="addToSchedule" visibility="protected" method="_DHcmXbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF8KTLhrEe2Kif300Z6m1g" name="next" type="_C9jqULhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8KTbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF8KTrhrEe2Kif300Z6m1g" name="reportNotSchedulable" visibility="private" method="_DHcmYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF8KT7hrEe2Kif300Z6m1g" name="object" type="_C9jqULhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_C-0OkLhrEe2Kif300Z6m1g" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_DHEyv7hrEe2Kif300Z6m1g" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHFZwLhrEe2Kif300Z6m1g" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_O7hrEe2Kif300Z6m1g" name="ScheduleLocation" specification="_C-0OkbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHb_PLhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;
			this.time = 0;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_PbhrEe2Kif300Z6m1g" name="ScheduleLocation" specification="_C-0OlbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHb_PrhrEe2Kif300Z6m1g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DHb_P7hrEe2Kif300Z6m1g" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DHb_QLhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;
			this.time = time;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_QbhrEe2Kif300Z6m1g" name="getChannel" specification="_C-01oLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHb_QrhrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHb_Q7hrEe2Kif300Z6m1g" name="getTime" specification="_C-01orhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHb_RLhrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_C-0OkbhrEe2Kif300Z6m1g" name="ScheduleLocation" visibility="package" method="_DHb_O7hrEe2Kif300Z6m1g">
                  <eAnnotations xmi:id="_C-0OkrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_C-0Ok7hrEe2Kif300Z6m1g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_C-0OlLhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_C-0OlbhrEe2Kif300Z6m1g" name="ScheduleLocation" visibility="package" method="_DHb_PbhrEe2Kif300Z6m1g">
                  <eAnnotations xmi:id="_C-0OmLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_C-0OmbhrEe2Kif300Z6m1g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_C-0OlrhrEe2Kif300Z6m1g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_C-0Ol7hrEe2Kif300Z6m1g" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_C-0OmrhrEe2Kif300Z6m1g" type="_C-0OkLhrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_C-01oLhrEe2Kif300Z6m1g" name="getChannel" visibility="protected" method="_DHb_QbhrEe2Kif300Z6m1g">
                  <ownedComment xmi:id="_DHoMUrhrEe2Kif300Z6m1g">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_C-01obhrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C-01orhrEe2Kif300Z6m1g" name="getTime" visibility="protected" method="_DHb_Q7hrEe2Kif300Z6m1g">
                  <ownedComment xmi:id="_DHoMU7hrEe2Kif300Z6m1g">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_C-01o7hrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-3R4LhrEe2Kif300Z6m1g" name="ScheduleTable">
              <generalization xmi:id="_DF8xULhrEe2Kif300Z6m1g" general="_C-7jULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGA0LhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHGA0bhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNMrhrEe2Kif300Z6m1g" name="ScheduleTable" specification="_C-3R4bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNM7hrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNNLhrEe2Kif300Z6m1g" name="ScheduleTable" specification="_C-348rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNNbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNNrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNN7hrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(row,column);
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-3R4bhrEe2Kif300Z6m1g" name="ScheduleTable" visibility="package" method="_DHdNMrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-3R4rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-348LhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-348bhrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-348rhrEe2Kif300Z6m1g" name="ScheduleTable" visibility="package" method="_DHdNNLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-349bhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-349rhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-3487hrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-349LhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-3497hrEe2Kif300Z6m1g" type="_C-3R4LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-34-LhrEe2Kif300Z6m1g" name="ScheduleTime">
              <ownedAttribute xmi:id="_DHGA0rhrEe2Kif300Z6m1g" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHGA07hrEe2Kif300Z6m1g" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNOLhrEe2Kif300Z6m1g" name="ScheduleTime" specification="_C-34-bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNObhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNOrhrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNO7hrEe2Kif300Z6m1g" type="_C-34-LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;
		this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-34-bhrEe2Kif300Z6m1g" name="ScheduleTime" visibility="package" method="_DHdNOLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-34_LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-34_bhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-34-rhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-34-7hrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-34_rhrEe2Kif300Z6m1g" type="_C-34-LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-4gALhrEe2Kif300Z6m1g" name="SimulatorInput">
              <ownedComment xmi:id="_DHoMW7hrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-4gAbhrEe2Kif300Z6m1g" name="SortedPeriodQueue">
              <generalization xmi:id="_C-5HFLhrEe2Kif300Z6m1g" general="_C-uvA7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGA1LhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHGA1bhrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNPLhrEe2Kif300Z6m1g" name="SortedPeriodQueue" specification="_C-5HELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNPbhrEe2Kif300Z6m1g" type="_C-4gAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNPrhrEe2Kif300Z6m1g" name="SortedPeriodQueue" specification="_DF8xUrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNP7hrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHdNQLhrEe2Kif300Z6m1g" type="_C-4gAbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-5HELhrEe2Kif300Z6m1g" name="SortedPeriodQueue" visibility="package" method="_DHdNPLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-5HEbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-5HErhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-5HE7hrEe2Kif300Z6m1g" type="_C-4gAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF8xUrhrEe2Kif300Z6m1g" name="SortedPeriodQueue" visibility="package" method="_DHdNPrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF8xVLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF8xVbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF8xU7hrEe2Kif300Z6m1g" name="schedulableObjects" type="_DFyZQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF8xVrhrEe2Kif300Z6m1g" type="_C-4gAbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_C-5uILhrEe2Kif300Z6m1g" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_DF9YYbhrEe2Kif300Z6m1g" general="_C-vWErhrEe2Kif300Z6m1g"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_C-5uIbhrEe2Kif300Z6m1g" name="ScheduleChoices">
                <ownedLiteral xmi:id="_C-5uI7hrEe2Kif300Z6m1g" name="PRIORITY"/>
                <ownedLiteral xmi:id="_C-6VMLhrEe2Kif300Z6m1g" name="RM"/>
                <ownedLiteral xmi:id="_C-6VMbhrEe2Kif300Z6m1g" name="DM"/>
                <ownedLiteral xmi:id="_C-6VMrhrEe2Kif300Z6m1g" name="RTHART"/>
                <ownedLiteral xmi:id="_C-6VM7hrEe2Kif300Z6m1g" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_C-6VNLhrEe2Kif300Z6m1g" name="POSET_RM"/>
                <ownedLiteral xmi:id="_C-6VNbhrEe2Kif300Z6m1g" name="POSET_DM"/>
                <ownedLiteral xmi:id="_C-6VNrhrEe2Kif300Z6m1g" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_C-6VN7hrEe2Kif300Z6m1g" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_C-6VOLhrEe2Kif300Z6m1g" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_C-6VObhrEe2Kif300Z6m1g" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_C-6VOrhrEe2Kif300Z6m1g" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_C-6VO7hrEe2Kif300Z6m1g" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_C-6VPLhrEe2Kif300Z6m1g" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_C-6VPbhrEe2Kif300Z6m1g" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_C-68QLhrEe2Kif300Z6m1g" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_C-68QbhrEe2Kif300Z6m1g" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_C-68QrhrEe2Kif300Z6m1g" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_C-68Q7hrEe2Kif300Z6m1g" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-68RLhrEe2Kif300Z6m1g" name="SystemFactory">
              <ownedComment xmi:id="_DHoMXLhrEe2Kif300Z6m1g">
                <body>Factory Class to create a schedule instance.
This factory can be used to create different
types of schedules.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNQbhrEe2Kif300Z6m1g" name="create" specification="_DF9YZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNQrhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHdNQ7hrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNRLhrEe2Kif300Z6m1g" name="choice" type="_C-5uIbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHdNRbhrEe2Kif300Z6m1g" type="_C_YPQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DF9YZLhrEe2Kif300Z6m1g" name="create" isStatic="true" method="_DHdNQbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF9YZbhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF9YZrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF9YZ7hrEe2Kif300Z6m1g" name="choice" type="_C-5uIbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF9YaLhrEe2Kif300Z6m1g" type="_C_YPQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-7jULhrEe2Kif300Z6m1g" name="Table">
              <generalization xmi:id="_DGot0bhrEe2Kif300Z6m1g" general="_DFeQMLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGA1rhrEe2Kif300Z6m1g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHGA17hrEe2Kif300Z6m1g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNRrhrEe2Kif300Z6m1g" name="Table" specification="_C-8KYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNR7hrEe2Kif300Z6m1g" type="_C-7jULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNSLhrEe2Kif300Z6m1g" name="Table" specification="_C-8KZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNSbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNSrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNS7hrEe2Kif300Z6m1g" type="_C-7jULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super();
		
		for(int i=0; i &lt; row; i++) {
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();
			for(int j=0; j &lt; column; j++) {
				nullRow.add(null);
			}
			this.add((E) nullRow);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNTLhrEe2Kif300Z6m1g" name="getNumRows" specification="_C-8KarhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNTbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNTrhrEe2Kif300Z6m1g" name="getNumColumns" specification="_C-8KbLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNT7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;
		var numRows = this.size();
		if (numRows > 0) {
			var lastRow = this.get(numRows-1);
			numColumns = lastRow.size();
		}
		return numColumns;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNULhrEe2Kif300Z6m1g" name="set" specification="_DGoGwLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNUbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNUrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNU7hrEe2Kif300Z6m1g" name="element" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				fullRow.set(column, element);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNVLhrEe2Kif300Z6m1g" name="get" specification="_C-8xcbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNVbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNVrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNV7hrEe2Kif300Z6m1g" type="_DGaEUrhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>T element = null;
		E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				element = fullRow.get(column);
			}
		}
		return element;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-8KYLhrEe2Kif300Z6m1g" name="Table" method="_DHdNRrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-8KYbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-8KYrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-8KY7hrEe2Kif300Z6m1g" type="_C-7jULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-8KZLhrEe2Kif300Z6m1g" name="Table" method="_DHdNSLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C-8KZ7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C-8KaLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C-8KZbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-8KZrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-8KabhrEe2Kif300Z6m1g" type="_C-7jULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C-8KarhrEe2Kif300Z6m1g" name="getNumRows" method="_DHdNTLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-8Ka7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-8KbLhrEe2Kif300Z6m1g" name="getNumColumns" method="_DHdNTrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-8xcLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C-8xcbhrEe2Kif300Z6m1g" name="get" method="_DHdNVLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C-8xcrhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C-8xc7hrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGot0LhrEe2Kif300Z6m1g" type="_DGaEUrhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGoGwLhrEe2Kif300Z6m1g" name="set" method="_DHdNULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGoGwbhrEe2Kif300Z6m1g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGoGwrhrEe2Kif300Z6m1g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGoGw7hrEe2Kif300Z6m1g" name="element" type="_DGaEUrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_C-9YgLhrEe2Kif300Z6m1g" name="Visualization">
              <ownedComment xmi:id="_DHoMXbhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_C-9YgbhrEe2Kif300Z6m1g" name="SystemChoices">
                <ownedLiteral xmi:id="_C-9Yg7hrEe2Kif300Z6m1g" name="SOURCE"/>
                <ownedLiteral xmi:id="_C-9_kLhrEe2Kif300Z6m1g" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_C-9_kbhrEe2Kif300Z6m1g" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_C-9_krhrEe2Kif300Z6m1g" name="LATENCY"/>
                <ownedLiteral xmi:id="_C-9_k7hrEe2Kif300Z6m1g" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_C-9_lLhrEe2Kif300Z6m1g" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_C-9_lbhrEe2Kif300Z6m1g" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_C-9_lrhrEe2Kif300Z6m1g" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_C-9_mLhrEe2Kif300Z6m1g" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_C-9_mbhrEe2Kif300Z6m1g" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_C-9_mrhrEe2Kif300Z6m1g" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_C-9_m7hrEe2Kif300Z6m1g" name="toDisplay"/>
              <ownedOperation xmi:id="_C--moLhrEe2Kif300Z6m1g" name="toFile"/>
              <ownedOperation xmi:id="_C--mobhrEe2Kif300Z6m1g" name="toString">
                <ownedParameter xmi:id="_C--morhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C--mo7hrEe2Kif300Z6m1g" name="VisualizationFactory">
              <ownedComment xmi:id="_DHoMXrhrEe2Kif300Z6m1g">
                <body>Factory Class to create a visualization instance.
This factory can be used to create different
types of visualizations.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHdNWLhrEe2Kif300Z6m1g" name="createProgramVisualization" specification="_DF9_dLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHdNWbhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHdNWrhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHdNW7hrEe2Kif300Z6m1g" name="choice" type="_C-9YgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHdNXLhrEe2Kif300Z6m1g" type="_C-9YgLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0QLhrEe2Kif300Z6m1g" name="createWorkLoadVisualization" specification="_DF-mg7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0QbhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0QrhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0Q7hrEe2Kif300Z6m1g" name="choice" type="_C-9_lrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0RLhrEe2Kif300Z6m1g" type="_C-9YgLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DF9_dLhrEe2Kif300Z6m1g" name="createProgramVisualization" isStatic="true" method="_DHdNWLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF9_dbhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF-mgLhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF-mgbhrEe2Kif300Z6m1g" name="choice" type="_C-9YgbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF-mgrhrEe2Kif300Z6m1g" type="_C-9YgLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF-mg7hrEe2Kif300Z6m1g" name="createWorkLoadVisualization" isStatic="true" method="_DHd0QLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF-mhLhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF-mhbhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF-mhrhrEe2Kif300Z6m1g" name="choice" type="_C-9_lrhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF-mh7hrEe2Kif300Z6m1g" type="_C-9YgLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C-_NsLhrEe2Kif300Z6m1g" name="VisualizationImplementation">
              <ownedComment xmi:id="_DHoMX7hrEe2Kif300Z6m1g">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHGn4LhrEe2Kif300Z6m1g" name="visualization" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DIE4RLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGn4rhrEe2Kif300Z6m1g" name="fileContent" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DIE4R7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGn5LhrEe2Kif300Z6m1g" name="window" visibility="private" type="_C-UfULhrEe2Kif300Z6m1g" association="_DIFfULhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHGn5rhrEe2Kif300Z6m1g" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHGn6LhrEe2Kif300Z6m1g" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHGn6rhrEe2Kif300Z6m1g" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHGn7LhrEe2Kif300Z6m1g" name="fm" visibility="private" type="_C95okLhrEe2Kif300Z6m1g" association="_DIFfU7hrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHGn7bhrEe2Kif300Z6m1g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHGn77hrEe2Kif300Z6m1g" name="warp" visibility="private" type="_C_YPQLhrEe2Kif300Z6m1g" association="_DIFfVrhrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHGn8LhrEe2Kif300Z6m1g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHHO8bhrEe2Kif300Z6m1g" name="workLoad" visibility="private" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIGGYLhrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHHO8rhrEe2Kif300Z6m1g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHHO9LhrEe2Kif300Z6m1g" name="visualizationObject" visibility="private" type="_C_RhkLhrEe2Kif300Z6m1g" association="_DIGGY7hrEe2Kif300Z6m1g"/>
              <interfaceRealization xmi:id="_DF-miLhrEe2Kif300Z6m1g" client="_C-_NsLhrEe2Kif300Z6m1g" supplier="_C-9YgLhrEe2Kif300Z6m1g" contract="_C-9YgLhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0RbhrEe2Kif300Z6m1g" name="VisualizationImplementation" specification="_DGpU4rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0RrhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0R7hrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0SLhrEe2Kif300Z6m1g" name="choice" type="_DGpU4LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0SbhrEe2Kif300Z6m1g" type="_C-_NsLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0SrhrEe2Kif300Z6m1g" name="VisualizationImplementation" specification="_DGp78rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0S7hrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0TLhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0TbhrEe2Kif300Z6m1g" name="choice" type="_DGp78LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0TrhrEe2Kif300Z6m1g" type="_C-_NsLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0T7hrEe2Kif300Z6m1g" name="toDisplay" specification="_C-_0wLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0ULhrEe2Kif300Z6m1g" name="toFile" specification="_C_Ab0LhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0UbhrEe2Kif300Z6m1g" name="toString" specification="_C_Ab1LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0UrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0U7hrEe2Kif300Z6m1g" name="createVisualization" specification="_DGp7-bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0VLhrEe2Kif300Z6m1g" name="choice" type="_DGpU4LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0VbhrEe2Kif300Z6m1g" name="createVisualization" specification="_DGp7-7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0VrhrEe2Kif300Z6m1g" name="choice" type="_DGp78LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0V7hrEe2Kif300Z6m1g" name="createVisualization" specification="_DGp7_bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0WLhrEe2Kif300Z6m1g" name="obj" type="_DGaEUrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0WbhrEe2Kif300Z6m1g" name="createFileNameTemplate" specification="_C_Ab2bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0WrhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0W7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C-_0wLhrEe2Kif300Z6m1g" name="toDisplay" method="_DHd0T7hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_Ab0LhrEe2Kif300Z6m1g" name="toFile" method="_DHd0ULhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_Ab1LhrEe2Kif300Z6m1g" name="toString" method="_DHd0UbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_Ab1bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Ab2bhrEe2Kif300Z6m1g" name="createFileNameTemplate" visibility="private" method="_DHd0WbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_Ab2rhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_Ab27hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGpU4rhrEe2Kif300Z6m1g" name="VisualizationImplementation" method="_DHd0RbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGpU5rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGpU57hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGpU47hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGpU5LhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGpU5bhrEe2Kif300Z6m1g" name="choice" type="_DGpU4LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGpU6LhrEe2Kif300Z6m1g" type="_C-_NsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGp78rhrEe2Kif300Z6m1g" name="VisualizationImplementation" method="_DHd0SrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGp79rhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGp797hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGp787hrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGp79LhrEe2Kif300Z6m1g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGp79bhrEe2Kif300Z6m1g" name="choice" type="_DGp78LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGp7-LhrEe2Kif300Z6m1g" type="_C-_NsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGp7-bhrEe2Kif300Z6m1g" name="createVisualization" visibility="private" method="_DHd0U7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGp7-rhrEe2Kif300Z6m1g" name="choice" type="_DGpU4LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGp7-7hrEe2Kif300Z6m1g" name="createVisualization" visibility="private" method="_DHd0VbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGp7_LhrEe2Kif300Z6m1g" name="choice" type="_DGp78LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGp7_bhrEe2Kif300Z6m1g" name="createVisualization" visibility="private" method="_DHd0V7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGqjALhrEe2Kif300Z6m1g" name="obj" type="_DGaEUrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_RhkLhrEe2Kif300Z6m1g" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_DHozYLhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHHO9rhrEe2Kif300Z6m1g" name="fm" visibility="private" type="_C95okLhrEe2Kif300Z6m1g" association="_DIGGZrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHHO-LhrEe2Kif300Z6m1g" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHHO-rhrEe2Kif300Z6m1g" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHHO_LhrEe2Kif300Z6m1g" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHHO_bhrEe2Kif300Z6m1g" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHH2ALhrEe2Kif300Z6m1g" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHH2AbhrEe2Kif300Z6m1g" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0XLhrEe2Kif300Z6m1g" name="VisualizationObject" specification="_DF_NkLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0XbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0XrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0X7hrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0YLhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0YbhrEe2Kif300Z6m1g" name="VisualizationObject" specification="_DF_0oLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0YrhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0Y7hrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0ZLhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0ZbhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 if (warp.getNumFaults() > 0) {
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());
 } else {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());
 }
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0ZrhrEe2Kif300Z6m1g" name="VisualizationObject" specification="_DF_0p7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0Z7hrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0aLhrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0abhrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0arhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0a7hrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 if (warp.getNumFaults() > 0) {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;
 } else {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())
           + nameExtension;
 }

 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0bLhrEe2Kif300Z6m1g" name="VisualizationObject" specification="_DF_0r7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0bbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0brhrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0b7hrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0cLhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 this.nameExtension = nameExtension;
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0cbhrEe2Kif300Z6m1g" name="nameExtension" specification="_DGrKELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0crhrEe2Kif300Z6m1g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0c7hrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHd0dLhrEe2Kif300Z6m1g" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0dbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));
 return extension;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0drhrEe2Kif300Z6m1g" name="nameExtension" specification="_C_SIoLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0d7hrEe2Kif300Z6m1g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0eLhrEe2Kif300Z6m1g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHd0ebhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));
 return extension;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHd0erhrEe2Kif300Z6m1g" name="getFileManager" specification="_C_SIpLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHd0e7hrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return fm;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebULhrEe2Kif300Z6m1g" name="visualization" specification="_C_SIpbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebUbhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
 var data = createVisualizationData();

 if (data != null) {
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;
   content.add(nodeString);

   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {
     var row = data[rowIndex];
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;
     content.add(rowString);
   }
 } else {
   content.add(NOT_IMPLEMENTED);
 }
 return content;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebUrhrEe2Kif300Z6m1g" name="createFile" specification="_C_SvsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebU7hrEe2Kif300Z6m1g" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHebVLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebVbhrEe2Kif300Z6m1g" name="fileVisualization" specification="_C_Svs7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebVrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();
 fileContent.addAll(visualization());
 fileContent.addAll(createFooter());
 return fileContent;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebV7hrEe2Kif300Z6m1g" name="displayVisualization" specification="_C_SvtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebWLhrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebWbhrEe2Kif300Z6m1g" name="createHeader" specification="_C_SvtbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebWrhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
 return header;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebW7hrEe2Kif300Z6m1g" name="createFooter" specification="_C_SvtrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebXLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
 return footer;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebXbhrEe2Kif300Z6m1g" name="createColumnHeader" specification="_C_Svt7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebXrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHebX7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebYLhrEe2Kif300Z6m1g" name="createVisualizationData" specification="_C_Svu7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebYbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHebYrhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_SIoLhrEe2Kif300Z6m1g" name="nameExtension" visibility="private" method="_DHd0drhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_SIobhrEe2Kif300Z6m1g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_SIorhrEe2Kif300Z6m1g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_SIo7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SIpLhrEe2Kif300Z6m1g" name="getFileManager" method="_DHd0erhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHozYbhrEe2Kif300Z6m1g">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_DF_0trhrEe2Kif300Z6m1g" type="_C95okLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SIpbhrEe2Kif300Z6m1g" name="visualization" method="_DHebULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF_0t7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SvsLhrEe2Kif300Z6m1g" name="createFile" method="_DHebUrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_SvsbhrEe2Kif300Z6m1g" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_SvsrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Svs7hrEe2Kif300Z6m1g" name="fileVisualization" method="_DHebVbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF_0uLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SvtLhrEe2Kif300Z6m1g" name="displayVisualization" method="_DHebV7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF_0ubhrEe2Kif300Z6m1g" type="_C-UfULhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SvtbhrEe2Kif300Z6m1g" name="createHeader" visibility="protected" method="_DHebWbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF_0urhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_SvtrhrEe2Kif300Z6m1g" name="createFooter" visibility="protected" method="_DHebW7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DF_0u7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Svt7hrEe2Kif300Z6m1g" name="createColumnHeader" visibility="protected" method="_DHebXbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_SvuLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_SvubhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Svu7hrEe2Kif300Z6m1g" name="createVisualizationData" visibility="protected" method="_DHebYLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_SvvLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_SvvbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DF_NkLhrEe2Kif300Z6m1g" name="VisualizationObject" visibility="package" method="_DHd0XLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF_NlLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF_NlbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF_NkbhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_NkrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_Nk7hrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_NlrhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF_0oLhrEe2Kif300Z6m1g" name="VisualizationObject" visibility="package" method="_DHd0YbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF_0pLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF_0pbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF_0obhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_0orhrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_0o7hrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_0prhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF_0p7hrEe2Kif300Z6m1g" name="VisualizationObject" visibility="package" method="_DHd0ZrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF_0rLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF_0rbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF_0qLhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_0qbhrEe2Kif300Z6m1g" name="warp" type="_C-5uILhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_0qrhrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_0q7hrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_0rrhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DF_0r7hrEe2Kif300Z6m1g" name="VisualizationObject" visibility="package" method="_DHd0bLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DF_0s7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DF_0tLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DF_0sLhrEe2Kif300Z6m1g" name="fm" type="_C95okLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DF_0sbhrEe2Kif300Z6m1g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_0srhrEe2Kif300Z6m1g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DF_0tbhrEe2Kif300Z6m1g" type="_C_RhkLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGrKELhrEe2Kif300Z6m1g" name="nameExtension" visibility="private" method="_DHd0cbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGrKEbhrEe2Kif300Z6m1g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGrKErhrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGrKE7hrEe2Kif300Z6m1g" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGrKFLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_T90LhrEe2Kif300Z6m1g" name="WorkLoadDescription">
              <ownedComment xmi:id="_DHozYrhrEe2Kif300Z6m1g">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_DGAbsrhrEe2Kif300Z6m1g" general="_C_RhkLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHH2BLhrEe2Kif300Z6m1g" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHH2BbhrEe2Kif300Z6m1g" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHH2BrhrEe2Kif300Z6m1g" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHH2B7hrEe2Kif300Z6m1g" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHH2CLhrEe2Kif300Z6m1g" name="description" visibility="private" type="_C92lQLhrEe2Kif300Z6m1g" association="_DIGGabhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHH2CrhrEe2Kif300Z6m1g" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHH2DLhrEe2Kif300Z6m1g" name="fm" visibility="private" type="_C95okLhrEe2Kif300Z6m1g" association="_DIGGbLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHIdEbhrEe2Kif300Z6m1g" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebY7hrEe2Kif300Z6m1g" name="WorkLoadDescription" specification="_C_T90bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebZLhrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHebZbhrEe2Kif300Z6m1g" type="_C_T90LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebZrhrEe2Kif300Z6m1g" name="visualization" specification="_C_T91rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebZ7hrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebaLhrEe2Kif300Z6m1g" name="fileVisualization" specification="_C_Uk4rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebabhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebarhrEe2Kif300Z6m1g" name="toString" specification="_C_Uk5rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHeba7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebbLhrEe2Kif300Z6m1g" name="initialize" specification="_C_Uk67hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHebbbhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_T90bhrEe2Kif300Z6m1g" name="WorkLoadDescription" visibility="package" method="_DHebY7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C_T907hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C_T91LhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C_T90rhrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_T91bhrEe2Kif300Z6m1g" type="_C_T90LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_T91rhrEe2Kif300Z6m1g" name="visualization" method="_DHebZrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGAbsLhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Uk4rhrEe2Kif300Z6m1g" name="fileVisualization" method="_DHebaLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGAbsbhrEe2Kif300Z6m1g" type="_C92lQLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Uk5rhrEe2Kif300Z6m1g" name="toString" method="_DHebarhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_Uk57hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_Uk67hrEe2Kif300Z6m1g" name="initialize" visibility="private" method="_DHebbLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_Uk7LhrEe2Kif300Z6m1g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_VL8LhrEe2Kif300Z6m1g" name="WarpDSL">
              <ownedComment xmi:id="_DHozY7hrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHIdErhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdE7hrEe2Kif300Z6m1g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHIdFLhrEe2Kif300Z6m1g" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdFbhrEe2Kif300Z6m1g" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHIdFrhrEe2Kif300Z6m1g" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdF7hrEe2Kif300Z6m1g" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCYrhrEe2Kif300Z6m1g" name="getInstructionParameters" specification="_C_WaELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfCY7hrEe2Kif300Z6m1g" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfCZLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;
 	var dsl = new ListenerDsl();
     // Read input file and build AST of graph
     try {
     	CharStream inputInstruction = CharStreams.fromString(instruction);
     	var lexer = new WARPdslLexer(inputInstruction);
     	var instructionTokens = new CommonTokenStream(lexer);
     	var parser = new WARPdslParser(instructionTokens);
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	warp.walk(dsl, instructionTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());
     }
     instructionParametersArrayList = dsl.getInstructionParameters();
     return instructionParametersArrayList;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_WaELhrEe2Kif300Z6m1g" name="getInstructionParameters" method="_DHfCYrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_WaEbhrEe2Kif300Z6m1g" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGrKFbhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_C_VL8bhrEe2Kif300Z6m1g" name="InstructionParameters">
                <ownedAttribute xmi:id="_DHIdGLhrEe2Kif300Z6m1g" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdGbhrEe2Kif300Z6m1g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHIdGrhrEe2Kif300Z6m1g" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdG7hrEe2Kif300Z6m1g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHIdHLhrEe2Kif300Z6m1g" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdHbhrEe2Kif300Z6m1g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHIdHrhrEe2Kif300Z6m1g" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdH7hrEe2Kif300Z6m1g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHIdILhrEe2Kif300Z6m1g" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHIdIbhrEe2Kif300Z6m1g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHIdIrhrEe2Kif300Z6m1g" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHJEILhrEe2Kif300Z6m1g" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHJEIrhrEe2Kif300Z6m1g" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHJEI7hrEe2Kif300Z6m1g" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebbrhrEe2Kif300Z6m1g" name="getCoordinator" specification="_C_VzALhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebb7hrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebcLhrEe2Kif300Z6m1g" name="setCoordinator" specification="_C_VzArhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebcbhrEe2Kif300Z6m1g" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebcrhrEe2Kif300Z6m1g" name="setName" specification="_C_VzBLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebc7hrEe2Kif300Z6m1g" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebdLhrEe2Kif300Z6m1g" name="setFlow" specification="_C_VzBrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebdbhrEe2Kif300Z6m1g" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebdrhrEe2Kif300Z6m1g" name="setSrc" specification="_C_VzCLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebd7hrEe2Kif300Z6m1g" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHebeLhrEe2Kif300Z6m1g" name="setSnk" specification="_C_VzCrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebebhrEe2Kif300Z6m1g" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHeberhrEe2Kif300Z6m1g" name="setChannel" specification="_C_VzDLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHebe7hrEe2Kif300Z6m1g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCYLhrEe2Kif300Z6m1g" name="unused" specification="_C_VzDrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCYbhrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_C_VzALhrEe2Kif300Z6m1g" name="getCoordinator" method="_DHebbrhrEe2Kif300Z6m1g">
                  <ownedComment xmi:id="_DHozZLhrEe2Kif300Z6m1g">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_C_VzAbhrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzArhrEe2Kif300Z6m1g" name="setCoordinator" method="_DHebcLhrEe2Kif300Z6m1g">
                  <ownedComment xmi:id="_DHozZbhrEe2Kif300Z6m1g">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_C_VzA7hrEe2Kif300Z6m1g" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzBLhrEe2Kif300Z6m1g" name="setName" visibility="private" method="_DHebcrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzBbhrEe2Kif300Z6m1g" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzBrhrEe2Kif300Z6m1g" name="setFlow" visibility="private" method="_DHebdLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzB7hrEe2Kif300Z6m1g" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzCLhrEe2Kif300Z6m1g" name="setSrc" visibility="private" method="_DHebdrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzCbhrEe2Kif300Z6m1g" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzCrhrEe2Kif300Z6m1g" name="setSnk" visibility="private" method="_DHebeLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzC7hrEe2Kif300Z6m1g" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzDLhrEe2Kif300Z6m1g" name="setChannel" visibility="private" method="_DHeberhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzDbhrEe2Kif300Z6m1g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_C_VzDrhrEe2Kif300Z6m1g" name="unused" method="_DHfCYLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_C_VzD7hrEe2Kif300Z6m1g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_C_WaE7hrEe2Kif300Z6m1g" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_DGrxI7hrEe2Kif300Z6m1g" general="_DGrxILhrEe2Kif300Z6m1g"/>
                <ownedAttribute xmi:id="_DHJEJLhrEe2Kif300Z6m1g" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DHJEJrhrEe2Kif300Z6m1g" name="instructionParametersArrayList" visibility="package" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DIGtcbhrEe2Kif300Z6m1g"/>
                <ownedAttribute xmi:id="_DHJEKbhrEe2Kif300Z6m1g" name="instructionParameters" visibility="package" type="_C_VL8bhrEe2Kif300Z6m1g" association="_DIGtdLhrEe2Kif300Z6m1g"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCZbhrEe2Kif300Z6m1g" name="ListenerDsl" specification="_C_WaFLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCZrhrEe2Kif300Z6m1g" type="_C_WaE7hrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCZ7hrEe2Kif300Z6m1g" name="getInstructionParameters" specification="_C_WaGLhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCaLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCabhrEe2Kif300Z6m1g" name="enterAction" specification="_DGBCwrhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCarhrEe2Kif300Z6m1g" name="ctx" type="_DGBCwLhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>inAction = true;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCa7hrEe2Kif300Z6m1g" name="exitAction" specification="_DGBCx7hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCbLhrEe2Kif300Z6m1g" name="ctx" type="_DGBCwLhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCbbhrEe2Kif300Z6m1g" name="exitFlowName" specification="_DGBp1LhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCbrhrEe2Kif300Z6m1g" name="ctx" type="_DGBp0rhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>if (inAction) {
             String flowName = ctx.getText(); // get the flow name
             instructionParameters.setFlow(flowName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCb7hrEe2Kif300Z6m1g" name="exitCmd" specification="_DGBp27hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCcLhrEe2Kif300Z6m1g" name="ctx" type="_DGBp2bhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name
         instructionParameters.setName(command);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCcbhrEe2Kif300Z6m1g" name="exitSrcNode" specification="_DGCQ47hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCcrhrEe2Kif300Z6m1g" name="ctx" type="_DGCQ4bhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name
         instructionParameters.setSrc(srcName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then coordinator is src 
         	 */
         	instructionParameters.setCoordinator(srcName);
         }else {
         	/* otherwise listener is src */
         	instructionParameters.setListener(srcName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCc7hrEe2Kif300Z6m1g" name="exitSnkNode" specification="_DGCQ6rhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCdLhrEe2Kif300Z6m1g" name="ctx" type="_DGCQ6LhrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name
         instructionParameters.setSnk(snkName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then listener is snk */
         	instructionParameters.setListener(snkName);
         }else {
         	/* otherwise coordinator is snk 
         	 */
         	instructionParameters.setCoordinator(snkName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCdbhrEe2Kif300Z6m1g" name="exitChannel" specification="_DGC38bhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DHfCdrhrEe2Kif300Z6m1g" name="ctx" type="_DGCQ77hrEe2Kif300Z6m1g"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name
     	String channel; // resulting channel that will be extracted from the channel string
     	Integer index = channelString.indexOf('#');
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {
     		channel = channelString.substring(index+1); // get string starting at first channel number
     	} else {
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN
     	}	
         instructionParameters.setChannel(channel); 
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_C_WaFLhrEe2Kif300Z6m1g" name="ListenerDsl" visibility="package" method="_DHfCZbhrEe2Kif300Z6m1g">
                  <eAnnotations xmi:id="_C_WaFbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_C_WaFrhrEe2Kif300Z6m1g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_C_WaF7hrEe2Kif300Z6m1g" type="_C_WaE7hrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_C_WaGLhrEe2Kif300Z6m1g" name="getInstructionParameters" method="_DHfCZ7hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGrxIrhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGBCwrhrEe2Kif300Z6m1g" name="enterAction" method="_DHfCabhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGBCw7hrEe2Kif300Z6m1g" name="ctx" type="_DGBCwLhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGBCx7hrEe2Kif300Z6m1g" name="exitAction" method="_DHfCa7hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGBCyLhrEe2Kif300Z6m1g" name="ctx" type="_DGBCwLhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGBp1LhrEe2Kif300Z6m1g" name="exitFlowName" method="_DHfCbbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGBp1bhrEe2Kif300Z6m1g" name="ctx" type="_DGBp0rhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGBp27hrEe2Kif300Z6m1g" name="exitCmd" method="_DHfCb7hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGBp3LhrEe2Kif300Z6m1g" name="ctx" type="_DGBp2bhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGCQ47hrEe2Kif300Z6m1g" name="exitSrcNode" method="_DHfCcbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGCQ5LhrEe2Kif300Z6m1g" name="ctx" type="_DGCQ4bhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGCQ6rhrEe2Kif300Z6m1g" name="exitSnkNode" method="_DHfCc7hrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGCQ67hrEe2Kif300Z6m1g" name="ctx" type="_DGCQ6LhrEe2Kif300Z6m1g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DGC38bhrEe2Kif300Z6m1g" name="exitChannel" method="_DHfCdbhrEe2Kif300Z6m1g">
                  <ownedParameter xmi:id="_DGC38rhrEe2Kif300Z6m1g" name="ctx" type="_DGCQ77hrEe2Kif300Z6m1g"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_C_YPQLhrEe2Kif300Z6m1g" name="WarpInterface">
              <ownedComment xmi:id="_DHozZrhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_DGDfALhrEe2Kif300Z6m1g" general="_C-5uILhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_YPQbhrEe2Kif300Z6m1g" name="toWorkload">
                <ownedParameter xmi:id="_DGDfAbhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPQrhrEe2Kif300Z6m1g" name="toProgram">
                <ownedParameter xmi:id="_DGDfArhrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPQ7hrEe2Kif300Z6m1g" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_DGDfA7hrEe2Kif300Z6m1g" type="_C-uvB7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPRLhrEe2Kif300Z6m1g" name="toSimulator">
                <ownedParameter xmi:id="_DGDfBLhrEe2Kif300Z6m1g" type="_C-4gALhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPRbhrEe2Kif300Z6m1g" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_DGDfBbhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPRrhrEe2Kif300Z6m1g" name="toChannelAnalysis">
                <ownedParameter xmi:id="_DGDfBrhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPR7hrEe2Kif300Z6m1g" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_C_YPSLhrEe2Kif300Z6m1g" name="reliabilitiesMet">
                <ownedParameter xmi:id="_C_YPSbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_YPSrhrEe2Kif300Z6m1g" name="deadlinesMet">
                <ownedParameter xmi:id="_C_Y2ULhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_Y2UbhrEe2Kif300Z6m1g" name="WarpPoset">
              <ownedComment xmi:id="_DHozZ7hrEe2Kif300Z6m1g">
                <body>ConnectivityPoset extends Poset by selecting
the base station in the flow as the primary 
coordinator

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DGDfDLhrEe2Kif300Z6m1g" general="_C-gFgbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCd7hrEe2Kif300Z6m1g" name="WarpPoset" specification="_DGDfB7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfCeLhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfCebhrEe2Kif300Z6m1g" type="_C_Y2UbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCerhrEe2Kif300Z6m1g" name="findCoordinator" specification="_DGsYMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfCe7hrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfCfLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();
		var baseName = baseStation.getName();
		var size = nodesInFlow.size();
		/* assume flow sink is the coordinator */
		Integer coordinatorIndex = size-1;

		if (baseName.equals(nodesInFlow.get(0).getName())) {
			/* flow src is coordinator, so update index */
			coordinatorIndex = 0;
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DGDfB7hrEe2Kif300Z6m1g" name="WarpPoset" visibility="package" method="_DHfCd7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGDfCbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGDfCrhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGDfCLhrEe2Kif300Z6m1g" name="workload" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGDfC7hrEe2Kif300Z6m1g" type="_C_Y2UbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGsYMLhrEe2Kif300Z6m1g" name="findCoordinator" visibility="protected" method="_DHfCerhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGsYMbhrEe2Kif300Z6m1g" name="nodesInFlow" type="_DFeQMLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGsYMrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_ZdYLhrEe2Kif300Z6m1g" name="WarpSystem">
              <ownedComment xmi:id="_DHozaLhrEe2Kif300Z6m1g">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHJrMLhrEe2Kif300Z6m1g" name="program" visibility="private" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIGtd7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHJrMrhrEe2Kif300Z6m1g" name="workLoad" visibility="private" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIHUgLhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHJrNLhrEe2Kif300Z6m1g" name="ra" visibility="private" type="_C-uvB7hrEe2Kif300Z6m1g" association="_DIHUg7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHJrNrhrEe2Kif300Z6m1g" name="la" visibility="private" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DIHUhrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHKSQLhrEe2Kif300Z6m1g" name="ca" visibility="private" type="_C9q_ELhrEe2Kif300Z6m1g" association="_DIHUibhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHKSQrhrEe2Kif300Z6m1g" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHKSSLhrEe2Kif300Z6m1g" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHKSSbhrEe2Kif300Z6m1g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHKSS7hrEe2Kif300Z6m1g" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHKSTLhrEe2Kif300Z6m1g" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DGEGELhrEe2Kif300Z6m1g" client="_C_ZdYLhrEe2Kif300Z6m1g" supplier="_C_YPQLhrEe2Kif300Z6m1g" contract="_C_YPQLhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfCf7hrEe2Kif300Z6m1g" name="WarpSystem" specification="_DGs_QLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfCgLhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfCgbhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfCgrhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfCg7hrEe2Kif300Z6m1g" type="_C_ZdYLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;
 this.numChannels = numChannels;
 createProgram(workLoad, numChannels, choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpcLhrEe2Kif300Z6m1g" name="toWorkload" specification="_C_ZdYbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpcbhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpcrhrEe2Kif300Z6m1g" name="toProgram" specification="_C_ZdZbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpc7hrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return program;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpdLhrEe2Kif300Z6m1g" name="toReliabilityAnalysis" specification="_C_aEc7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpdbhrEe2Kif300Z6m1g" type="_C-uvB7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);
 return ra;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpdrhrEe2Kif300Z6m1g" name="toSimulator" specification="_C_aEd7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpd7hrEe2Kif300Z6m1g" type="_C-4gALhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpeLhrEe2Kif300Z6m1g" name="toLatencyAnalysis" specification="_C_aEe7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpebhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);
 return la;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfperhrEe2Kif300Z6m1g" name="toChannelAnalysis" specification="_C_aEf7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpe7hrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);
 return ca;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpfLhrEe2Kif300Z6m1g" name="reliabilitiesMet" specification="_C_bSk7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpfbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {
   ra = new ReliabilityAnalysis(program);
 }
 return ra.verifyReliabilities();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpfrhrEe2Kif300Z6m1g" name="deadlinesMet" specification="_C_bSmLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpf7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;
 if (program.deadlineMisses().size() > 0) {
   result = false;
 }
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpgLhrEe2Kif300Z6m1g" name="createProgram" specification="_DGs_R7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpgbhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfpgrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfpg7hrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);

  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfphLhrEe2Kif300Z6m1g" name="getNumFaults" specification="_C_bSnbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfphbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfphrhrEe2Kif300Z6m1g" name="getMinPacketReceptionRate" specification="_C_bSorhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfph7hrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpiLhrEe2Kif300Z6m1g" name="getE2e" specification="_C_b5orhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpibhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpirhrEe2Kif300Z6m1g" name="getName" specification="_C_b5prhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpi7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpjLhrEe2Kif300Z6m1g" name="getSchedulerName" specification="_C_b5q7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpjbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpjrhrEe2Kif300Z6m1g" name="getNumTransmissions" specification="_C_b5sLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpj7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpkLhrEe2Kif300Z6m1g" name="getOptimizationFlag" specification="_C_b5tbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpkbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_ZdYbhrEe2Kif300Z6m1g" name="toWorkload" method="_DHfpcLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtILhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_ZdZbhrEe2Kif300Z6m1g" name="toProgram" method="_DHfpcrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtIbhrEe2Kif300Z6m1g" type="_C-k-ArhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_aEc7hrEe2Kif300Z6m1g" name="toReliabilityAnalysis" method="_DHfpdLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtIrhrEe2Kif300Z6m1g" type="_C-uvB7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_aEd7hrEe2Kif300Z6m1g" name="toSimulator" method="_DHfpdrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtI7hrEe2Kif300Z6m1g" type="_C-4gALhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_aEe7hrEe2Kif300Z6m1g" name="toLatencyAnalysis" method="_DHfpeLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtJLhrEe2Kif300Z6m1g" type="_C-YJsLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_aEf7hrEe2Kif300Z6m1g" name="toChannelAnalysis" method="_DHfperhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGEtJbhrEe2Kif300Z6m1g" type="_C9q_ELhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_bSk7hrEe2Kif300Z6m1g" name="reliabilitiesMet" method="_DHfpfLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_bSlLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_bSmLhrEe2Kif300Z6m1g" name="deadlinesMet" method="_DHfpfrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_bSmbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_bSnbhrEe2Kif300Z6m1g" name="getNumFaults" method="_DHfphLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_bSnrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_bSorhrEe2Kif300Z6m1g" name="getMinPacketReceptionRate" method="_DHfphrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGs_S7hrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_b5orhrEe2Kif300Z6m1g" name="getE2e" method="_DHfpiLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGs_TLhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_b5prhrEe2Kif300Z6m1g" name="getName" method="_DHfpirhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_b5p7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_b5q7hrEe2Kif300Z6m1g" name="getSchedulerName" method="_DHfpjLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_b5rLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_b5sLhrEe2Kif300Z6m1g" name="getNumTransmissions" method="_DHfpjrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_b5sbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_b5tbhrEe2Kif300Z6m1g" name="getOptimizationFlag" method="_DHfpkLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_cgsLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_cgtLhrEe2Kif300Z6m1g" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_DGs_QLhrEe2Kif300Z6m1g" name="WarpSystem" method="_DHfCf7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGs_RLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGs_RbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGs_QbhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGs_QrhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGs_Q7hrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGs_RrhrEe2Kif300Z6m1g" type="_C_ZdYLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGs_R7hrEe2Kif300Z6m1g" name="createProgram" visibility="private" method="_DHfpgLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGs_SLhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGs_SbhrEe2Kif300Z6m1g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGs_SrhrEe2Kif300Z6m1g" name="choice" type="_DGjOR7hrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_du0LhrEe2Kif300Z6m1g" name="WorkLoad">
              <ownedComment xmi:id="_DHpacLhrEe2Kif300Z6m1g">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DGGiV7hrEe2Kif300Z6m1g" general="_C_T90LhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHK5UbhrEe2Kif300Z6m1g" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHK5UrhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHK5U7hrEe2Kif300Z6m1g" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHK5VLhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHK5VbhrEe2Kif300Z6m1g" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHK5VrhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHK5V7hrEe2Kif300Z6m1g" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHK5WLhrEe2Kif300Z6m1g" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHK5WbhrEe2Kif300Z6m1g" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHK5WrhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHLgYLhrEe2Kif300Z6m1g" name="minPacketReceptionRate" type="_DGkcYbhrEe2Kif300Z6m1g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHLgYbhrEe2Kif300Z6m1g" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHLgYrhrEe2Kif300Z6m1g" name="e2e" visibility="private" type="_DGkcYbhrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHLgY7hrEe2Kif300Z6m1g" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHLgZbhrEe2Kif300Z6m1g" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHLgZrhrEe2Kif300Z6m1g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHLgZ7hrEe2Kif300Z6m1g" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHLgaLhrEe2Kif300Z6m1g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHLgarhrEe2Kif300Z6m1g" name="flows" type="_C-Q08LhrEe2Kif300Z6m1g" association="_DHpacbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHLga7hrEe2Kif300Z6m1g" name="nodes" type="_C-dpQLhrEe2Kif300Z6m1g" association="_DHpac7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHLgbLhrEe2Kif300Z6m1g" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMHcLhrEe2Kif300Z6m1g" name="flowNamesInOriginalOrder" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DIH7kbhrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMHcrhrEe2Kif300Z6m1g" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMHc7hrEe2Kif300Z6m1g" name="flowNamesInPriorityOrder" type="_DFeQMLhrEe2Kif300Z6m1g" association="_DIH7lLhrEe2Kif300Z6m1g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMHdbhrEe2Kif300Z6m1g" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DGF7RbhrEe2Kif300Z6m1g" client="_C_du0LhrEe2Kif300Z6m1g" supplier="_C-vWErhrEe2Kif300Z6m1g" contract="_C-vWErhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpkrhrEe2Kif300Z6m1g" name="WorkLoad" specification="_DGtmULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpk7hrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfplLhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfplbhrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfplrhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpl7hrEe2Kif300Z6m1g" name="WorkLoad" specification="_DGuNZbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHfpmLhrEe2Kif300Z6m1g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfpmbhrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfpmrhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHfpm7hrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHfpnLhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHfpnbhrEe2Kif300Z6m1g" name="setDefaultParameters" specification="_C_eV4LhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQgLhrEe2Kif300Z6m1g" name="getE2e" specification="_C_eV4bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQgbhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQgrhrEe2Kif300Z6m1g" name="getIntForFlowNames" specification="_C_eV4rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQg7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQhLhrEe2Kif300Z6m1g" name="getName" specification="_C_eV5LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQhbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQhrhrEe2Kif300Z6m1g" name="setMinPacketReceptionRate" specification="_DGuNbrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQh7hrEe2Kif300Z6m1g" name="minPacketReceptionRate" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQiLhrEe2Kif300Z6m1g" name="getMaxPhase" specification="_C_eV5rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQibhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQirhrEe2Kif300Z6m1g" name="getMinPeriod" specification="_C_eV6LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQi7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQjLhrEe2Kif300Z6m1g" name="setE2e" specification="_DGuNcLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQjbhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQjrhrEe2Kif300Z6m1g" name="setIntForFlowNames" specification="_C_e88bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQj7hrEe2Kif300Z6m1g" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQkLhrEe2Kif300Z6m1g" name="setName" specification="_C_e887hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQkbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQkrhrEe2Kif300Z6m1g" name="setNodeChannel" specification="_C_e89bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQk7hrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQlLhrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQlbhrEe2Kif300Z6m1g" name="getNodeChannel" specification="_C_e8-LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQlrhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQl7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQmLhrEe2Kif300Z6m1g" name="addFlow" specification="_C_e8-7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQmbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQmrhrEe2Kif300Z6m1g" name="isIntForNodeNames" specification="_C_e8_bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQm7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQnLhrEe2Kif300Z6m1g" name="isIntForFlowNames" specification="_C_e8_7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQnbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQnrhrEe2Kif300Z6m1g" name="addNodeToFlow" specification="_C_e9AbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQn7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQoLhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQobhrEe2Kif300Z6m1g" name="getFlowPriority" specification="_C_fkALhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQorhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQo7hrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQpLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQpbhrEe2Kif300Z6m1g" name="setFlowPriority" specification="_C_fkBLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQprhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQp7hrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQqLhrEe2Kif300Z6m1g" name="setFlowPeriod" specification="_C_fkB7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQqbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQqrhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQq7hrEe2Kif300Z6m1g" name="setFlowDeadline" specification="_C_fkCrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQrLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQrbhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQrrhrEe2Kif300Z6m1g" name="setFlowPhase" specification="_C_fkDbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQr7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQsLhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQsbhrEe2Kif300Z6m1g" name="getFlowIndex" specification="_C_fkELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQsrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQs7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQtLhrEe2Kif300Z6m1g" name="getFlowPriority" specification="_C_fkE7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQtbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQtrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQt7hrEe2Kif300Z6m1g" name="getFlowPeriod" specification="_C_gLELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQuLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQubhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHgQurhrEe2Kif300Z6m1g" name="getFlowDeadline" specification="_C_gLE7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHgQu7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHgQvLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3kLhrEe2Kif300Z6m1g" name="getFlowPhase" specification="_C_gLFrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3kbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3krhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3k7hrEe2Kif300Z6m1g" name="getFlowTxAttemptsPerLink" specification="_C_gLGbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3lLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3lbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3lrhrEe2Kif300Z6m1g" name="setFlowsInPriorityOrder" specification="_C_gLHLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3l7hrEe2Kif300Z6m1g" name="setFlowsInDMorder" specification="_C_gLHbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3mLhrEe2Kif300Z6m1g" name="setFlowsInRMorder" specification="_C_gLHrhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3mbhrEe2Kif300Z6m1g" name="setFlowsInRealTimeHARTorder" specification="_C_gLH7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3mrhrEe2Kif300Z6m1g" name="finalizeCurrentFlow" specification="_C_gLILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3m7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3nLhrEe2Kif300Z6m1g" name="nextReleaseTime" specification="_C_gLIrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3nbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3nrhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3n7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3oLhrEe2Kif300Z6m1g" name="nextAbsoluteDeadline" specification="_C_gyILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3obhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3orhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3o7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3pLhrEe2Kif300Z6m1g" name="finalizeFlowWithE2eParameters" specification="_C_gyJLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3pbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3prhrEe2Kif300Z6m1g" name="finalizeFlowWithFixedFaultTolerance" specification="_C_gyJrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3p7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3qLhrEe2Kif300Z6m1g" name="getFixedTxPerLinkAndTotalTxCost" specification="_DGGiULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3qbhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHg3qrhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3q7hrEe2Kif300Z6m1g" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_DGu0cbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3rLhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHg3rbhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHg3rrhrEe2Kif300Z6m1g" name="M" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHg3r7hrEe2Kif300Z6m1g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3sLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3sbhrEe2Kif300Z6m1g" name="getNodeNamesOrderedAlphabetically" specification="_C_gyKLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3srhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHg3s7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3tLhrEe2Kif300Z6m1g" name="getFlow" specification="_C_hZMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3tbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3trhrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3t7hrEe2Kif300Z6m1g" name="getFlowNames" specification="_C_hZMrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3uLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHg3ubhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3urhrEe2Kif300Z6m1g" name="getNodeIndex" specification="_C_hZNrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3u7hrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3vLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3vbhrEe2Kif300Z6m1g" name="getNodesInFlow" specification="_C_hZObhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3vrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3v7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHg3wLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3wbhrEe2Kif300Z6m1g" name="getHyperPeriod" specification="_C_hZPrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3wrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3w7hrEe2Kif300Z6m1g" name="getTotalTxAttemptsInFlow" specification="_C_hZQLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3xLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3xbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3xrhrEe2Kif300Z6m1g" name="getNumTxAttemptsPerLink" specification="_C_iAQLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3x7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3yLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHg3ybhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3yrhrEe2Kif300Z6m1g" name="addEdge" specification="_DGGiVLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3y7hrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHg3zLhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHg3zbhrEe2Kif300Z6m1g" name="maxFlowLength" specification="_C_iARbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHg3zrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_eV4LhrEe2Kif300Z6m1g" name="setDefaultParameters" visibility="private" method="_DHfpnbhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_eV4bhrEe2Kif300Z6m1g" name="getE2e" method="_DHgQgLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpadbhrEe2Kif300Z6m1g">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGuNbbhrEe2Kif300Z6m1g" type="_DGkcYbhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_eV4rhrEe2Kif300Z6m1g" name="getIntForFlowNames" method="_DHgQgrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpadrhrEe2Kif300Z6m1g">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_eV47hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_eV5LhrEe2Kif300Z6m1g" name="getName" method="_DHgQhLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpad7hrEe2Kif300Z6m1g">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_eV5bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_eV5rhrEe2Kif300Z6m1g" name="getMaxPhase" method="_DHgQiLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpaebhrEe2Kif300Z6m1g">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_eV57hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_eV6LhrEe2Kif300Z6m1g" name="getMinPeriod" method="_DHgQirhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpaerhrEe2Kif300Z6m1g">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_e88LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e88bhrEe2Kif300Z6m1g" name="setIntForFlowNames" method="_DHgQjrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqBgbhrEe2Kif300Z6m1g">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_e88rhrEe2Kif300Z6m1g" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e887hrEe2Kif300Z6m1g" name="setName" method="_DHgQkLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqBgrhrEe2Kif300Z6m1g">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_e89LhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e89bhrEe2Kif300Z6m1g" name="setNodeChannel" method="_DHgQkrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqBg7hrEe2Kif300Z6m1g">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_e89rhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_e897hrEe2Kif300Z6m1g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e8-LhrEe2Kif300Z6m1g" name="getNodeChannel" method="_DHgQlbhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqBhLhrEe2Kif300Z6m1g">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_e8-bhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_e8-rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e8-7hrEe2Kif300Z6m1g" name="addFlow" method="_DHgQmLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_e8_LhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e8_bhrEe2Kif300Z6m1g" name="isIntForNodeNames" method="_DHgQmrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_e8_rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e8_7hrEe2Kif300Z6m1g" name="isIntForFlowNames" method="_DHgQnLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_e9ALhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_e9AbhrEe2Kif300Z6m1g" name="addNodeToFlow" method="_DHgQnrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_e9ArhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_e9A7hrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkALhrEe2Kif300Z6m1g" name="getFlowPriority" method="_DHgQobhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkAbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkArhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkA7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkBLhrEe2Kif300Z6m1g" name="setFlowPriority" method="_DHgQpbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkBbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkBrhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkB7hrEe2Kif300Z6m1g" name="setFlowPeriod" method="_DHgQqLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkCLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkCbhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkCrhrEe2Kif300Z6m1g" name="setFlowDeadline" method="_DHgQq7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkC7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkDLhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkDbhrEe2Kif300Z6m1g" name="setFlowPhase" method="_DHgQrrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkDrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkD7hrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkELhrEe2Kif300Z6m1g" name="getFlowIndex" method="_DHgQsbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkEbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkErhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_fkE7hrEe2Kif300Z6m1g" name="getFlowPriority" method="_DHgQtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_fkFLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_fkFbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLELhrEe2Kif300Z6m1g" name="getFlowPeriod" method="_DHgQt7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLEbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLErhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLE7hrEe2Kif300Z6m1g" name="getFlowDeadline" method="_DHgQurhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLFLhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLFbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLFrhrEe2Kif300Z6m1g" name="getFlowPhase" method="_DHg3kLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLF7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLGLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLGbhrEe2Kif300Z6m1g" name="getFlowTxAttemptsPerLink" method="_DHg3k7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLGrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLG7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLHLhrEe2Kif300Z6m1g" name="setFlowsInPriorityOrder" method="_DHg3lrhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_gLHbhrEe2Kif300Z6m1g" name="setFlowsInDMorder" method="_DHg3l7hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_gLHrhrEe2Kif300Z6m1g" name="setFlowsInRMorder" method="_DHg3mLhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_gLH7hrEe2Kif300Z6m1g" name="setFlowsInRealTimeHARTorder" method="_DHg3mbhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_gLILhrEe2Kif300Z6m1g" name="finalizeCurrentFlow" method="_DHg3mrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLIbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gLIrhrEe2Kif300Z6m1g" name="nextReleaseTime" method="_DHg3nLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gLI7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLJLhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gLJbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gyILhrEe2Kif300Z6m1g" name="nextAbsoluteDeadline" method="_DHg3oLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gyIbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gyIrhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_gyI7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gyJLhrEe2Kif300Z6m1g" name="finalizeFlowWithE2eParameters" visibility="private" method="_DHg3pLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gyJbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gyJrhrEe2Kif300Z6m1g" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_DHg3prhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gyJ7hrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_gyKLhrEe2Kif300Z6m1g" name="getNodeNamesOrderedAlphabetically" method="_DHg3sbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_gyKbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_gyKrhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZMLhrEe2Kif300Z6m1g" name="getFlow" visibility="private" method="_DHg3tLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZMbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGGiU7hrEe2Kif300Z6m1g" type="_C98E0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZMrhrEe2Kif300Z6m1g" name="getFlowNames" method="_DHg3t7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZM7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_hZNLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZNrhrEe2Kif300Z6m1g" name="getNodeIndex" method="_DHg3urhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZN7hrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_hZOLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZObhrEe2Kif300Z6m1g" name="getNodesInFlow" method="_DHg3vbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZOrhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_hZO7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_hZPLhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZPrhrEe2Kif300Z6m1g" name="getHyperPeriod" method="_DHg3wbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZP7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_hZQLhrEe2Kif300Z6m1g" name="getTotalTxAttemptsInFlow" method="_DHg3w7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_hZQbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_hZQrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_iAQLhrEe2Kif300Z6m1g" name="getNumTxAttemptsPerLink" method="_DHg3xrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_iAQbhrEe2Kif300Z6m1g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_iAQrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_iAQ7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_iARbhrEe2Kif300Z6m1g" name="maxFlowLength" method="_DHg3zbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_iARrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGGiULhrEe2Kif300Z6m1g" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_DHg3qLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGGiUbhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGu0cLhrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGGiVLhrEe2Kif300Z6m1g" name="addEdge" method="_DHg3yrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGGiVbhrEe2Kif300Z6m1g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGGiVrhrEe2Kif300Z6m1g" name="edge" type="_C93MVLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGtmULhrEe2Kif300Z6m1g" name="WorkLoad" visibility="package" method="_DHfpkrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGuNYrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGuNY7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGtmUbhrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGuNYLhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGuNYbhrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGuNZLhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGuNZbhrEe2Kif300Z6m1g" name="WorkLoad" visibility="package" method="_DHfpl7hrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGuNarhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGuNa7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGuNZrhrEe2Kif300Z6m1g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGuNZ7hrEe2Kif300Z6m1g" name="m" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGuNaLhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGuNabhrEe2Kif300Z6m1g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGuNbLhrEe2Kif300Z6m1g" type="_C_du0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGuNbrhrEe2Kif300Z6m1g" name="setMinPacketReceptionRate" method="_DHgQhrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHpaeLhrEe2Kif300Z6m1g">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGuNb7hrEe2Kif300Z6m1g" name="minPacketReceptionRate" type="_DGkcYbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGuNcLhrEe2Kif300Z6m1g" name="setE2e" method="_DHgQjLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqBgLhrEe2Kif300Z6m1g">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGuNcbhrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGu0cbhrEe2Kif300Z6m1g" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_DHg3q7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGu0crhrEe2Kif300Z6m1g" name="flow" type="_C98E0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGu0c7hrEe2Kif300Z6m1g" name="e2e" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGu0dLhrEe2Kif300Z6m1g" name="M" type="_DGkcYbhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGu0dbhrEe2Kif300Z6m1g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGu0d7hrEe2Kif300Z6m1g" type="_DFeQMLhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_j1cLhrEe2Kif300Z6m1g" name="Warp">
              <ownedComment xmi:id="_DHqBhbhrEe2Kif300Z6m1g">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DHMugLhrEe2Kif300Z6m1g" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMugbhrEe2Kif300Z6m1g" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMugrhrEe2Kif300Z6m1g" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_DGkcYbhrEe2Kif300Z6m1g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMug7hrEe2Kif300Z6m1g" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMuhLhrEe2Kif300Z6m1g" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_DGkcYbhrEe2Kif300Z6m1g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMuhbhrEe2Kif300Z6m1g" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMuhrhrEe2Kif300Z6m1g" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMuh7hrEe2Kif300Z6m1g" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMuiLhrEe2Kif300Z6m1g" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_C-5uIbhrEe2Kif300Z6m1g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHMuibhrEe2Kif300Z6m1g" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHMuirhrEe2Kif300Z6m1g" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHNVkLhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHNVkbhrEe2Kif300Z6m1g" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHNVk7hrEe2Kif300Z6m1g" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHNVlbhrEe2Kif300Z6m1g" name="minLQ" visibility="private" isStatic="true" type="_DGkcYbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHNVl7hrEe2Kif300Z6m1g" name="e2e" visibility="private" isStatic="true" type="_DGkcYbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHNVmbhrEe2Kif300Z6m1g" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHNVm7hrEe2Kif300Z6m1g" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHNVnbhrEe2Kif300Z6m1g" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8obhrEe2Kif300Z6m1g" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8o7hrEe2Kif300Z6m1g" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8pbhrEe2Kif300Z6m1g" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8p7hrEe2Kif300Z6m1g" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8qbhrEe2Kif300Z6m1g" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8q7hrEe2Kif300Z6m1g" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8rbhrEe2Kif300Z6m1g" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8r7hrEe2Kif300Z6m1g" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHN8sLhrEe2Kif300Z6m1g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHN8srhrEe2Kif300Z6m1g" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHOjsbhrEe2Kif300Z6m1g" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHOjs7hrEe2Kif300Z6m1g" name="schedulerSelected" visibility="private" isStatic="true" type="_C-5uIbhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheoLhrEe2Kif300Z6m1g" name="main" specification="_C_lDkLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHheobhrEe2Kif300Z6m1g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHheorhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheo7hrEe2Kif300Z6m1g" name="visualize" specification="_DGI-kbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHhepLhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHhepbhrEe2Kif300Z6m1g" name="choice" type="_C-9_lrhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheprhrEe2Kif300Z6m1g" name="visualize" specification="_DGI-lLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHhep7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHheqLhrEe2Kif300Z6m1g" name="choice" type="_C-9YgbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheqbhrEe2Kif300Z6m1g" name="verifyPerformanceRequirements" specification="_DGI-l7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHheqrhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheq7hrEe2Kif300Z6m1g" name="verifyReliabilities" specification="_DGI-mbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHherLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHherbhrEe2Kif300Z6m1g" name="verifyDeadlines" specification="_DGJloLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHherrhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHher7hrEe2Kif300Z6m1g" name="verifyNoChannelConflicts" specification="_DGJlorhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHhesLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHhesbhrEe2Kif300Z6m1g" name="setWarpParameters" specification="_C_lDk7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHhesrhrEe2Kif300Z6m1g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DHhes7hrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHhetLhrEe2Kif300Z6m1g" name="printWarpParameters" specification="_C_lqoLhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_lDkLhrEe2Kif300Z6m1g" name="main" isStatic="true" method="_DHheoLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_lDkbhrEe2Kif300Z6m1g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_lDkrhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_lDk7hrEe2Kif300Z6m1g" name="setWarpParameters" visibility="private" isStatic="true" method="_DHhesbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_lDlLhrEe2Kif300Z6m1g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_C_lDlbhrEe2Kif300Z6m1g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_lqoLhrEe2Kif300Z6m1g" name="printWarpParameters" visibility="private" isStatic="true" method="_DHhetLhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DGI-kbhrEe2Kif300Z6m1g" name="visualize" visibility="private" isStatic="true" method="_DHheo7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGI-krhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGI-k7hrEe2Kif300Z6m1g" name="choice" type="_C-9_lrhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGI-lLhrEe2Kif300Z6m1g" name="visualize" visibility="private" isStatic="true" method="_DHheprhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGI-lbhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGI-lrhrEe2Kif300Z6m1g" name="choice" type="_C-9YgbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGI-l7hrEe2Kif300Z6m1g" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_DHheqbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGI-mLhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGI-mbhrEe2Kif300Z6m1g" name="verifyReliabilities" visibility="private" isStatic="true" method="_DHheq7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGI-mrhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGJloLhrEe2Kif300Z6m1g" name="verifyDeadlines" visibility="private" isStatic="true" method="_DHherbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGJlobhrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGJlorhrEe2Kif300Z6m1g" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_DHher7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGJlo7hrEe2Kif300Z6m1g" name="warp" type="_C_YPQLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_nf0LhrEe2Kif300Z6m1g" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_DHqokLhrEe2Kif300Z6m1g">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_DGwpoLhrEe2Kif300Z6m1g" general="_DFqdebhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHOjtbhrEe2Kif300Z6m1g" name="workLoad" visibility="package" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIH7l7hrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHOjt7hrEe2Kif300Z6m1g" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHhetbhrEe2Kif300Z6m1g" name="WorkLoadListener" specification="_DGKMsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHhetrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHhet7hrEe2Kif300Z6m1g" type="_C_nf0LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read
     this.currentFlow = new String();
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the workLoad by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHheuLhrEe2Kif300Z6m1g" name="buildNodesAndFlows" specification="_DGKMtbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHheubhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new WorkLoadListener(workLoad); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFsLhrEe2Kif300Z6m1g" name="testPrintStdOut" specification="_C_oG4LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFsbhrEe2Kif300Z6m1g" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);
 	System.out.printf(msg);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFsrhrEe2Kif300Z6m1g" name="enterWarpName" specification="_DGKMt7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFs7hrEe2Kif300Z6m1g" name="ctx" type="_DFrEjLhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph 
     workLoad.setName(name); // store the  name for later reference
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFtLhrEe2Kif300Z6m1g" name="enterFlowName" specification="_DGKzwrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFtbhrEe2Kif300Z6m1g" name="ctx" type="_DFrrnbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();
     workLoad.addFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFtrhrEe2Kif300Z6m1g" name="exitPriority" specification="_DGKzybhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFt7hrEe2Kif300Z6m1g" name="ctx" type="_DGKzx7hrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST
     workLoad.setFlowPriority(currentFlow, priority);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFuLhrEe2Kif300Z6m1g" name="exitPeriod" specification="_DGLa1LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFubhrEe2Kif300Z6m1g" name="ctx" type="_DGLa0rhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST
     workLoad.setFlowPeriod(currentFlow, period);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFurhrEe2Kif300Z6m1g" name="exitDeadline" specification="_DGLa27hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFu7hrEe2Kif300Z6m1g" name="ctx" type="_DGLa2bhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST
     workLoad.setFlowDeadline(currentFlow, deadline);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFvLhrEe2Kif300Z6m1g" name="exitPhase" specification="_DGMB5LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFvbhrEe2Kif300Z6m1g" name="ctx" type="_DGMB4rhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST
     workLoad.setFlowPhase(currentFlow, phase);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFvrhrEe2Kif300Z6m1g" name="exitSrcNode" specification="_DGMB6bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFv7hrEe2Kif300Z6m1g" name="ctx" type="_DFsSprhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFwLhrEe2Kif300Z6m1g" name="exitSnkNode" specification="_DGMB7rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFwbhrEe2Kif300Z6m1g" name="ctx" type="_DFsSrbhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFwrhrEe2Kif300Z6m1g" name="exitFlow" specification="_DGMo87hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFw7hrEe2Kif300Z6m1g" name="ctx" type="_DFs5trhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_oG4LhrEe2Kif300Z6m1g" name="testPrintStdOut" method="_DHiFsLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_oG4bhrEe2Kif300Z6m1g" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGKMsLhrEe2Kif300Z6m1g" name="WorkLoadListener" visibility="private" method="_DHhetbhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGKMsrhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGKMs7hrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DGKMsbhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGKMtLhrEe2Kif300Z6m1g" type="_C_nf0LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGKMtbhrEe2Kif300Z6m1g" name="buildNodesAndFlows" isStatic="true" method="_DHheuLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGKMtrhrEe2Kif300Z6m1g" name="workLoad" type="_C_du0LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGKMt7hrEe2Kif300Z6m1g" name="enterWarpName" method="_DHiFsrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGKMuLhrEe2Kif300Z6m1g" name="ctx" type="_DFrEjLhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGKzwrhrEe2Kif300Z6m1g" name="enterFlowName" method="_DHiFtLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGKzw7hrEe2Kif300Z6m1g" name="ctx" type="_DFrrnbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGKzybhrEe2Kif300Z6m1g" name="exitPriority" method="_DHiFtrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGKzyrhrEe2Kif300Z6m1g" name="ctx" type="_DGKzx7hrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGLa1LhrEe2Kif300Z6m1g" name="exitPeriod" method="_DHiFuLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGLa1bhrEe2Kif300Z6m1g" name="ctx" type="_DGLa0rhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGLa27hrEe2Kif300Z6m1g" name="exitDeadline" method="_DHiFurhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGLa3LhrEe2Kif300Z6m1g" name="ctx" type="_DGLa2bhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGMB5LhrEe2Kif300Z6m1g" name="exitPhase" method="_DHiFvLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGMB5bhrEe2Kif300Z6m1g" name="ctx" type="_DGMB4rhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGMB6bhrEe2Kif300Z6m1g" name="exitSrcNode" method="_DHiFvrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGMB6rhrEe2Kif300Z6m1g" name="ctx" type="_DFsSprhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGMB7rhrEe2Kif300Z6m1g" name="exitSnkNode" method="_DHiFwLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGMB77hrEe2Kif300Z6m1g" name="ctx" type="_DFsSrbhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGMo87hrEe2Kif300Z6m1g" name="exitFlow" method="_DHiFwrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGMo9LhrEe2Kif300Z6m1g" name="ctx" type="_DFs5trhrEe2Kif300Z6m1g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_C_ot8LhrEe2Kif300Z6m1g" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_DHPKwLhrEe2Kif300Z6m1g" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPKwbhrEe2Kif300Z6m1g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKwrhrEe2Kif300Z6m1g" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPKw7hrEe2Kif300Z6m1g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKxLhrEe2Kif300Z6m1g" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPKxbhrEe2Kif300Z6m1g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKxrhrEe2Kif300Z6m1g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPKx7hrEe2Kif300Z6m1g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKyLhrEe2Kif300Z6m1g" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPKybhrEe2Kif300Z6m1g" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKyrhrEe2Kif300Z6m1g" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKzLhrEe2Kif300Z6m1g" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKzbhrEe2Kif300Z6m1g" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKzrhrEe2Kif300Z6m1g" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPKz7hrEe2Kif300Z6m1g" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPK0bhrEe2Kif300Z6m1g" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPx0bhrEe2Kif300Z6m1g" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPx07hrEe2Kif300Z6m1g" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPx1LhrEe2Kif300Z6m1g" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DHPx1bhrEe2Kif300Z6m1g" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DHPx1rhrEe2Kif300Z6m1g" name="predecessor" type="_C_ot8LhrEe2Kif300Z6m1g" association="_DHqokbhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHPx17hrEe2Kif300Z6m1g" name="endTimes" visibility="private" type="_C-uvA7hrEe2Kif300Z6m1g" association="_DIH7mrhrEe2Kif300Z6m1g"/>
              <ownedAttribute xmi:id="_DHPx2rhrEe2Kif300Z6m1g" name="subObjects" type="_DGNQArhrEe2Kif300Z6m1g" isReadOnly="true" association="_DIIiobhrEe2Kif300Z6m1g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFxLhrEe2Kif300Z6m1g" name="SchedulableObject" specification="_C_p8ELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFxbhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = -1; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFxrhrEe2Kif300Z6m1g" name="SchedulableObject" specification="_DGN3ELhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFx7hrEe2Kif300Z6m1g" name="obj" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHiFyLhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiFybhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();
		this.priority = obj.getPriority();
		this.period = obj.getPeriod();
		this.deadline = obj.getDeadline();
		this.phase = obj.getPhase();
		this.startTime = obj.getStartTime();
		this.endTime = obj.getEndTime();
		this.releaseTime = obj.getReleaseTime(); // initialize parameters
		this.lastUpdateTime = time; // reset lastUpdate 
		this.predecessor = obj.getPredecessor();
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.endTimes.addAll(obj.getAllEndTimes());
		this.subObjects = new LinkedList&lt;SchedulableObject>();
		this.subObjects.addAll(obj.getSubObjects());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiFyrhrEe2Kif300Z6m1g" name="SchedulableObject" specification="_C_p8FLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiFy7hrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiFzLhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiFzbhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiFzrhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiFz7hrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF0LhrEe2Kif300Z6m1g" name="SchedulableObject" specification="_C_qjJrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF0bhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiF0rhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiF07hrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiF1LhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiF1bhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHiF1rhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.name = name;
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF17hrEe2Kif300Z6m1g" name="setDefaultParameters" specification="_C_qjL7hrEe2Kif300Z6m1g">
                <language>java</language>
                <body>this.name = UNKNOWN;
		this.priority = DEFAULT;
		this.period = DEFAULT_PERIOD;
		this.deadline = DEFAULT_DEADLINE;
		this.phase = DEFAULT;
		this.startTime = BEFORE_START;
		this.endTime = BEFORE_START;
		this.predecessor = null; 
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.subObjects = new LinkedList&lt;SchedulableObject>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF2LhrEe2Kif300Z6m1g" name="getAllEndTimes" specification="_C_qjMLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF2bhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
                <language>java</language>
                <body>return endTimes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF2rhrEe2Kif300Z6m1g" name="addToEndTimes" specification="_C_rKMbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF27hrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		endTimes.add(time);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF3LhrEe2Kif300Z6m1g" name="peekEndTimes" specification="_C_rKM7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF3bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF3rhrEe2Kif300Z6m1g" name="pollEndTimes" specification="_C_rKNbhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>endTimes.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF37hrEe2Kif300Z6m1g" name="addSubObject" specification="_DGN3F7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF4LhrEe2Kif300Z6m1g" name="obj" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <language>java</language>
                <body>subObjects.add(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF4bhrEe2Kif300Z6m1g" name="getName" specification="_C_rKNrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF4rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF47hrEe2Kif300Z6m1g" name="setName" specification="_C_rxQLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF5LhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF5bhrEe2Kif300Z6m1g" name="getReleaseTime" specification="_C_rxQrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF5rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF57hrEe2Kif300Z6m1g" name="getPhase" specification="_C_rxRLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF6LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF6bhrEe2Kif300Z6m1g" name="getStartTime" specification="_C_rxRrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF6rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF67hrEe2Kif300Z6m1g" name="setEndTime" specification="_C_rxSLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF7LhrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF7bhrEe2Kif300Z6m1g" name="setStartTime" specification="_C_rxSrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF7rhrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiF77hrEe2Kif300Z6m1g" name="setReleaseTime" specification="_C_sYULhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiF8LhrEe2Kif300Z6m1g" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiswLhrEe2Kif300Z6m1g" name="setPeriod" specification="_C_sYUrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiswbhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiswrhrEe2Kif300Z6m1g" name="setPhase" specification="_C_sYVLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHisw7hrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHisxLhrEe2Kif300Z6m1g" name="setNextReleaseTime" specification="_C_sYVrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHisxbhrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {
			// released every (j*period)+phase, for all j >=0
			Integer j = 0;
			if (period > 0) {
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor
			} 
			Integer nextRelease = (j*period)+phase ;
			releaseTime = nextRelease;
			lastUpdateTime = currentTime;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHisxrhrEe2Kif300Z6m1g" name="maxPhaseComparison" specification="_DGN3GbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHisx7hrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHisyLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHisybhrEe2Kif300Z6m1g" name="maxPhaseComparison" specification="_DGN3HLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHisyrhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHisy7hrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHiszLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHiszbhrEe2Kif300Z6m1g" name="deadlineComparison" specification="_DGN3ILhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHiszrhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHisz7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis0LhrEe2Kif300Z6m1g" name="deadlineComparison" specification="_DGN3I7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis0bhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis0rhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis07hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis1LhrEe2Kif300Z6m1g" name="periodComparison" specification="_DGN3J7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis1bhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis1rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis17hrEe2Kif300Z6m1g" name="periodComparison" specification="_DGN3KrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis2LhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis2bhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis2rhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis27hrEe2Kif300Z6m1g" name="priorityComparison" specification="_DGOeIbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis3LhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis3bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis3rhrEe2Kif300Z6m1g" name="priorityComparison" specification="_DGOeJLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis37hrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis4LhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis4bhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis4rhrEe2Kif300Z6m1g" name="releaseTimeComparison" specification="_DGOeKLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis47hrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis5LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis5bhrEe2Kif300Z6m1g" name="releaseTimeComparison" specification="_DGOeK7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis5rhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis57hrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis6LhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis6bhrEe2Kif300Z6m1g" name="LatestReleaseTimeComparison" specification="_DGOeL7hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis6rhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis67hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis7LhrEe2Kif300Z6m1g" name="LatestReleaseTimeComparison" specification="_DGOeMrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis7bhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis7rhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DHis77hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis8LhrEe2Kif300Z6m1g" name="compareAscendingOrder" specification="_C_s_YLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis8bhrEe2Kif300Z6m1g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHis8rhrEe2Kif300Z6m1g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHis87hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return -1; 
		else if (v1 > v2)
			return 1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis9LhrEe2Kif300Z6m1g" name="compareDescendingOrder" specification="_C_s_ZLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis9bhrEe2Kif300Z6m1g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHis9rhrEe2Kif300Z6m1g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DHis97hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return 1; 
		else if (v1 > v2)
			return -1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis-LhrEe2Kif300Z6m1g" name="print" specification="_C_s_aLhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DHis-bhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DHis-rhrEe2Kif300Z6m1g" name="print" specification="_C_s_arhrEe2Kif300Z6m1g">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_C_p8ELhrEe2Kif300Z6m1g" name="SchedulableObject" visibility="package" method="_DHiFxLhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C_p8EbhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C_p8ErhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C_p8E7hrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_p8FLhrEe2Kif300Z6m1g" name="SchedulableObject" visibility="package" method="_DHiFyrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C_qjI7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C_qjJLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C_p8FbhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjILhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjIbhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjIrhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjJbhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_qjJrhrEe2Kif300Z6m1g" name="SchedulableObject" visibility="package" method="_DHiF0LhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_C_qjLLhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_C_qjLbhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_C_qjJ7hrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjKLhrEe2Kif300Z6m1g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjKbhrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjKrhrEe2Kif300Z6m1g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjK7hrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_qjLrhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_qjL7hrEe2Kif300Z6m1g" name="setDefaultParameters" visibility="private" method="_DHiF17hrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_qjMLhrEe2Kif300Z6m1g" name="getAllEndTimes" method="_DHiF2LhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqolLhrEe2Kif300Z6m1g">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGN3FrhrEe2Kif300Z6m1g" type="_C-uvA7hrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rKMbhrEe2Kif300Z6m1g" name="addToEndTimes" method="_DHiF2rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_rKMrhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rKM7hrEe2Kif300Z6m1g" name="peekEndTimes" method="_DHiF3LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_rKNLhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rKNbhrEe2Kif300Z6m1g" name="pollEndTimes" method="_DHiF3rhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_C_rKNrhrEe2Kif300Z6m1g" name="getName" method="_DHiF4bhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqolbhrEe2Kif300Z6m1g">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rKN7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxQLhrEe2Kif300Z6m1g" name="setName" method="_DHiF47hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHqolrhrEe2Kif300Z6m1g">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxQbhrEe2Kif300Z6m1g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxQrhrEe2Kif300Z6m1g" name="getReleaseTime" method="_DHiF5bhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPoLhrEe2Kif300Z6m1g">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxQ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxRLhrEe2Kif300Z6m1g" name="getPhase" method="_DHiF57hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPobhrEe2Kif300Z6m1g">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxRbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxRrhrEe2Kif300Z6m1g" name="getStartTime" method="_DHiF6bhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPorhrEe2Kif300Z6m1g">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxR7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxSLhrEe2Kif300Z6m1g" name="setEndTime" method="_DHiF67hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPo7hrEe2Kif300Z6m1g">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxSbhrEe2Kif300Z6m1g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_rxSrhrEe2Kif300Z6m1g" name="setStartTime" method="_DHiF7bhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPpLhrEe2Kif300Z6m1g">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_rxS7hrEe2Kif300Z6m1g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_sYULhrEe2Kif300Z6m1g" name="setReleaseTime" method="_DHiF77hrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPpbhrEe2Kif300Z6m1g">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_sYUbhrEe2Kif300Z6m1g" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_sYUrhrEe2Kif300Z6m1g" name="setPeriod" method="_DHiswLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPprhrEe2Kif300Z6m1g">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_sYU7hrEe2Kif300Z6m1g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_sYVLhrEe2Kif300Z6m1g" name="setPhase" method="_DHiswrhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPp7hrEe2Kif300Z6m1g">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_sYVbhrEe2Kif300Z6m1g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_sYVrhrEe2Kif300Z6m1g" name="setNextReleaseTime" method="_DHisxLhrEe2Kif300Z6m1g">
                <ownedComment xmi:id="_DHrPqLhrEe2Kif300Z6m1g">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_C_sYV7hrEe2Kif300Z6m1g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_s_YLhrEe2Kif300Z6m1g" name="compareAscendingOrder" method="_DHis8LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_s_YbhrEe2Kif300Z6m1g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_s_YrhrEe2Kif300Z6m1g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_s_Y7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_s_ZLhrEe2Kif300Z6m1g" name="compareDescendingOrder" method="_DHis9LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_s_ZbhrEe2Kif300Z6m1g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_s_ZrhrEe2Kif300Z6m1g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_C_s_Z7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_s_aLhrEe2Kif300Z6m1g" name="print" method="_DHis-LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_C_s_abhrEe2Kif300Z6m1g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_C_s_arhrEe2Kif300Z6m1g" name="print" method="_DHis-rhrEe2Kif300Z6m1g"/>
              <ownedOperation xmi:id="_DGN3ELhrEe2Kif300Z6m1g" name="SchedulableObject" visibility="package" method="_DHiFxrhrEe2Kif300Z6m1g">
                <eAnnotations xmi:id="_DGN3E7hrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DGN3FLhrEe2Kif300Z6m1g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DHqok7hrEe2Kif300Z6m1g">
                  <body>Constructor that creates a copy of schedulable 
	 * parameters of the input obj, but setting its
	 * lastUpdateTime to input time.
	 * 
	 * @param obj
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_DGN3EbhrEe2Kif300Z6m1g" name="obj" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3ErhrEe2Kif300Z6m1g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DGN3FbhrEe2Kif300Z6m1g" type="_C_ot8LhrEe2Kif300Z6m1g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3F7hrEe2Kif300Z6m1g" name="addSubObject" method="_DHiF37hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3GLhrEe2Kif300Z6m1g" name="obj" type="_C_ot8LhrEe2Kif300Z6m1g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3GbhrEe2Kif300Z6m1g" name="maxPhaseComparison" method="_DHisxrhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3GrhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3G7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3HLhrEe2Kif300Z6m1g" name="maxPhaseComparison" method="_DHisybhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3HbhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3HrhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3H7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3ILhrEe2Kif300Z6m1g" name="deadlineComparison" method="_DHiszbhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3IbhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3IrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3I7hrEe2Kif300Z6m1g" name="deadlineComparison" method="_DHis0LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3JLhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3JbhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3JrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3J7hrEe2Kif300Z6m1g" name="periodComparison" method="_DHis1LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3KLhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3KbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGN3KrhrEe2Kif300Z6m1g" name="periodComparison" method="_DHis17hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGN3K7hrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGN3LLhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeILhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeIbhrEe2Kif300Z6m1g" name="priorityComparison" method="_DHis27hrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeIrhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeI7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeJLhrEe2Kif300Z6m1g" name="priorityComparison" method="_DHis3rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeJbhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeJrhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeJ7hrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeKLhrEe2Kif300Z6m1g" name="releaseTimeComparison" method="_DHis4rhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeKbhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeKrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeK7hrEe2Kif300Z6m1g" name="releaseTimeComparison" method="_DHis5bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeLLhrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeLbhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeLrhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeL7hrEe2Kif300Z6m1g" name="LatestReleaseTimeComparison" method="_DHis6bhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeMLhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeMbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DGOeMrhrEe2Kif300Z6m1g" name="LatestReleaseTimeComparison" method="_DHis7LhrEe2Kif300Z6m1g">
                <ownedParameter xmi:id="_DGOeM7hrEe2Kif300Z6m1g" name="obj1" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeNLhrEe2Kif300Z6m1g" name="obj2" type="_C_ot8LhrEe2Kif300Z6m1g"/>
                <ownedParameter xmi:id="_DGOeNbhrEe2Kif300Z6m1g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGaEUrhrEe2Kif300Z6m1g" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGinMLhrEe2Kif300Z6m1g" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGjOR7hrEe2Kif300Z6m1g" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGpU4LhrEe2Kif300Z6m1g" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGp78LhrEe2Kif300Z6m1g" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_DHmXILhrEe2Kif300Z6m1g" name="" memberEnd="_DG6aprhrEe2Kif300Z6m1g _DHmXIbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DHmXIbhrEe2Kif300Z6m1g" name="" type="_C93MVLhrEe2Kif300Z6m1g" association="_DHmXILhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DHpacbhrEe2Kif300Z6m1g" name="" memberEnd="_DHLgarhrEe2Kif300Z6m1g _DHpacrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DHpacrhrEe2Kif300Z6m1g" name="" type="_C_du0LhrEe2Kif300Z6m1g" association="_DHpacbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DHpac7hrEe2Kif300Z6m1g" name="" memberEnd="_DHLga7hrEe2Kif300Z6m1g _DHpadLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DHpadLhrEe2Kif300Z6m1g" name="" type="_C_du0LhrEe2Kif300Z6m1g" association="_DHpac7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DHqokbhrEe2Kif300Z6m1g" name="" memberEnd="_DHPx1rhrEe2Kif300Z6m1g _DHqokrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DHqokrhrEe2Kif300Z6m1g" name="" type="_C_ot8LhrEe2Kif300Z6m1g" association="_DHqokbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH55ILhrEe2Kif300Z6m1g" name="" memberEnd="_DH55IbhrEe2Kif300Z6m1g _DG2wQrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH55IbhrEe2Kif300Z6m1g" name="" type="_C9jqULhrEe2Kif300Z6m1g" association="_DH55ILhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH6gMLhrEe2Kif300Z6m1g" name="" memberEnd="_DH6gMbhrEe2Kif300Z6m1g _DG2wRLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH6gMbhrEe2Kif300Z6m1g" name="" type="_C9jqULhrEe2Kif300Z6m1g" association="_DH6gMLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH6gM7hrEe2Kif300Z6m1g" name="" memberEnd="_DH6gNLhrEe2Kif300Z6m1g _DG2wRrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH6gNLhrEe2Kif300Z6m1g" name="" type="_C9jqULhrEe2Kif300Z6m1g" association="_DH6gM7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH6gNrhrEe2Kif300Z6m1g" name="" memberEnd="_DH6gN7hrEe2Kif300Z6m1g _DG3XVbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH6gN7hrEe2Kif300Z6m1g" name="" type="_C9q_ELhrEe2Kif300Z6m1g" association="_DH6gNrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH7HQbhrEe2Kif300Z6m1g" name="" memberEnd="_DH7HQrhrEe2Kif300Z6m1g _DG3-YLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH7HQrhrEe2Kif300Z6m1g" name="" type="_C9q_ELhrEe2Kif300Z6m1g" association="_DH7HQbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH7HRLhrEe2Kif300Z6m1g" name="" memberEnd="_DH7HRbhrEe2Kif300Z6m1g _DG3-aLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH7HRbhrEe2Kif300Z6m1g" name="" type="_C9rmIrhrEe2Kif300Z6m1g" association="_DH7HRLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH7uULhrEe2Kif300Z6m1g" name="" memberEnd="_DH7uUbhrEe2Kif300Z6m1g _DG3-arhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH7uUbhrEe2Kif300Z6m1g" name="" type="_C9rmIrhrEe2Kif300Z6m1g" association="_DH7uULhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH7uU7hrEe2Kif300Z6m1g" name="" memberEnd="_DH7uVLhrEe2Kif300Z6m1g _DG4ldLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH7uVLhrEe2Kif300Z6m1g" name="" type="_C9s0QLhrEe2Kif300Z6m1g" association="_DH7uU7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH8VYLhrEe2Kif300Z6m1g" name="" memberEnd="_DH8VYbhrEe2Kif300Z6m1g _DG4lebhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH8VYbhrEe2Kif300Z6m1g" name="" type="_C9vQgLhrEe2Kif300Z6m1g" association="_DH8VYLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH8VY7hrEe2Kif300Z6m1g" name="" memberEnd="_DH8VZLhrEe2Kif300Z6m1g _DG5MhLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH8VZLhrEe2Kif300Z6m1g" name="" type="_C9vQgLhrEe2Kif300Z6m1g" association="_DH8VY7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH8VZrhrEe2Kif300Z6m1g" name="" memberEnd="_DH8VZ7hrEe2Kif300Z6m1g _DG5zkLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH8VZ7hrEe2Kif300Z6m1g" name="" type="_C90JALhrEe2Kif300Z6m1g" association="_DH8VZrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH8VabhrEe2Kif300Z6m1g" name="" memberEnd="_DH8VarhrEe2Kif300Z6m1g _DG5zlrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH8VarhrEe2Kif300Z6m1g" name="" type="_C90JALhrEe2Kif300Z6m1g" association="_DH8VabhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH88cbhrEe2Kif300Z6m1g" name="" memberEnd="_DH88crhrEe2Kif300Z6m1g _DG7Bw7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH88crhrEe2Kif300Z6m1g" name="" type="_C98E0LhrEe2Kif300Z6m1g" association="_DH88cbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH88dLhrEe2Kif300Z6m1g" name="" memberEnd="_DH88dbhrEe2Kif300Z6m1g _DG7owrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH88dbhrEe2Kif300Z6m1g" name="" type="_C98E0LhrEe2Kif300Z6m1g" association="_DH88dLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH88d7hrEe2Kif300Z6m1g" name="" memberEnd="_DH88eLhrEe2Kif300Z6m1g _DG7oxbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH88eLhrEe2Kif300Z6m1g" name="" type="_C98E0LhrEe2Kif300Z6m1g" association="_DH88d7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH9jgbhrEe2Kif300Z6m1g" name="" memberEnd="_DH9jgrhrEe2Kif300Z6m1g _DG7oyLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH9jgrhrEe2Kif300Z6m1g" name="" type="_C98E0LhrEe2Kif300Z6m1g" association="_DH9jgbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH9jhLhrEe2Kif300Z6m1g" name="" memberEnd="_DH9jhbhrEe2Kif300Z6m1g _DG8P0LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH9jhbhrEe2Kif300Z6m1g" name="" type="_C98E0LhrEe2Kif300Z6m1g" association="_DH9jhLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH9jh7hrEe2Kif300Z6m1g" name="" memberEnd="_DH9jiLhrEe2Kif300Z6m1g _DG9d8LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH9jiLhrEe2Kif300Z6m1g" name="" type="_C-RcAbhrEe2Kif300Z6m1g" association="_DH9jh7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH-KkbhrEe2Kif300Z6m1g" name="" memberEnd="_DH-KkrhrEe2Kif300Z6m1g _DG9d9rhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH-KkrhrEe2Kif300Z6m1g" name="" type="_C-RcAbhrEe2Kif300Z6m1g" association="_DH-KkbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH-KlLhrEe2Kif300Z6m1g" name="" memberEnd="_DH-KlbhrEe2Kif300Z6m1g _DG9d-LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH-KlbhrEe2Kif300Z6m1g" name="" type="_C-TRMLhrEe2Kif300Z6m1g" association="_DH-KlLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH-Kl7hrEe2Kif300Z6m1g" name="" memberEnd="_DH-KmLhrEe2Kif300Z6m1g _DG-FALhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH-KmLhrEe2Kif300Z6m1g" name="" type="_C-UfULhrEe2Kif300Z6m1g" association="_DH-Kl7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH-KmrhrEe2Kif300Z6m1g" name="" memberEnd="_DH-Km7hrEe2Kif300Z6m1g _DG-FArhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH-Km7hrEe2Kif300Z6m1g" name="" type="_C-UfULhrEe2Kif300Z6m1g" association="_DH-KmrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH_YsbhrEe2Kif300Z6m1g" name="" memberEnd="_DH_YsrhrEe2Kif300Z6m1g _DG-FBrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH_YsrhrEe2Kif300Z6m1g" name="" type="_C-VGYLhrEe2Kif300Z6m1g" association="_DH_YsbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH_YtLhrEe2Kif300Z6m1g" name="" memberEnd="_DH_YtbhrEe2Kif300Z6m1g _DG-sGbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH_YtbhrEe2Kif300Z6m1g" name="" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DH_YtLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH__wbhrEe2Kif300Z6m1g" name="" memberEnd="_DH__wrhrEe2Kif300Z6m1g _DG-sG7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH__wrhrEe2Kif300Z6m1g" name="" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DH__wbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH__xLhrEe2Kif300Z6m1g" name="" memberEnd="_DH__xbhrEe2Kif300Z6m1g _DG-sHbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH__xbhrEe2Kif300Z6m1g" name="" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DH__xLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DH__x7hrEe2Kif300Z6m1g" name="" memberEnd="_DH__yLhrEe2Kif300Z6m1g _DG_TIbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DH__yLhrEe2Kif300Z6m1g" name="" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DH__x7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIAm0LhrEe2Kif300Z6m1g" name="" memberEnd="_DIAm0bhrEe2Kif300Z6m1g _DG_TI7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIAm0bhrEe2Kif300Z6m1g" name="" type="_C-YJsLhrEe2Kif300Z6m1g" association="_DIAm0LhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIAm07hrEe2Kif300Z6m1g" name="" memberEnd="_DIAm1LhrEe2Kif300Z6m1g _DG_TKrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIAm1LhrEe2Kif300Z6m1g" name="" type="_C-ZX0LhrEe2Kif300Z6m1g" association="_DIAm07hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIAm1rhrEe2Kif300Z6m1g" name="" memberEnd="_DIAm17hrEe2Kif300Z6m1g _DG_6MLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIAm17hrEe2Kif300Z6m1g" name="" type="_C-ZX0LhrEe2Kif300Z6m1g" association="_DIAm1rhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIAm2bhrEe2Kif300Z6m1g" name="" memberEnd="_DIAm2rhrEe2Kif300Z6m1g _DG_6NrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIAm2rhrEe2Kif300Z6m1g" name="" type="_C-bNAbhrEe2Kif300Z6m1g" association="_DIAm2bhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIBN4bhrEe2Kif300Z6m1g" name="" memberEnd="_DIBN4rhrEe2Kif300Z6m1g _DHAhSLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIBN4rhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIBN4bhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIBN5LhrEe2Kif300Z6m1g" name="" memberEnd="_DIBN5bhrEe2Kif300Z6m1g _DHAhSrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIBN5bhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIBN5LhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIBN57hrEe2Kif300Z6m1g" name="" memberEnd="_DIBN6LhrEe2Kif300Z6m1g _DHBIUbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIBN6LhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIBN57hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIB08bhrEe2Kif300Z6m1g" name="" memberEnd="_DIB08rhrEe2Kif300Z6m1g _DHBIVrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIB08rhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIB08bhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIB09LhrEe2Kif300Z6m1g" name="" memberEnd="_DIB09bhrEe2Kif300Z6m1g _DHBIW7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIB09bhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIB09LhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIB097hrEe2Kif300Z6m1g" name="" memberEnd="_DIB0-LhrEe2Kif300Z6m1g _DHBIXbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIB0-LhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DIB097hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DICcAbhrEe2Kif300Z6m1g" name="" memberEnd="_DICcArhrEe2Kif300Z6m1g _DHBvYrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DICcArhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DICcAbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DICcBLhrEe2Kif300Z6m1g" name="" memberEnd="_DICcBbhrEe2Kif300Z6m1g _DHBvZbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DICcBbhrEe2Kif300Z6m1g" name="" type="_C-gFgbhrEe2Kif300Z6m1g" association="_DICcBLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DICcB7hrEe2Kif300Z6m1g" name="" memberEnd="_DICcCLhrEe2Kif300Z6m1g _DHCWeLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DICcCLhrEe2Kif300Z6m1g" name="" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DICcB7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDDEbhrEe2Kif300Z6m1g" name="" memberEnd="_DIDDErhrEe2Kif300Z6m1g _DHCWerhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDDErhrEe2Kif300Z6m1g" name="" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIDDEbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDDFLhrEe2Kif300Z6m1g" name="" memberEnd="_DIDDFbhrEe2Kif300Z6m1g _DHCWfLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDDFbhrEe2Kif300Z6m1g" name="" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIDDFLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDDF7hrEe2Kif300Z6m1g" name="" memberEnd="_DIDDGLhrEe2Kif300Z6m1g _DHC9hbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDDGLhrEe2Kif300Z6m1g" name="" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIDDF7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDqILhrEe2Kif300Z6m1g" name="" memberEnd="_DIDqIbhrEe2Kif300Z6m1g _DHC9jbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDqIbhrEe2Kif300Z6m1g" name="" type="_C-k-ArhrEe2Kif300Z6m1g" association="_DIDqILhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDqI7hrEe2Kif300Z6m1g" name="" memberEnd="_DIDqJLhrEe2Kif300Z6m1g _DHDklLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDqJLhrEe2Kif300Z6m1g" name="" type="_C-sSwLhrEe2Kif300Z6m1g" association="_DIDqI7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDqJrhrEe2Kif300Z6m1g" name="" memberEnd="_DIDqJ7hrEe2Kif300Z6m1g _DHDklrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDqJ7hrEe2Kif300Z6m1g" name="" type="_C-sSwLhrEe2Kif300Z6m1g" association="_DIDqJrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIDqKbhrEe2Kif300Z6m1g" name="" memberEnd="_DIDqKrhrEe2Kif300Z6m1g _DHELpLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIDqKrhrEe2Kif300Z6m1g" name="" type="_C-wkNrhrEe2Kif300Z6m1g" association="_DIDqKbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIERMbhrEe2Kif300Z6m1g" name="" memberEnd="_DIERMrhrEe2Kif300Z6m1g _DHELprhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIERMrhrEe2Kif300Z6m1g" name="" type="_C-wkNrhrEe2Kif300Z6m1g" association="_DIERMbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIERNLhrEe2Kif300Z6m1g" name="" memberEnd="_DIERNbhrEe2Kif300Z6m1g _DHELqrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIERNbhrEe2Kif300Z6m1g" name="" type="_C-xLQLhrEe2Kif300Z6m1g" association="_DIERNLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIERN7hrEe2Kif300Z6m1g" name="" memberEnd="_DIEROLhrEe2Kif300Z6m1g _DHEyu7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIEROLhrEe2Kif300Z6m1g" name="" type="_C-zAcrhrEe2Kif300Z6m1g" association="_DIERN7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIE4QbhrEe2Kif300Z6m1g" name="" memberEnd="_DIE4QrhrEe2Kif300Z6m1g _DHEyvbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIE4QrhrEe2Kif300Z6m1g" name="" type="_C-zAcrhrEe2Kif300Z6m1g" association="_DIE4QbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIE4RLhrEe2Kif300Z6m1g" name="" memberEnd="_DIE4RbhrEe2Kif300Z6m1g _DHGn4LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIE4RbhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIE4RLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIE4R7hrEe2Kif300Z6m1g" name="" memberEnd="_DIE4SLhrEe2Kif300Z6m1g _DHGn4rhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIE4SLhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIE4R7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIFfULhrEe2Kif300Z6m1g" name="" memberEnd="_DIFfUbhrEe2Kif300Z6m1g _DHGn5LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIFfUbhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIFfULhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIFfU7hrEe2Kif300Z6m1g" name="" memberEnd="_DIFfVLhrEe2Kif300Z6m1g _DHGn7LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIFfVLhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIFfU7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIFfVrhrEe2Kif300Z6m1g" name="" memberEnd="_DIFfV7hrEe2Kif300Z6m1g _DHGn77hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIFfV7hrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIFfVrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGGYLhrEe2Kif300Z6m1g" name="" memberEnd="_DIGGYbhrEe2Kif300Z6m1g _DHHO8bhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGGYbhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIGGYLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGGY7hrEe2Kif300Z6m1g" name="" memberEnd="_DIGGZLhrEe2Kif300Z6m1g _DHHO9LhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGGZLhrEe2Kif300Z6m1g" name="" type="_C-_NsLhrEe2Kif300Z6m1g" association="_DIGGY7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGGZrhrEe2Kif300Z6m1g" name="" memberEnd="_DIGGZ7hrEe2Kif300Z6m1g _DHHO9rhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGGZ7hrEe2Kif300Z6m1g" name="" type="_C_RhkLhrEe2Kif300Z6m1g" association="_DIGGZrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGGabhrEe2Kif300Z6m1g" name="" memberEnd="_DIGGarhrEe2Kif300Z6m1g _DHH2CLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGGarhrEe2Kif300Z6m1g" name="" type="_C_T90LhrEe2Kif300Z6m1g" association="_DIGGabhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGGbLhrEe2Kif300Z6m1g" name="" memberEnd="_DIGGbbhrEe2Kif300Z6m1g _DHH2DLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGGbbhrEe2Kif300Z6m1g" name="" type="_C_T90LhrEe2Kif300Z6m1g" association="_DIGGbLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGtcbhrEe2Kif300Z6m1g" name="" memberEnd="_DIGtcrhrEe2Kif300Z6m1g _DHJEJrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGtcrhrEe2Kif300Z6m1g" name="" type="_C_WaE7hrEe2Kif300Z6m1g" association="_DIGtcbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGtdLhrEe2Kif300Z6m1g" name="" memberEnd="_DIGtdbhrEe2Kif300Z6m1g _DHJEKbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGtdbhrEe2Kif300Z6m1g" name="" type="_C_WaE7hrEe2Kif300Z6m1g" association="_DIGtdLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIGtd7hrEe2Kif300Z6m1g" name="" memberEnd="_DIGteLhrEe2Kif300Z6m1g _DHJrMLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIGteLhrEe2Kif300Z6m1g" name="" type="_C_ZdYLhrEe2Kif300Z6m1g" association="_DIGtd7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIHUgLhrEe2Kif300Z6m1g" name="" memberEnd="_DIHUgbhrEe2Kif300Z6m1g _DHJrMrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIHUgbhrEe2Kif300Z6m1g" name="" type="_C_ZdYLhrEe2Kif300Z6m1g" association="_DIHUgLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIHUg7hrEe2Kif300Z6m1g" name="" memberEnd="_DIHUhLhrEe2Kif300Z6m1g _DHJrNLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIHUhLhrEe2Kif300Z6m1g" name="" type="_C_ZdYLhrEe2Kif300Z6m1g" association="_DIHUg7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIHUhrhrEe2Kif300Z6m1g" name="" memberEnd="_DIHUh7hrEe2Kif300Z6m1g _DHJrNrhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIHUh7hrEe2Kif300Z6m1g" name="" type="_C_ZdYLhrEe2Kif300Z6m1g" association="_DIHUhrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIHUibhrEe2Kif300Z6m1g" name="" memberEnd="_DIHUirhrEe2Kif300Z6m1g _DHKSQLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIHUirhrEe2Kif300Z6m1g" name="" type="_C_ZdYLhrEe2Kif300Z6m1g" association="_DIHUibhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIH7kbhrEe2Kif300Z6m1g" name="" memberEnd="_DIH7krhrEe2Kif300Z6m1g _DHMHcLhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIH7krhrEe2Kif300Z6m1g" name="" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIH7kbhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIH7lLhrEe2Kif300Z6m1g" name="" memberEnd="_DIH7lbhrEe2Kif300Z6m1g _DHMHc7hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIH7lbhrEe2Kif300Z6m1g" name="" type="_C_du0LhrEe2Kif300Z6m1g" association="_DIH7lLhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIH7l7hrEe2Kif300Z6m1g" name="" memberEnd="_DIH7mLhrEe2Kif300Z6m1g _DHOjtbhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIH7mLhrEe2Kif300Z6m1g" name="" type="_C_nf0LhrEe2Kif300Z6m1g" association="_DIH7l7hrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIH7mrhrEe2Kif300Z6m1g" name="" memberEnd="_DIH7m7hrEe2Kif300Z6m1g _DHPx17hrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIH7m7hrEe2Kif300Z6m1g" name="" type="_C_ot8LhrEe2Kif300Z6m1g" association="_DIH7mrhrEe2Kif300Z6m1g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DIIiobhrEe2Kif300Z6m1g" name="" memberEnd="_DIIiorhrEe2Kif300Z6m1g _DHPx2rhrEe2Kif300Z6m1g">
              <ownedEnd xmi:id="_DIIiorhrEe2Kif300Z6m1g" name="" type="_C_ot8LhrEe2Kif300Z6m1g" association="_DIIiobhrEe2Kif300Z6m1g"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_C7-9BbhrEe2Kif300Z6m1g" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_DFqdebhrEe2Kif300Z6m1g" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFrEgbhrEe2Kif300Z6m1g" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFrEg7hrEe2Kif300Z6m1g" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DGrxILhrEe2Kif300Z6m1g" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_C8LxULhrEe2Kif300Z6m1g" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_DF1ckLhrEe2Kif300Z6m1g" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C7wTgLhrEe2Kif300Z6m1g" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_C7wTgbhrEe2Kif300Z6m1g" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_C7z94LhrEe2Kif300Z6m1g" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_DFihoLhrEe2Kif300Z6m1g" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_C8kL0LhrEe2Kif300Z6m1g" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_DGF7Q7hrEe2Kif300Z6m1g" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_C-uvA7hrEe2Kif300Z6m1g" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFdpILhrEe2Kif300Z6m1g" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFeQMLhrEe2Kif300Z6m1g" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFeQMrhrEe2Kif300Z6m1g" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DFeQNLhrEe2Kif300Z6m1g" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DFeQNrhrEe2Kif300Z6m1g" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DFkW3bhrEe2Kif300Z6m1g" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DFyZQLhrEe2Kif300Z6m1g" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DF1ckrhrEe2Kif300Z6m1g" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DGFUMLhrEe2Kif300Z6m1g" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DGFUMrhrEe2Kif300Z6m1g" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DGF7QbhrEe2Kif300Z6m1g" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DGNQALhrEe2Kif300Z6m1g" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DGNQArhrEe2Kif300Z6m1g" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_C75dc7hrEe2Kif300Z6m1g" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_DFmMArhrEe2Kif300Z6m1g" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFmMBLhrEe2Kif300Z6m1g" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFuH0rhrEe2Kif300Z6m1g" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFuH1LhrEe2Kif300Z6m1g" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_C75ddLhrEe2Kif300Z6m1g" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_C75ddbhrEe2Kif300Z6m1g" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_DFmMBrhrEe2Kif300Z6m1g" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DFmzEbhrEe2Kif300Z6m1g" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_DFmzE7hrEe2Kif300Z6m1g" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_C8BZQLhrEe2Kif300Z6m1g" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_DFtgwLhrEe2Kif300Z6m1g" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DGVL0rhrEe2Kif300Z6m1g" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_DGVL07hrEe2Kif300Z6m1g" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DGdusbhrEe2Kif300Z6m1g" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_DGkcYbhrEe2Kif300Z6m1g" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C75dcLhrEe2Kif300Z6m1g" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_C75dcbhrEe2Kif300Z6m1g" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_C75dcrhrEe2Kif300Z6m1g" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_DFmMALhrEe2Kif300Z6m1g" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C75ddrhrEe2Kif300Z6m1g" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_C75dd7hrEe2Kif300Z6m1g" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_C8BZQbhrEe2Kif300Z6m1g" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_DFtgyLhrEe2Kif300Z6m1g" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DFuH0LhrEe2Kif300Z6m1g" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFmzFbhrEe2Kif300Z6m1g" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFtgwrhrEe2Kif300Z6m1g" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFtgxLhrEe2Kif300Z6m1g" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DFtgxrhrEe2Kif300Z6m1g" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C7-9ALhrEe2Kif300Z6m1g" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_C7-9AbhrEe2Kif300Z6m1g" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_C7-9ArhrEe2Kif300Z6m1g" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_C7-9A7hrEe2Kif300Z6m1g" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_C7-9BLhrEe2Kif300Z6m1g" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_DFqddbhrEe2Kif300Z6m1g" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_DFqdd7hrEe2Kif300Z6m1g" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DFp2abhrEe2Kif300Z6m1g" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFqdcbhrEe2Kif300Z6m1g" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DFqdc7hrEe2Kif300Z6m1g" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C7_kGbhrEe2Kif300Z6m1g" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DFrEjLhrEe2Kif300Z6m1g" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DFrrlrhrEe2Kif300Z6m1g" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DFrrnbhrEe2Kif300Z6m1g" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DFsSprhrEe2Kif300Z6m1g" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DFsSrbhrEe2Kif300Z6m1g" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DFs5trhrEe2Kif300Z6m1g" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGKzx7hrEe2Kif300Z6m1g" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGLa0rhrEe2Kif300Z6m1g" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGLa2bhrEe2Kif300Z6m1g" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGMB4rhrEe2Kif300Z6m1g" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C8f6YLhrEe2Kif300Z6m1g" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DGBCwLhrEe2Kif300Z6m1g" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGBp0rhrEe2Kif300Z6m1g" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGBp2bhrEe2Kif300Z6m1g" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGCQ4bhrEe2Kif300Z6m1g" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGCQ6LhrEe2Kif300Z6m1g" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGCQ77hrEe2Kif300Z6m1g" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_C8prYLhrEe2Kif300Z6m1g" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_DGIXgLhrEe2Kif300Z6m1g" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGIXgrhrEe2Kif300Z6m1g" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGIXhLhrEe2Kif300Z6m1g" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGIXhrhrEe2Kif300Z6m1g" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DGIXiLhrEe2Kif300Z6m1g" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_CgVi07hrEe2Kif300Z6m1g">
      <eAnnotations xmi:id="_CgVi1LhrEe2Kif300Z6m1g" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_CgVi1bhrEe2Kif300Z6m1g" base_Package="_CeLmsLhrEe2Kif300Z6m1g">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_C9jDQLhrEe2Kif300Z6m1g" genericsValue="T,E" base_Element="_C9icMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C9kRYbhrEe2Kif300Z6m1g" base_Element="_C9kRYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C9kRYrhrEe2Kif300Z6m1g" base_Element="_C9kRYLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C9kRY7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C9kRZbhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C9kRZLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9k4cLhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C9kRZrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9k4crhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C9k4cbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9k4dLhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C9k4c7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9lfgLhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C9k4dbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9uCYrhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_C9uCYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C9weorhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_C9weobhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C90wELhrEe2Kif300Z6m1g" base_Element="_C90JAbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C90wEbhrEe2Kif300Z6m1g" base_Element="_C90JAbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C90wErhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C90wFLhrEe2Kif300Z6m1g" base_Element="_C90wE7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C90wFbhrEe2Kif300Z6m1g" base_Element="_C90wE7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C90wFrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C91XILhrEe2Kif300Z6m1g" base_Element="_C90wF7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C91XIbhrEe2Kif300Z6m1g" base_Element="_C90wF7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C91XIrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C91-MrhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C91-MbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C93MUbhrEe2Kif300Z6m1g" base_Element="_C92lSrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C93MUrhrEe2Kif300Z6m1g" base_Element="_C92lSrhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C93MU7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C93zYbhrEe2Kif300Z6m1g" base_Element="_C93zYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C94acrhrEe2Kif300Z6m1g" base_Element="_C94acLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C94ac7hrEe2Kif300Z6m1g" base_Element="_C94acLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C94adLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C94ad7hrEe2Kif300Z6m1g" base_Element="_C94adbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C94aeLhrEe2Kif300Z6m1g" base_Element="_C94adbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C94aebhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C94ae7hrEe2Kif300Z6m1g" base_Element="_C94aerhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C94afLhrEe2Kif300Z6m1g" base_Element="_C94aerhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C94afbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C99S8LhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_C98r8bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C99S8rhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_C99S8bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C996ALhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_C99S87hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C9-hELhrEe2Kif300Z6m1g" base_Element="_C996B7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C9-hEbhrEe2Kif300Z6m1g" base_Element="_C996B7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C9-hErhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-SDEbhrEe2Kif300Z6m1g" base_Element="_C-SDELhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-SDErhrEe2Kif300Z6m1g" base_Element="_C-SDELhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-SDE7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_C-UfWrhrEe2Kif300Z6m1g" dimensions="2" base_Element="_C-UfVLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-Z-4bhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-Z-4LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-bNALhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-al8LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-cbILhrEe2Kif300Z6m1g" base_Element="_C-b0F7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-cbIbhrEe2Kif300Z6m1g" base_Element="_C-b0F7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-cbIrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-cbKbhrEe2Kif300Z6m1g" base_Element="_C-cbJ7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-cbKrhrEe2Kif300Z6m1g" base_Element="_C-cbJ7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-dCMLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-dCMrhrEe2Kif300Z6m1g" base_Element="_C-dCMbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-dCM7hrEe2Kif300Z6m1g" base_Element="_C-dCMbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-dCNLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-fecLhrEe2Kif300Z6m1g" base_Element="_C-e3abhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-fecbhrEe2Kif300Z6m1g" base_Element="_C-e3abhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-fecrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C-gFgLhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-fec7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-gskbhrEe2Kif300Z6m1g" genericsValue="String, Integer" base_Element="_C-gskLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-hToLhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_C-gskrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_C-hTpLhrEe2Kif300Z6m1g" base_Element="_C-hTobhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-jv4bhrEe2Kif300Z6m1g" base_Element="_C-jv4LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-jv4rhrEe2Kif300Z6m1g" base_Element="_C-jv4LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-jv47hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C-k-AbhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-k-ALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-naR7hrEe2Kif300Z6m1g" base_Element="_C-naRbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-naSLhrEe2Kif300Z6m1g" base_Element="_C-naRbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-naSbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-oBUrhrEe2Kif300Z6m1g" base_Element="_C-oBULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-oBU7hrEe2Kif300Z6m1g" base_Element="_C-oBULhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-oBVLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-oBV7hrEe2Kif300Z6m1g" base_Element="_C-oBVbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-oBWLhrEe2Kif300Z6m1g" base_Element="_C-oBVbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-oBWbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-ooYbhrEe2Kif300Z6m1g" base_Element="_C-ooYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-ooYrhrEe2Kif300Z6m1g" base_Element="_C-ooYLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-ooY7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-ooZbhrEe2Kif300Z6m1g" base_Element="_C-ooZLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-ooZrhrEe2Kif300Z6m1g" base_Element="_C-ooZLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-ooZ7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-ooarhrEe2Kif300Z6m1g" base_Element="_C-ooaLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-ooa7hrEe2Kif300Z6m1g" base_Element="_C-ooaLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-oobLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-oob7hrEe2Kif300Z6m1g" base_Element="_C-oobbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-pPcLhrEe2Kif300Z6m1g" base_Element="_C-oobbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-pPcbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-pPdbhrEe2Kif300Z6m1g" base_Element="_C-pPc7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-pPdrhrEe2Kif300Z6m1g" base_Element="_C-pPc7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-pPd7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C-pPebhrEe2Kif300Z6m1g" genericsValue="String, Integer" base_Element="_C-pPeLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-sSwrhrEe2Kif300Z6m1g" base_Element="_C-sSwbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-sSw7hrEe2Kif300Z6m1g" base_Element="_C-sSwbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-sSxLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-sSxrhrEe2Kif300Z6m1g" base_Element="_C-sSxbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-sSx7hrEe2Kif300Z6m1g" base_Element="_C-sSxbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-sSyLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-s50bhrEe2Kif300Z6m1g" base_Element="_C-s50LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-s50rhrEe2Kif300Z6m1g" base_Element="_C-s50LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-s507hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_C-s517hrEe2Kif300Z6m1g" base_Element="_C-s51LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-s52LhrEe2Kif300Z6m1g" base_Element="_C-s51LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-s52bhrEe2Kif300Z6m1g" base_Element="_C-s51LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-s52rhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_C-s53rhrEe2Kif300Z6m1g" dimensions="2" base_Element="_C-s527hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-s537hrEe2Kif300Z6m1g" base_Element="_C-s527hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-s54LhrEe2Kif300Z6m1g" base_Element="_C-s527hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-s54bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C-tg4bhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-tg4LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-uH8bhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-uH8LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_C-uvBLhrEe2Kif300Z6m1g" base_Element="_C-uvA7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-uvBrhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_C-uvBbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-xLQrhrEe2Kif300Z6m1g" base_Element="_C-xLQbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-xLQ7hrEe2Kif300Z6m1g" base_Element="_C-xLQbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-xLRLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C-xyUbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_C-xyULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-yZZrhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-yZZbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-zAcbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_C-zAcLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-4gArhrEe2Kif300Z6m1g" genericsValue="T extends SchedulableObject" base_Element="_C-4gAbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-5HFbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_C-5HFLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-5uIrhrEe2Kif300Z6m1g" base_Element="_C-5uIbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C-7jUbhrEe2Kif300Z6m1g" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_C-7jULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-9YgrhrEe2Kif300Z6m1g" base_Element="_C-9YgbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-9_l7hrEe2Kif300Z6m1g" base_Element="_C-9_lrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C-_0wbhrEe2Kif300Z6m1g" base_Element="_C-_0wLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C-_0wrhrEe2Kif300Z6m1g" base_Element="_C-_0wLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C-_0w7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_Ab0bhrEe2Kif300Z6m1g" base_Element="_C_Ab0LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_Ab0rhrEe2Kif300Z6m1g" base_Element="_C_Ab0LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_Ab07hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_Ab1rhrEe2Kif300Z6m1g" base_Element="_C_Ab1LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_Ab17hrEe2Kif300Z6m1g" base_Element="_C_Ab1LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_Ab2LhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_C_SvurhrEe2Kif300Z6m1g" base_Element="_C_Svt7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_C_SvvrhrEe2Kif300Z6m1g" dimensions="2" base_Element="_C_Svu7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_T917hrEe2Kif300Z6m1g" base_Element="_C_T91rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_Uk4LhrEe2Kif300Z6m1g" base_Element="_C_T91rhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_Uk4bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_Uk47hrEe2Kif300Z6m1g" base_Element="_C_Uk4rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_Uk5LhrEe2Kif300Z6m1g" base_Element="_C_Uk4rhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_Uk5bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_Uk6LhrEe2Kif300Z6m1g" base_Element="_C_Uk5rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_Uk6bhrEe2Kif300Z6m1g" base_Element="_C_Uk5rhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_Uk6rhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_C_WaErhrEe2Kif300Z6m1g" genericsValue="InstructionParameters" base_Element="_C_WaELhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C_XBILhrEe2Kif300Z6m1g" genericsValue="InstructionParameters" base_Element="_C_WaGLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_ZdYrhrEe2Kif300Z6m1g" base_Element="_C_ZdYbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_ZdY7hrEe2Kif300Z6m1g" base_Element="_C_ZdYbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_ZdZLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_aEcLhrEe2Kif300Z6m1g" base_Element="_C_ZdZbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_aEcbhrEe2Kif300Z6m1g" base_Element="_C_ZdZbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_aEcrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_aEdLhrEe2Kif300Z6m1g" base_Element="_C_aEc7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_aEdbhrEe2Kif300Z6m1g" base_Element="_C_aEc7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_aEdrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_aEeLhrEe2Kif300Z6m1g" base_Element="_C_aEd7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_aEebhrEe2Kif300Z6m1g" base_Element="_C_aEd7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_aEerhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_aEfLhrEe2Kif300Z6m1g" base_Element="_C_aEe7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_aEfbhrEe2Kif300Z6m1g" base_Element="_C_aEe7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_aEfrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_bSkLhrEe2Kif300Z6m1g" base_Element="_C_aEf7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_bSkbhrEe2Kif300Z6m1g" base_Element="_C_aEf7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_bSkrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_bSlbhrEe2Kif300Z6m1g" base_Element="_C_bSk7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_bSlrhrEe2Kif300Z6m1g" base_Element="_C_bSk7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_bSl7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_bSmrhrEe2Kif300Z6m1g" base_Element="_C_bSmLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_bSm7hrEe2Kif300Z6m1g" base_Element="_C_bSmLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_bSnLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_bSn7hrEe2Kif300Z6m1g" base_Element="_C_bSnbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_bSoLhrEe2Kif300Z6m1g" base_Element="_C_bSnbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_bSobhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_bSo7hrEe2Kif300Z6m1g" base_Element="_C_bSorhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_b5oLhrEe2Kif300Z6m1g" base_Element="_C_bSorhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_b5obhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_b5o7hrEe2Kif300Z6m1g" base_Element="_C_b5orhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_b5pLhrEe2Kif300Z6m1g" base_Element="_C_b5orhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_b5pbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_b5qLhrEe2Kif300Z6m1g" base_Element="_C_b5prhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_b5qbhrEe2Kif300Z6m1g" base_Element="_C_b5prhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_b5qrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_b5rbhrEe2Kif300Z6m1g" base_Element="_C_b5q7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_b5rrhrEe2Kif300Z6m1g" base_Element="_C_b5q7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_b5r7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_b5srhrEe2Kif300Z6m1g" base_Element="_C_b5sLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_b5s7hrEe2Kif300Z6m1g" base_Element="_C_b5sLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_b5tLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_cgsbhrEe2Kif300Z6m1g" base_Element="_C_b5tbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_cgsrhrEe2Kif300Z6m1g" base_Element="_C_b5tbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_cgs7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_C_cgtbhrEe2Kif300Z6m1g" base_Element="_C_cgtLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_C_cgtrhrEe2Kif300Z6m1g" base_Element="_C_cgtLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_C_cgt7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_C_gyK7hrEe2Kif300Z6m1g" base_Element="_C_gyKLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_C_hZNbhrEe2Kif300Z6m1g" base_Element="_C_hZMrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_C_hZPbhrEe2Kif300Z6m1g" base_Element="_C_hZObhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_C_iARLhrEe2Kif300Z6m1g" base_Element="_C_iAQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_C_rKMLhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_C_qjMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFdpIbhrEe2Kif300Z6m1g" base_Element="_DFdpILhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFeQMbhrEe2Kif300Z6m1g" base_Element="_DFeQMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFeQM7hrEe2Kif300Z6m1g" base_Element="_DFeQMrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFeQNbhrEe2Kif300Z6m1g" base_Element="_DFeQNLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFeQN7hrEe2Kif300Z6m1g" base_Element="_DFeQNrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFgFY7hrEe2Kif300Z6m1g" base_Element="_DFgFYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFgFZLhrEe2Kif300Z6m1g" base_Element="_DFgFYLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFgFZbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DFgscLhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DFgFcbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DFgsc7hrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DFgscrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DFhTgbhrEe2Kif300Z6m1g" genericsValue="String, Activation" base_Element="_DFhTgLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFihobhrEe2Kif300Z6m1g" base_Element="_DFihoLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFjvw7hrEe2Kif300Z6m1g" base_Element="_DFjvwLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFjvxLhrEe2Kif300Z6m1g" base_Element="_DFjvwLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFjvxbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFk94LhrEe2Kif300Z6m1g" base_Element="_DFkW3bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFlk87hrEe2Kif300Z6m1g" base_Element="_DFlk8LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFlk9LhrEe2Kif300Z6m1g" base_Element="_DFlk8LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFlk9bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFmMAbhrEe2Kif300Z6m1g" base_Element="_DFmMALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmMA7hrEe2Kif300Z6m1g" base_Element="_DFmMArhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmMBbhrEe2Kif300Z6m1g" base_Element="_DFmMBLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmzELhrEe2Kif300Z6m1g" base_Element="_DFmMBrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmzErhrEe2Kif300Z6m1g" base_Element="_DFmzEbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmzFLhrEe2Kif300Z6m1g" base_Element="_DFmzE7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFmzFrhrEe2Kif300Z6m1g" base_Element="_DFmzFbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFoBM7hrEe2Kif300Z6m1g" base_Element="_DFoBMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFoBNLhrEe2Kif300Z6m1g" base_Element="_DFoBMLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFoBNbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DFooQbhrEe2Kif300Z6m1g" genericsValue="String, Flow" base_Element="_DFooQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DFpPUbhrEe2Kif300Z6m1g" genericsValue="Node, Activation" base_Element="_DFpPULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFqdcLhrEe2Kif300Z6m1g" base_Element="_DFp2abhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFqdcrhrEe2Kif300Z6m1g" base_Element="_DFqdcbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFqddLhrEe2Kif300Z6m1g" base_Element="_DFqdc7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFqddrhrEe2Kif300Z6m1g" base_Element="_DFqddbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFqdeLhrEe2Kif300Z6m1g" base_Element="_DFqdd7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFrEgLhrEe2Kif300Z6m1g" base_Element="_DFqdebhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFrEgrhrEe2Kif300Z6m1g" base_Element="_DFrEgbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFrEhLhrEe2Kif300Z6m1g" base_Element="_DFrEg7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFrrkLhrEe2Kif300Z6m1g" base_Element="_DFrEjLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFrrk7hrEe2Kif300Z6m1g" base_Element="_DFrrkbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFrrlLhrEe2Kif300Z6m1g" base_Element="_DFrrkbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFrrlbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFrrl7hrEe2Kif300Z6m1g" base_Element="_DFrrlrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFrrmrhrEe2Kif300Z6m1g" base_Element="_DFrrmLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFrrm7hrEe2Kif300Z6m1g" base_Element="_DFrrmLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFrrnLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFsSoLhrEe2Kif300Z6m1g" base_Element="_DFrrnbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFsSo7hrEe2Kif300Z6m1g" base_Element="_DFsSobhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFsSpLhrEe2Kif300Z6m1g" base_Element="_DFsSobhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFsSpbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFsSp7hrEe2Kif300Z6m1g" base_Element="_DFsSprhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFsSqrhrEe2Kif300Z6m1g" base_Element="_DFsSqLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFsSq7hrEe2Kif300Z6m1g" base_Element="_DFsSqLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFsSrLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFs5sLhrEe2Kif300Z6m1g" base_Element="_DFsSrbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFs5s7hrEe2Kif300Z6m1g" base_Element="_DFs5sbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFs5tLhrEe2Kif300Z6m1g" base_Element="_DFs5sbhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFs5tbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFs5t7hrEe2Kif300Z6m1g" base_Element="_DFs5trhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFs5urhrEe2Kif300Z6m1g" base_Element="_DFs5uLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFs5u7hrEe2Kif300Z6m1g" base_Element="_DFs5uLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFs5vLhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DFtgwbhrEe2Kif300Z6m1g" base_Element="_DFtgwLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFtgw7hrEe2Kif300Z6m1g" base_Element="_DFtgwrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFtgxbhrEe2Kif300Z6m1g" base_Element="_DFtgxLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFtgx7hrEe2Kif300Z6m1g" base_Element="_DFtgxrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFtgybhrEe2Kif300Z6m1g" base_Element="_DFtgyLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFuH0bhrEe2Kif300Z6m1g" base_Element="_DFuH0LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFuH07hrEe2Kif300Z6m1g" base_Element="_DFuH0rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFuu4LhrEe2Kif300Z6m1g" base_Element="_DFuH1LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DFvV8bhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DFvV8LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFvV87hrEe2Kif300Z6m1g" base_Element="_DFvV8rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFwkE7hrEe2Kif300Z6m1g" base_Element="_DFwkELhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFxLILhrEe2Kif300Z6m1g" base_Element="_DFwkELhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFxLIbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DFxLJrhrEe2Kif300Z6m1g" genericsValue="String, Node" base_Element="_DFxLJbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DFyZQbhrEe2Kif300Z6m1g" base_Element="_DFyZQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DFznabhrEe2Kif300Z6m1g" base_Element="_DFznZrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DFznarhrEe2Kif300Z6m1g" base_Element="_DFznZrhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DFzna7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DF0OebhrEe2Kif300Z6m1g" genericsValue="ScheduleTime" base_Element="_DF0OdLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DF01h7hrEe2Kif300Z6m1g" base_Element="_DF01hLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DF01iLhrEe2Kif300Z6m1g" base_Element="_DF01hLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DF01ibhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DF1ckbhrEe2Kif300Z6m1g" base_Element="_DF1ckLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DF1ck7hrEe2Kif300Z6m1g" base_Element="_DF1ckrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF340bhrEe2Kif300Z6m1g" genericsValue="String,InstructionTimeSlot" base_Element="_DF340LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF5G9bhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DF5G8bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF5G_LhrEe2Kif300Z6m1g" genericsValue="Double" base_Element="_DF5G-7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF5uAbhrEe2Kif300Z6m1g" genericsValue="Double,ReliabilityRow" base_Element="_DF5uALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF8xUbhrEe2Kif300Z6m1g" genericsValue="Activation,Row&lt;Activation>" base_Element="_DF8xULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DF9YYLhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DF8xU7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DF9YY7hrEe2Kif300Z6m1g" base_Element="_DF9YYrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DF9_cbhrEe2Kif300Z6m1g" base_Element="_DF9_cLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DF9_c7hrEe2Kif300Z6m1g" base_Element="_DF9_crhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGBCwbhrEe2Kif300Z6m1g" base_Element="_DGBCwLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGBCxLhrEe2Kif300Z6m1g" base_Element="_DGBCwrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGBCxbhrEe2Kif300Z6m1g" base_Element="_DGBCwrhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGBCxrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGBCybhrEe2Kif300Z6m1g" base_Element="_DGBCx7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGBp0LhrEe2Kif300Z6m1g" base_Element="_DGBCx7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGBp0bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGBp07hrEe2Kif300Z6m1g" base_Element="_DGBp0rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGBp1rhrEe2Kif300Z6m1g" base_Element="_DGBp1LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGBp17hrEe2Kif300Z6m1g" base_Element="_DGBp1LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGBp2LhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGBp2rhrEe2Kif300Z6m1g" base_Element="_DGBp2bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGBp3bhrEe2Kif300Z6m1g" base_Element="_DGBp27hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGBp3rhrEe2Kif300Z6m1g" base_Element="_DGBp27hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGCQ4LhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGCQ4rhrEe2Kif300Z6m1g" base_Element="_DGCQ4bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGCQ5bhrEe2Kif300Z6m1g" base_Element="_DGCQ47hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGCQ5rhrEe2Kif300Z6m1g" base_Element="_DGCQ47hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGCQ57hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGCQ6bhrEe2Kif300Z6m1g" base_Element="_DGCQ6LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGCQ7LhrEe2Kif300Z6m1g" base_Element="_DGCQ6rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGCQ7bhrEe2Kif300Z6m1g" base_Element="_DGCQ6rhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGCQ7rhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGC38LhrEe2Kif300Z6m1g" base_Element="_DGCQ77hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGC387hrEe2Kif300Z6m1g" base_Element="_DGC38bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGC39LhrEe2Kif300Z6m1g" base_Element="_DGC38bhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGC39bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGFUMbhrEe2Kif300Z6m1g" base_Element="_DGFUMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGF7QLhrEe2Kif300Z6m1g" base_Element="_DGFUMrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGF7QrhrEe2Kif300Z6m1g" base_Element="_DGF7QbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGF7RLhrEe2Kif300Z6m1g" base_Element="_DGF7Q7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGGiUrhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_DGGiULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGIXgbhrEe2Kif300Z6m1g" base_Element="_DGIXgLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGIXg7hrEe2Kif300Z6m1g" base_Element="_DGIXgrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGIXhbhrEe2Kif300Z6m1g" base_Element="_DGIXhLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGIXh7hrEe2Kif300Z6m1g" base_Element="_DGIXhrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGI-kLhrEe2Kif300Z6m1g" base_Element="_DGIXiLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGKMubhrEe2Kif300Z6m1g" base_Element="_DGKMt7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGKzwLhrEe2Kif300Z6m1g" base_Element="_DGKMt7hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGKzwbhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGKzxLhrEe2Kif300Z6m1g" base_Element="_DGKzwrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGKzxbhrEe2Kif300Z6m1g" base_Element="_DGKzwrhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGKzxrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGKzyLhrEe2Kif300Z6m1g" base_Element="_DGKzx7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGKzy7hrEe2Kif300Z6m1g" base_Element="_DGKzybhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGLa0LhrEe2Kif300Z6m1g" base_Element="_DGKzybhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGLa0bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGLa07hrEe2Kif300Z6m1g" base_Element="_DGLa0rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGLa1rhrEe2Kif300Z6m1g" base_Element="_DGLa1LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGLa17hrEe2Kif300Z6m1g" base_Element="_DGLa1LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGLa2LhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGLa2rhrEe2Kif300Z6m1g" base_Element="_DGLa2bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGLa3bhrEe2Kif300Z6m1g" base_Element="_DGLa27hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGMB4LhrEe2Kif300Z6m1g" base_Element="_DGLa27hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGMB4bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGMB47hrEe2Kif300Z6m1g" base_Element="_DGMB4rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGMB5rhrEe2Kif300Z6m1g" base_Element="_DGMB5LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGMB57hrEe2Kif300Z6m1g" base_Element="_DGMB5LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGMB6LhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGMB67hrEe2Kif300Z6m1g" base_Element="_DGMB6bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGMB7LhrEe2Kif300Z6m1g" base_Element="_DGMB6bhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGMB7bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGMo8LhrEe2Kif300Z6m1g" base_Element="_DGMB7rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGMo8bhrEe2Kif300Z6m1g" base_Element="_DGMB7rhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGMo8rhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGMo9bhrEe2Kif300Z6m1g" base_Element="_DGMo87hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGMo9rhrEe2Kif300Z6m1g" base_Element="_DGMo87hrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGMo97hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGNQAbhrEe2Kif300Z6m1g" base_Element="_DGNQALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGNQA7hrEe2Kif300Z6m1g" base_Element="_DGNQArhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGVL0bhrEe2Kif300Z6m1g" genericsValue="T, E" base_Element="_DGVL0LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGVy4LhrEe2Kif300Z6m1g" base_Element="_DGVL07hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGVy4rhrEe2Kif300Z6m1g" genericsValue="Activation" base_Element="_DGVy4bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGWZ8LhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DGVy5LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGWZ87hrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGWZ8rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGWZ9rhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGWZ9bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGXBALhrEe2Kif300Z6m1g" genericsValue="ScheduleTime" base_Element="_DGWZ-LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGXoELhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGXBAbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGYPI7hrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DGXoFLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGYPJLhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGXoFbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGYPKLhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGYPJ7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGY2MLhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGYPKrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGY2MrhrEe2Kif300Z6m1g" genericsValue="Activation" base_Element="_DGY2MbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGZdQ7hrEe2Kif300Z6m1g" base_Element="_DGZdQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGZdRLhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGZdQbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGZdRbhrEe2Kif300Z6m1g" base_Element="_DGZdQLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGZdRrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGaEUbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGaEULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGaEU7hrEe2Kif300Z6m1g" base_Element="_DGaEUrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGaEWLhrEe2Kif300Z6m1g" base_Element="_DGaEVLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGaEWbhrEe2Kif300Z6m1g" base_Element="_DGaEVLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGaEWrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGarYbhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DGarYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGarY7hrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DGarYrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGbScbhrEe2Kif300Z6m1g" genericsValue="Flow" base_Element="_DGbScLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGb5hbhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGb5hLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGcgkLhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_DGb5h7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGdusrhrEe2Kif300Z6m1g" base_Element="_DGdusbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGeVwbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGeVwLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGeVxrhrEe2Kif300Z6m1g" base_Element="_DGeVwrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGe80LhrEe2Kif300Z6m1g" base_Element="_DGeVwrhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGe80bhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGe807hrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGe80rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGfj4LhrEe2Kif300Z6m1g" base_Element="_DGe81LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGfj4bhrEe2Kif300Z6m1g" base_Element="_DGe81LhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGfj4rhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGfj5LhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGfj47hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGgyAbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGgyALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGhZEbhrEe2Kif300Z6m1g" base_Element="_DGgyArhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGhZErhrEe2Kif300Z6m1g" base_Element="_DGgyArhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGhZE7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGiAILhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGhZF7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_DGiAJbhrEe2Kif300Z6m1g" base_Element="_DGiAIbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGiAJrhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGiAIrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGinMbhrEe2Kif300Z6m1g" base_Element="_DGinMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGinN7hrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGinNrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGjORLhrEe2Kif300Z6m1g" base_Element="_DGjOQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGjORbhrEe2Kif300Z6m1g" base_Element="_DGjOQLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGjORrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DGjOSLhrEe2Kif300Z6m1g" base_Element="_DGjOR7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGkcYrhrEe2Kif300Z6m1g" base_Element="_DGkcYbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGlDcbhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGlDcLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGlqhLhrEe2Kif300Z6m1g" base_Element="_DGlqgLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGlqhbhrEe2Kif300Z6m1g" base_Element="_DGlqgLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGlqhrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGm4obhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGm4oLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGm4p7hrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGm4o7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGnftrhrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGnfsbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGnft7hrEe2Kif300Z6m1g" genericsValue="T" base_Element="_DGnfsrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGot0rhrEe2Kif300Z6m1g" genericsValue="E" base_Element="_DGot0bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGpU4bhrEe2Kif300Z6m1g" base_Element="_DGpU4LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGp78bhrEe2Kif300Z6m1g" base_Element="_DGp78LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_DGqjAbhrEe2Kif300Z6m1g" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_DGp7_bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGqjArhrEe2Kif300Z6m1g" base_Element="_DGp7_bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DGrxIbhrEe2Kif300Z6m1g" base_Element="_DGrxILhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DGsYM7hrEe2Kif300Z6m1g" base_Element="_DGsYMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DGsYNLhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DGsYMbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Annotations xmi:id="_DGsYNbhrEe2Kif300Z6m1g" base_Element="_DGsYMLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DGsYNrhrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DGu0drhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_DGu0cbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG2wQ7hrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DG2wQrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG2wRbhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DG2wRLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG3XULhrEe2Kif300Z6m1g" genericsValue="ScheduleTime" base_Element="_DG2wRrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG3XVrhrEe2Kif300Z6m1g" base_Element="_DG3XVbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG3-YbhrEe2Kif300Z6m1g" base_Element="_DG3-YLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG3-Y7hrEe2Kif300Z6m1g" base_Element="_DG3-YrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG3-abhrEe2Kif300Z6m1g" base_Element="_DG3-aLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG3-a7hrEe2Kif300Z6m1g" base_Element="_DG3-arhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG4lcbhrEe2Kif300Z6m1g" base_Element="_DG4lcLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG4lc7hrEe2Kif300Z6m1g" base_Element="_DG4lcrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG4ldbhrEe2Kif300Z6m1g" genericsValue="ChannelSet" base_Element="_DG4ldLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG4ldrhrEe2Kif300Z6m1g" base_Element="_DG4ldLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG5MgLhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DG4lebhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5MgbhrEe2Kif300Z6m1g" base_Element="_DG4lebhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5Mg7hrEe2Kif300Z6m1g" base_Element="_DG5MgrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG5MhbhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DG5MhLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5MhrhrEe2Kif300Z6m1g" base_Element="_DG5MhLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5MiLhrEe2Kif300Z6m1g" base_Element="_DG5Mh7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5MirhrEe2Kif300Z6m1g" base_Element="_DG5MibhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5zkbhrEe2Kif300Z6m1g" base_Element="_DG5zkLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5zk7hrEe2Kif300Z6m1g" base_Element="_DG5zkrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5zlbhrEe2Kif300Z6m1g" base_Element="_DG5zlLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG5zl7hrEe2Kif300Z6m1g" base_Element="_DG5zlrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG6aqrhrEe2Kif300Z6m1g" base_Element="_DG6aqbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7BvrhrEe2Kif300Z6m1g" base_Element="_DG7BvLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7BwLhrEe2Kif300Z6m1g" base_Element="_DG7Bv7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7BwrhrEe2Kif300Z6m1g" base_Element="_DG7BwbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG7owLhrEe2Kif300Z6m1g" genericsValue="Node" base_Element="_DG7Bw7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7owbhrEe2Kif300Z6m1g" base_Element="_DG7Bw7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG7ow7hrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_DG7owrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7oxLhrEe2Kif300Z6m1g" base_Element="_DG7owrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG7oxrhrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DG7oxbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7ox7hrEe2Kif300Z6m1g" base_Element="_DG7oxbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG7oybhrEe2Kif300Z6m1g" base_Element="_DG7oyLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG8P0bhrEe2Kif300Z6m1g" base_Element="_DG8P0LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG8P27hrEe2Kif300Z6m1g" base_Element="_DG8P2rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG8P3bhrEe2Kif300Z6m1g" base_Element="_DG8P3LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG9d8bhrEe2Kif300Z6m1g" base_Element="_DG9d8LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG9d87hrEe2Kif300Z6m1g" base_Element="_DG9d8rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG9d9bhrEe2Kif300Z6m1g" base_Element="_DG9d9LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG9d97hrEe2Kif300Z6m1g" base_Element="_DG9d9rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG9d-bhrEe2Kif300Z6m1g" base_Element="_DG9d-LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-FAbhrEe2Kif300Z6m1g" base_Element="_DG-FALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-FA7hrEe2Kif300Z6m1g" base_Element="_DG-FArhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-FB7hrEe2Kif300Z6m1g" base_Element="_DG-FBrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-FCrhrEe2Kif300Z6m1g" base_Element="_DG-FCbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-sELhrEe2Kif300Z6m1g" base_Element="_DG-FC7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-sFbhrEe2Kif300Z6m1g" base_Element="_DG-sE7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-sF7hrEe2Kif300Z6m1g" base_Element="_DG-sFrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-sGrhrEe2Kif300Z6m1g" base_Element="_DG-sGbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG-sHLhrEe2Kif300Z6m1g" base_Element="_DG-sG7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG_TILhrEe2Kif300Z6m1g" base_Element="_DG-sHbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG_TIrhrEe2Kif300Z6m1g" base_Element="_DG_TIbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG_TJLhrEe2Kif300Z6m1g" genericsValue="String, Integer" base_Element="_DG_TI7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG_TJbhrEe2Kif300Z6m1g" base_Element="_DG_TI7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG_TK7hrEe2Kif300Z6m1g" base_Element="_DG_TKrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DG_6MbhrEe2Kif300Z6m1g" base_Element="_DG_6MLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DG_6N7hrEe2Kif300Z6m1g" genericsValue="Edge" base_Element="_DG_6NrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHAhSbhrEe2Kif300Z6m1g" base_Element="_DHAhSLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBIULhrEe2Kif300Z6m1g" base_Element="_DHAhSrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBIVbhrEe2Kif300Z6m1g" base_Element="_DHBIUbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBIWrhrEe2Kif300Z6m1g" base_Element="_DHBIVrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBIXLhrEe2Kif300Z6m1g" base_Element="_DHBIW7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHBvYLhrEe2Kif300Z6m1g" genericsValue="Activation" base_Element="_DHBIXbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBvYbhrEe2Kif300Z6m1g" base_Element="_DHBIXbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHBvY7hrEe2Kif300Z6m1g" genericsValue="String, Integer" base_Element="_DHBvYrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBvZLhrEe2Kif300Z6m1g" base_Element="_DHBvYrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHBvZrhrEe2Kif300Z6m1g" base_Element="_DHBvZbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHCWebhrEe2Kif300Z6m1g" base_Element="_DHCWeLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHCWe7hrEe2Kif300Z6m1g" base_Element="_DHCWerhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHCWfbhrEe2Kif300Z6m1g" base_Element="_DHCWfLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHCWf7hrEe2Kif300Z6m1g" base_Element="_DHCWfrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHCWgbhrEe2Kif300Z6m1g" base_Element="_DHCWgLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9gLhrEe2Kif300Z6m1g" base_Element="_DHCWgrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9grhrEe2Kif300Z6m1g" base_Element="_DHC9gbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9hLhrEe2Kif300Z6m1g" base_Element="_DHC9g7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9hrhrEe2Kif300Z6m1g" base_Element="_DHC9hbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9iLhrEe2Kif300Z6m1g" base_Element="_DHC9h7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9irhrEe2Kif300Z6m1g" base_Element="_DHC9ibhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9jLhrEe2Kif300Z6m1g" base_Element="_DHC9i7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHC9jrhrEe2Kif300Z6m1g" base_Element="_DHC9jbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHDklbhrEe2Kif300Z6m1g" base_Element="_DHDklLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHDkl7hrEe2Kif300Z6m1g" base_Element="_DHDklrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHDkmbhrEe2Kif300Z6m1g" base_Element="_DHDkmLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHELpbhrEe2Kif300Z6m1g" base_Element="_DHELpLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHELp7hrEe2Kif300Z6m1g" base_Element="_DHELprhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHELq7hrEe2Kif300Z6m1g" base_Element="_DHELqrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHELrbhrEe2Kif300Z6m1g" base_Element="_DHELrLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEys7hrEe2Kif300Z6m1g" base_Element="_DHEysrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEytbhrEe2Kif300Z6m1g" base_Element="_DHEytLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEyuLhrEe2Kif300Z6m1g" base_Element="_DHEytrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEyurhrEe2Kif300Z6m1g" base_Element="_DHEyubhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEyvLhrEe2Kif300Z6m1g" base_Element="_DHEyu7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEyvrhrEe2Kif300Z6m1g" base_Element="_DHEyvbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHEywLhrEe2Kif300Z6m1g" base_Element="_DHEyv7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHFZwbhrEe2Kif300Z6m1g" base_Element="_DHFZwLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn4bhrEe2Kif300Z6m1g" base_Element="_DHGn4LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn47hrEe2Kif300Z6m1g" base_Element="_DHGn4rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn5bhrEe2Kif300Z6m1g" base_Element="_DHGn5LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn57hrEe2Kif300Z6m1g" base_Element="_DHGn5rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn6bhrEe2Kif300Z6m1g" base_Element="_DHGn6LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn67hrEe2Kif300Z6m1g" base_Element="_DHGn6rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHGn7rhrEe2Kif300Z6m1g" base_Element="_DHGn7LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO8LhrEe2Kif300Z6m1g" base_Element="_DHGn77hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO87hrEe2Kif300Z6m1g" base_Element="_DHHO8bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO9bhrEe2Kif300Z6m1g" base_Element="_DHHO9LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO97hrEe2Kif300Z6m1g" base_Element="_DHHO9rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO-bhrEe2Kif300Z6m1g" base_Element="_DHHO-LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHHO-7hrEe2Kif300Z6m1g" base_Element="_DHHO-rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Array xmi:id="_DHH2ArhrEe2Kif300Z6m1g" dimensions="2" base_Element="_DHH2ALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHH2A7hrEe2Kif300Z6m1g" base_Element="_DHH2ALhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHH2CbhrEe2Kif300Z6m1g" base_Element="_DHH2CLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHH2C7hrEe2Kif300Z6m1g" base_Element="_DHH2CrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHIdELhrEe2Kif300Z6m1g" base_Element="_DHH2DLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJEIbhrEe2Kif300Z6m1g" base_Element="_DHIdIrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJEJbhrEe2Kif300Z6m1g" base_Element="_DHJEJLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHJEJ7hrEe2Kif300Z6m1g" genericsValue="InstructionParameters" base_Element="_DHJEJrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJEKLhrEe2Kif300Z6m1g" base_Element="_DHJEJrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJEKrhrEe2Kif300Z6m1g" base_Element="_DHJEKbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJrMbhrEe2Kif300Z6m1g" base_Element="_DHJrMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJrM7hrEe2Kif300Z6m1g" base_Element="_DHJrMrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJrNbhrEe2Kif300Z6m1g" base_Element="_DHJrNLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHJrN7hrEe2Kif300Z6m1g" base_Element="_DHJrNrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHKSQbhrEe2Kif300Z6m1g" base_Element="_DHKSQLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHKSQ7hrEe2Kif300Z6m1g" base_Element="_DHKSQrhrEe2Kif300Z6m1g">
    <associatedElement xmi:type="uml:Operation" xmi:id="_DHKSRLhrEe2Kif300Z6m1g" name="getNumChannels" method="_DHfCfbhrEe2Kif300Z6m1g">
      <ownedParameter xmi:id="_DHKSRbhrEe2Kif300Z6m1g" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_DHKSRrhrEe2Kif300Z6m1g" base_Element="_DHKSRLhrEe2Kif300Z6m1g">
    <annotations xmi:id="_DHKSR7hrEe2Kif300Z6m1g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHKSSrhrEe2Kif300Z6m1g" base_Element="_DHKSSLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHK5ULhrEe2Kif300Z6m1g" base_Element="_DHKSS7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHLgZLhrEe2Kif300Z6m1g" base_Element="_DHLgYrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHLgabhrEe2Kif300Z6m1g" base_Element="_DHLgZ7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHLgbbhrEe2Kif300Z6m1g" base_Element="_DHLgbLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHMHcbhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DHMHcLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHMHdLhrEe2Kif300Z6m1g" genericsValue="String" base_Element="_DHMHc7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVkrhrEe2Kif300Z6m1g" base_Element="_DHNVkbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVlLhrEe2Kif300Z6m1g" base_Element="_DHNVk7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVlrhrEe2Kif300Z6m1g" base_Element="_DHNVlbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVmLhrEe2Kif300Z6m1g" base_Element="_DHNVl7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVmrhrEe2Kif300Z6m1g" base_Element="_DHNVmbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHNVnLhrEe2Kif300Z6m1g" base_Element="_DHNVm7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8oLhrEe2Kif300Z6m1g" base_Element="_DHNVnbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8orhrEe2Kif300Z6m1g" base_Element="_DHN8obhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8pLhrEe2Kif300Z6m1g" base_Element="_DHN8o7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8prhrEe2Kif300Z6m1g" base_Element="_DHN8pbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8qLhrEe2Kif300Z6m1g" base_Element="_DHN8p7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8qrhrEe2Kif300Z6m1g" base_Element="_DHN8qbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8rLhrEe2Kif300Z6m1g" base_Element="_DHN8q7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8rrhrEe2Kif300Z6m1g" base_Element="_DHN8rbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHN8sbhrEe2Kif300Z6m1g" base_Element="_DHN8r7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHOjsLhrEe2Kif300Z6m1g" base_Element="_DHN8srhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHOjsrhrEe2Kif300Z6m1g" base_Element="_DHOjsbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHOjtLhrEe2Kif300Z6m1g" base_Element="_DHOjs7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHOjtrhrEe2Kif300Z6m1g" base_Element="_DHOjtbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHOjuLhrEe2Kif300Z6m1g" base_Element="_DHOjt7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHPKy7hrEe2Kif300Z6m1g" base_Element="_DHPKyrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHPK0LhrEe2Kif300Z6m1g" base_Element="_DHPKz7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHPx0LhrEe2Kif300Z6m1g" base_Element="_DHPK0bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHPx0rhrEe2Kif300Z6m1g" base_Element="_DHPx0bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHPx2LhrEe2Kif300Z6m1g" genericsValue="Integer" base_Element="_DHPx17hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DHPx2bhrEe2Kif300Z6m1g" base_Element="_DHPx17hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Generics xmi:id="_DHPx27hrEe2Kif300Z6m1g" genericsValue="SchedulableObject" base_Element="_DHPx2rhrEe2Kif300Z6m1g"/>
  <uml:OpaqueBehavior xmi:id="_DHfCfbhrEe2Kif300Z6m1g" name="getNumChannels" specification="_DHKSRLhrEe2Kif300Z6m1g">
    <ownedParameter xmi:id="_DHfCfrhrEe2Kif300Z6m1g" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_DH55IrhrEe2Kif300Z6m1g" base_Element="_DH55ILhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH6gMrhrEe2Kif300Z6m1g" base_Element="_DH6gMLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH6gNbhrEe2Kif300Z6m1g" base_Element="_DH6gM7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH7HQLhrEe2Kif300Z6m1g" base_Element="_DH6gNrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH7HQ7hrEe2Kif300Z6m1g" base_Element="_DH7HQbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH7HRrhrEe2Kif300Z6m1g" base_Element="_DH7HRLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH7uUrhrEe2Kif300Z6m1g" base_Element="_DH7uULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH7uVbhrEe2Kif300Z6m1g" base_Element="_DH7uU7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH8VYrhrEe2Kif300Z6m1g" base_Element="_DH8VYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH8VZbhrEe2Kif300Z6m1g" base_Element="_DH8VY7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH8VaLhrEe2Kif300Z6m1g" base_Element="_DH8VZrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH88cLhrEe2Kif300Z6m1g" base_Element="_DH8VabhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH88c7hrEe2Kif300Z6m1g" base_Element="_DH88cbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH88drhrEe2Kif300Z6m1g" base_Element="_DH88dLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH9jgLhrEe2Kif300Z6m1g" base_Element="_DH88d7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH9jg7hrEe2Kif300Z6m1g" base_Element="_DH9jgbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH9jhrhrEe2Kif300Z6m1g" base_Element="_DH9jhLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH-KkLhrEe2Kif300Z6m1g" base_Element="_DH9jh7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH-Kk7hrEe2Kif300Z6m1g" base_Element="_DH-KkbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH-KlrhrEe2Kif300Z6m1g" base_Element="_DH-KlLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH-KmbhrEe2Kif300Z6m1g" base_Element="_DH-Kl7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH_YsLhrEe2Kif300Z6m1g" base_Element="_DH-KmrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH_Ys7hrEe2Kif300Z6m1g" base_Element="_DH_YsbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH__wLhrEe2Kif300Z6m1g" base_Element="_DH_YtLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH__w7hrEe2Kif300Z6m1g" base_Element="_DH__wbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH__xrhrEe2Kif300Z6m1g" base_Element="_DH__xLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DH__ybhrEe2Kif300Z6m1g" base_Element="_DH__x7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIAm0rhrEe2Kif300Z6m1g" base_Element="_DIAm0LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIAm1bhrEe2Kif300Z6m1g" base_Element="_DIAm07hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIAm2LhrEe2Kif300Z6m1g" base_Element="_DIAm1rhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIBN4LhrEe2Kif300Z6m1g" base_Element="_DIAm2bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIBN47hrEe2Kif300Z6m1g" base_Element="_DIBN4bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIBN5rhrEe2Kif300Z6m1g" base_Element="_DIBN5LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIB08LhrEe2Kif300Z6m1g" base_Element="_DIBN57hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIB087hrEe2Kif300Z6m1g" base_Element="_DIB08bhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIB09rhrEe2Kif300Z6m1g" base_Element="_DIB09LhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DICcALhrEe2Kif300Z6m1g" base_Element="_DIB097hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DICcA7hrEe2Kif300Z6m1g" base_Element="_DICcAbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DICcBrhrEe2Kif300Z6m1g" base_Element="_DICcBLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDDELhrEe2Kif300Z6m1g" base_Element="_DICcB7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDDE7hrEe2Kif300Z6m1g" base_Element="_DIDDEbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDDFrhrEe2Kif300Z6m1g" base_Element="_DIDDFLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDDGbhrEe2Kif300Z6m1g" base_Element="_DIDDF7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDqIrhrEe2Kif300Z6m1g" base_Element="_DIDqILhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDqJbhrEe2Kif300Z6m1g" base_Element="_DIDqI7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIDqKLhrEe2Kif300Z6m1g" base_Element="_DIDqJrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIERMLhrEe2Kif300Z6m1g" base_Element="_DIDqKbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIERM7hrEe2Kif300Z6m1g" base_Element="_DIERMbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIERNrhrEe2Kif300Z6m1g" base_Element="_DIERNLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIE4QLhrEe2Kif300Z6m1g" base_Element="_DIERN7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIE4Q7hrEe2Kif300Z6m1g" base_Element="_DIE4QbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIE4RrhrEe2Kif300Z6m1g" base_Element="_DIE4RLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIE4SbhrEe2Kif300Z6m1g" base_Element="_DIE4R7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIFfUrhrEe2Kif300Z6m1g" base_Element="_DIFfULhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIFfVbhrEe2Kif300Z6m1g" base_Element="_DIFfU7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIFfWLhrEe2Kif300Z6m1g" base_Element="_DIFfVrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGGYrhrEe2Kif300Z6m1g" base_Element="_DIGGYLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGGZbhrEe2Kif300Z6m1g" base_Element="_DIGGY7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGGaLhrEe2Kif300Z6m1g" base_Element="_DIGGZrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGGa7hrEe2Kif300Z6m1g" base_Element="_DIGGabhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGtcLhrEe2Kif300Z6m1g" base_Element="_DIGGbLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGtc7hrEe2Kif300Z6m1g" base_Element="_DIGtcbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGtdrhrEe2Kif300Z6m1g" base_Element="_DIGtdLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIGtebhrEe2Kif300Z6m1g" base_Element="_DIGtd7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIHUgrhrEe2Kif300Z6m1g" base_Element="_DIHUgLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIHUhbhrEe2Kif300Z6m1g" base_Element="_DIHUg7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIHUiLhrEe2Kif300Z6m1g" base_Element="_DIHUhrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIH7kLhrEe2Kif300Z6m1g" base_Element="_DIHUibhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIH7k7hrEe2Kif300Z6m1g" base_Element="_DIH7kbhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIH7lrhrEe2Kif300Z6m1g" base_Element="_DIH7lLhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIH7mbhrEe2Kif300Z6m1g" base_Element="_DIH7l7hrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIIioLhrEe2Kif300Z6m1g" base_Element="_DIH7mrhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Reference xmi:id="_DIIio7hrEe2Kif300Z6m1g" base_Element="_DIIiobhrEe2Kif300Z6m1g"/>
  <UMLLabProfile:Patch xmi:id="_Dk9okLhrEe2Kif300Z6m1g" base_Element="_C93MVLhrEe2Kif300Z6m1g" patchText="@@ -337,26 +337,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0A%09%09RELEASE&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_Dk-PoLhrEe2Kif300Z6m1g" base_Element="_C-YJsLhrEe2Kif300Z6m1g" patchText="@@ -242,22 +242,25 @@&#xA;  MISS%22;%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_Dk-2sLhrEe2Kif300Z6m1g" base_Element="_C-5uILhrEe2Kif300Z6m1g" patchText="@@ -109,18 +109,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0A%09    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_Dk_dwLhrEe2Kif300Z6m1g" base_Element="_C-9YgLhrEe2Kif300Z6m1g" patchText="@@ -134,26 +134,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0A    SOURC&#xA;@@ -269,18 +269,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0A    I&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_DlAr4LhrEe2Kif300Z6m1g" base_Element="_C_j1cLhrEe2Kif300Z6m1g" patchText="@@ -3704,22 +3704,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
